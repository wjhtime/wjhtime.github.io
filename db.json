{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/hexo-theme-next-5.1.4/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"source/images/avatar_center.png","path":"images/avatar_center.png","modified":1,"renderable":0},{"_id":"themes/hexo-theme-next-5.1.4/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/hexo-theme-next-5.1.4/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1535623253000},{"_id":"source/.DS_Store","hash":"c535694871d259969769326dc962014a195385fc","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/.gitignore","hash":"0b5c2ffd41f66eb1849d6426ba8cf9649eeed329","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/README.cn.md","hash":"58ffe752bc4b7f0069fcd6304bbc2d5ff7b80f89","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/README.md","hash":"898213e66d34a46c3cf8446bf693bd50db0d3269","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/_config.yml","hash":"66376f22eb88e7c8b8e332f0688094d3d1198d78","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/bower.json","hash":"0674f11d3d514e087a176da0e1d85c2286aa5fba","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/package.json","hash":"036d3a1346203d2f1a3958024df7f74e7ac07bfe","modified":1535623253000},{"_id":"source/_posts/brackets_match.md","hash":"f6842a9cab076e29fd76b4ac018aed615b5fbc64","modified":1535623253000},{"_id":"source/_posts/composer.md","hash":"167473af0c7964a88065ac8794deca2ef4fb7276","modified":1535623253000},{"_id":"source/_posts/bit_operation.md","hash":"96e3f211489a8d2d9d5fb322a24786df3fe00fbc","modified":1535623253000},{"_id":"source/_posts/binary_search.md","hash":"fb84ca84d0cf96ba3c679b0874a685270bf1e93b","modified":1535623253000},{"_id":"source/_posts/joseph_ring.md","hash":"b917a5ec0962df672e108b358c0435f8ea5b9140","modified":1535623253000},{"_id":"source/_posts/docker_nginx.md","hash":"847991e784b6a162411d22613ca947c2dc78bb1c","modified":1535623253000},{"_id":"source/_posts/cors.md","hash":"d59e0f8c46ff8e0ca6189d9d8371ec767267fea5","modified":1535623253000},{"_id":"source/_posts/docker_mysql.md","hash":"4676323b28c6a90fb9810427ae6d247fe10e8b7b","modified":1535623253000},{"_id":"source/_posts/laravel_queue.md","hash":"5b891201f7e45c6a648146b3b08e5ab10584b60c","modified":1535623253000},{"_id":"source/_posts/kibana.md","hash":"fdc8714cf9860cca9407949c564c11d82add3124","modified":1535623253000},{"_id":"source/_posts/print_char_probability.md","hash":"0f8c7ecf77c7deeddc28daf67c0f9232badafa62","modified":1535703288000},{"_id":"source/_posts/markdown.md","hash":"8ef065c829c7064086bd8ebfa261d6356433cabc","modified":1535623253000},{"_id":"source/_posts/prime_number.md","hash":"7e5a60d811b6df34f8b2463872a90866f11d3dbe","modified":1535623253000},{"_id":"source/_posts/shuffle_array.md","hash":"50cf85e0e3f2937accc6c6d5d6834419b18a7a3e","modified":1535623253000},{"_id":"source/_posts/reverge_array.md","hash":"914d1f9c4467c3f0ed0c3761fd779033230ffb0e","modified":1535623253000},{"_id":"source/_posts/print_array_value.md","hash":"05177a72e40d0a7e1b8868f136c352b7d5e720a7","modified":1535623253000},{"_id":"source/_posts/shuffle_red_package.md","hash":"2d9f2e19ef5efd50220dbbaa44adfea7b20eebdf","modified":1535623253000},{"_id":"source/_posts/sort_algorithm.md","hash":"e59c08f73d6f8d1d5b5d863bcc06b33e6efe6d37","modified":1535623253000},{"_id":"source/_posts/swoole_install.md","hash":"e17401f365b68640b6577a391d2490ba61a71121","modified":1535623253000},{"_id":"source/_posts/split_numbers_and_alphabet.md","hash":"5fd950c8359456bd4c38d6d9677f7045bc0722fc","modified":1535623253000},{"_id":"source/about/index.md","hash":"3ed7402a08ff8c98785d335871f63d4c9ee50807","modified":1535623253000},{"_id":"source/_posts/vi.md","hash":"dcc6c892e04d7f0f4c8ca18f03c5ec73450c7a8c","modified":1535623253000},{"_id":"source/tags/index.md","hash":"7197cb60215c0fc6339fc44ab2a9d29eb6b8f784","modified":1535623253000},{"_id":"source/categories/index.md","hash":"033abbd9a3bfc02b8a152303787334d29909ce28","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/.github/PULL_REQUEST_TEMPLATE.md","hash":"902f627155a65099e0a37842ff396a58d0dc306f","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/.github/ISSUE_TEMPLATE.md","hash":"352093a1b210c72136687fd2eee649244cee402c","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/languages/zh-Hans.yml","hash":"16ef56d0dea94638de7d200984c90ae56f26b4fe","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/languages/vi.yml","hash":"fd08d3c8d2c62965a98ac420fdaf95e54c25d97c","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_layout.swig","hash":"da0929166674ea637e0ad454f85ad0d7bac4aff2","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/scripts/merge-configs.js","hash":"81e86717ecfb775986b945d17f0a4ba27532ef07","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_macro/sidebar.swig","hash":"6a54c3c85ff6b19d275827a327abbf4bd99b2ebf","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_macro/post.swig","hash":"446a35a2cd389f8cfc3aa38973a9b44ad0740134","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_partials/comments.swig","hash":"4a6f5b1792b2e5262b7fdab9a716b3108e2f09c7","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_partials/footer.swig","hash":"c4d6181f5d3db5365e622f78714af8cc58d7a45e","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_partials/head.swig","hash":"6b94fe8f3279daea5623c49ef4bb35917ba57510","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1535623253000},{"_id":"source/images/avatar_center.png","hash":"72ceb5dcd1a113c1e3bbb0ccb0763c49ef161779","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_third-party/analytics/firestore.swig","hash":"1cd01c6e92ab1913d48e556a92bb4f28b6dc4996","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_third-party/comments/valine.swig","hash":"fcabbb241f894c9a6309c44e126cf3e8fea81fd4","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_variables/base.styl","hash":"29c261fa6b4046322559074d75239c6b272fb8a3","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_schemes/Muse/_menu.styl","hash":"02fb8fa6b6c252b6bed469539cd057716606a787","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_schemes/Pisces/_sidebar.styl","hash":"9d16fa3c14ed76b71229f022b63a02fd0f580958","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"12937cae17c96c74d5c58db6cb29de3b2dfa14a2","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/post/post.styl","hash":"262debfd4442fa03d9919ceb88b948339df03fb0","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/tags/full-image.styl","hash":"37e951e734a252fe8a81f452b963df2ba90bfe90","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1535623253000},{"_id":"themes/hexo-theme-next-5.1.4/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1535623253000},{"_id":"public/content.json","hash":"df240b3a66b8003538ded8606915c4e1da32af28","modified":1535703366034},{"_id":"public/search.xml","hash":"d172d5148d45e72a69784a5ada8c5e3e11420dce","modified":1535703366048},{"_id":"public/about/index.html","hash":"26a6b9ab2bfc7dbb80b82dc735bbc2f80e3dab13","modified":1535703366756},{"_id":"public/tags/index.html","hash":"46feb95b5a07fd1a82011d473a3ffde256ab0648","modified":1535703366762},{"_id":"public/categories/index.html","hash":"bfe07e66ef3b7f705d349248999ded84bca5dbb7","modified":1535703366762},{"_id":"public/2018/08/30/shuffle_red_package/index.html","hash":"72eb20bfb9f481b85267fcfcea189d52d917961c","modified":1535703366762},{"_id":"public/2018/08/13/swoole_install/index.html","hash":"680ea0ebdf4ff182db651fa5c7a00cd56e1d7dfa","modified":1535703366762},{"_id":"public/2018/07/29/print_array_value/index.html","hash":"236e13b45010e70f0db2d2ddd56ef1434bc071b0","modified":1535703366762},{"_id":"public/2018/07/25/brackets_match/index.html","hash":"6c27896089f374c7ab64f067b5d015bb361b947e","modified":1535703366762},{"_id":"public/2018/05/10/docker_nginx/index.html","hash":"d0512861f4e25e5fa2d58bb49e1fd1617cbc3405","modified":1535703366762},{"_id":"public/2018/05/10/docker_mysql/index.html","hash":"11124163c81987ee93856d95a2616ae2d491deb0","modified":1535703366762},{"_id":"public/2018/03/23/kibana/index.html","hash":"4775318443d1bf0a63faaa2bdba1827400715436","modified":1535703366762},{"_id":"public/2018/03/07/vi/index.html","hash":"da6a6c76b6e080b74e3857c837fd7af162328497","modified":1535703366763},{"_id":"public/2018/02/04/prime_number/index.html","hash":"a414eee20d09508e4563e6f36910cec44e2e9165","modified":1535703366763},{"_id":"public/2018/02/04/binary_search/index.html","hash":"449fe70bf2e2027502075232f6ada115a3e33df7","modified":1535703366763},{"_id":"public/2018/02/04/split_numbers_and_alphabet/index.html","hash":"132e36960aad667ebb81c80fc55597e3a4f2440b","modified":1535703366763},{"_id":"public/2018/02/04/shuffle_array/index.html","hash":"f963317a0b554386cbde11d692a3f763d85fd3bb","modified":1535703366763},{"_id":"public/2018/02/04/reverge_array/index.html","hash":"dd7a121bb29a66b19ba1e0867b92bbdb1b616440","modified":1535703366763},{"_id":"public/2018/02/04/sort_algorithm/index.html","hash":"32e5efe9a0d04705403808f9ac18b766b5475eef","modified":1535703366763},{"_id":"public/2018/02/04/joseph_ring/index.html","hash":"4da5e63012756bb4254757c9f948d72c02d7c84a","modified":1535703366763},{"_id":"public/2018/02/03/bit_operation/index.html","hash":"05324d75ad3d1e8d49a8766a4e26b3ae2f58403a","modified":1535703366763},{"_id":"public/2018/02/01/markdown/index.html","hash":"1cb36f5744e6b3591be0a6997dbb41157e4d4eab","modified":1535703366764},{"_id":"public/2018/01/15/cors/index.html","hash":"b055a05179e5c4cc7e9c915b27682e04c87b80cf","modified":1535703366764},{"_id":"public/2017/12/21/laravel_queue/index.html","hash":"39c7e9f83a57cff94bc2840b2a2513305d99c5a4","modified":1535703366764},{"_id":"public/2017/08/10/composer/index.html","hash":"11c82891e697e952381870c4bc6f52b0daf0bd09","modified":1535703366764},{"_id":"public/categories/算法/index.html","hash":"11b1a29601472247dd79fc18210678f3680c2e63","modified":1535703366764},{"_id":"public/categories/算法/page/2/index.html","hash":"562a834d06d52671edb646eb78926a08b30db44c","modified":1535703366764},{"_id":"public/categories/php/index.html","hash":"aed883643be3a7902305ef4532e70bec8f58cb17","modified":1535703366764},{"_id":"public/categories/docker/index.html","hash":"b93b90b1f307e014850f2750aed9003f1353458c","modified":1535703366764},{"_id":"public/categories/网络/index.html","hash":"93ce50190f36747ca1a92b92e96f273a9fd4da10","modified":1535703366764},{"_id":"public/categories/学习笔记/index.html","hash":"ec3f0fa6ac839c52f0bea5182e0e8783fb55a342","modified":1535703366764},{"_id":"public/categories/linux/index.html","hash":"9348ed55feaa01004a0ceb7f055079bc877b2ea3","modified":1535703366764},{"_id":"public/categories/laravel/index.html","hash":"20b7f8f9bad9dcdd2e23fb5efa8c7e29921cd5d1","modified":1535703366764},{"_id":"public/archives/index.html","hash":"53a332524965169dd585cb082b13b719dea9a875","modified":1535703366764},{"_id":"public/archives/2017/index.html","hash":"9d3537a310a15cadde08b33d5e8b2fb9a2002f9e","modified":1535703366765},{"_id":"public/archives/2017/08/index.html","hash":"5f000db2905c60b32de31380a7864a0cbd2ae912","modified":1535703366765},{"_id":"public/archives/2017/12/index.html","hash":"9d55e3397e2ca5b7ff8da6ffa05cc04f5fa06a8b","modified":1535703366765},{"_id":"public/archives/2018/index.html","hash":"1b524c34efa0270940d5236fdb95418028ac060f","modified":1535703366765},{"_id":"public/archives/2018/01/index.html","hash":"04e011c3f911e0bcb616007d7964e8d2fb27f566","modified":1535703366765},{"_id":"public/archives/2018/02/index.html","hash":"11904c63f631537837d93275b9e5c0615bb5d3c1","modified":1535703366765},{"_id":"public/archives/2018/03/index.html","hash":"634c238cd59aa1371b0ae964d9ae29d4417916f3","modified":1535703366765},{"_id":"public/2018/08/31/print_char_probability/index.html","hash":"689bb6979cf9c84fc92a16b7136f2f70dc733a8c","modified":1535703366817},{"_id":"public/archives/page/2/index.html","hash":"3b8e16577e449859a0bfb021d4f37702c7e1f3f3","modified":1535703366817},{"_id":"public/archives/2018/05/index.html","hash":"6d427bd4b4156cc6f99bc44260b7dbb77d924b34","modified":1535703366817},{"_id":"public/archives/2018/07/index.html","hash":"bc64dd27d4a1118863fb8bf40e45d62f4ea0c16e","modified":1535703366817},{"_id":"public/archives/2018/08/index.html","hash":"0c8a62d74990ae6661f9ced12bd86ad3e74a8b71","modified":1535703366817},{"_id":"public/index.html","hash":"5536d361e726a91b5e736698419bd4a680570640","modified":1535703366817},{"_id":"public/page/2/index.html","hash":"9d1da8ef67f24ff1e054747b4dcf80b7e6b87798","modified":1535703366818},{"_id":"public/tags/算法/index.html","hash":"ef504aeae98e8f7b4ad0972ae0575fcfe081dfd0","modified":1535703366818},{"_id":"public/tags/算法/page/2/index.html","hash":"ece58b01efe91aaa314e0f5ae2857bb023f5d8dc","modified":1535703366818},{"_id":"public/tags/composer/index.html","hash":"44e12d6c8c025f0594863c97eccf36de82719cc5","modified":1535703366818},{"_id":"public/tags/docker/index.html","hash":"7f551369f92a71a6ccfeeacb1cf8a49739cefd00","modified":1535703366818},{"_id":"public/tags/网络/index.html","hash":"aa6989ede13a735ec8cb5659d349ebc4244f3e42","modified":1535703366818},{"_id":"public/tags/php/index.html","hash":"b3b818c58c2bda1f1cc9baba2e518ed2f67a9d61","modified":1535703366818},{"_id":"public/tags/vi/index.html","hash":"cbbe9607d57cd63117aa9d36d08b49c99ca656de","modified":1535703366818},{"_id":"public/tags/laravel/index.html","hash":"8135cfd1a2dbd1ee8fe0a92162a5efa3dbc9352e","modified":1535703366818},{"_id":"public/page/3/index.html","hash":"3b221b4900f63969f23f9ccc5454130588ded08a","modified":1535703366829},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1535703366829},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1535703366830},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1535703366830},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1535703366830},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1535703366830},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1535703366830},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1535703366830},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1535703366830},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1535703366830},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1535703366830},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1535703366830},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1535703366830},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1535703366830},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1535703366830},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1535703366831},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1535703366831},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1535703366831},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1535703366831},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1535703366831},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1535703366831},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1535703366831},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1535703366831},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1535703366831},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1535703366831},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1535703366832},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1535703366832},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1535703366832},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1535703366832},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1535703366832},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1535703366832},{"_id":"public/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1535703366832},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1535703366832},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1535703366832},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1535703367629},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1535703367644},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1535703367644},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1535703367645},{"_id":"public/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1535703367645},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1535703367645},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1535703367645},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1535703367646},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1535703367646},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1535703367646},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1535703367646},{"_id":"public/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1535703367646},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1535703367646},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1535703367646},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1535703367646},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1535703367646},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1535703367646},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1535703367646},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1535703367646},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1535703367647},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1535703367647},{"_id":"public/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1535703367647},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1535703367647},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1535703367647},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1535703367647},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1535703367647},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1535703367647},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1535703367647},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1535703367647},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1535703367647},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1535703367647},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1535703367648},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1535703367648},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1535703367648},{"_id":"public/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1535703367648},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1535703367648},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1535703367648},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1535703367648},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1535703367648},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1535703367648},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1535703367648},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1535703367648},{"_id":"public/css/main.css","hash":"b1d9f8355bf0c1f4cce0b64ac53eca96ee0e94d3","modified":1535703367648},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1535703367648},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1535703367649},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1535703367649},{"_id":"public/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1535703367660},{"_id":"public/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1535703367661},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1535703367662},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1535703367662},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1535703367662},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1535703367663},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1535703367663},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1535703367663},{"_id":"public/images/avatar_center.png","hash":"72ceb5dcd1a113c1e3bbb0ccb0763c49ef161779","modified":1535703367664},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1535703367664},{"_id":"public/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1535703367707},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1535703367707},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1535703367719},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1535703367719},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1535703367785},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1535703367785},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1535703367787},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1535703367787},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1535703367787},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1535703367788},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1535703367788},{"_id":"public/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1535703367793},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1535703367793},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1535703367794},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1535703367797},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1535703367811},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1535703367813},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1535703367814},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1535703367818},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1535703367833},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1535703367839}],"Category":[{"name":"算法","_id":"cjlhq4qwd0004qkka4uszypym"},{"name":"php","_id":"cjlhq4qwz000nqkkajccwzq0o"},{"name":"docker","_id":"cjlhq4qx5000uqkkal569cfte"},{"name":"网络","_id":"cjlhq4qx90011qkkastl90c93"},{"name":"学习笔记","_id":"cjlhq4qxh001iqkka7fap49f4"},{"name":"linux","_id":"cjlhq4qxp001yqkkas5jfnh96"},{"name":"laravel","_id":"cjlhq4r0i0029qkkaf0ziyl31"}],"Data":[],"Page":[{"title":"about","date":"2018-07-16T06:40:02.000Z","_content":"\n\n{% centerquote %}Hello World{% endcenterquote %}","source":"about/index.md","raw":"---\ntitle: about\ndate: 2018-07-16 14:40:02\n---\n\n\n{% centerquote %}Hello World{% endcenterquote %}","updated":"2018-08-30T10:00:53.000Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjlhq4qw70001qkkargax19ei","content":"<blockquote class=\"blockquote-center\"><p>Hello World</p>\n</blockquote>","site":{"data":{}},"excerpt":"","more":"<blockquote class=\"blockquote-center\"><p>Hello World</p>\n</blockquote>"},{"title":"tags","date":"2018-07-16T06:40:44.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2018-07-16 14:40:44\ntype: \"tags\"\n---\n","updated":"2018-08-30T10:00:53.000Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjlhq4qwb0003qkka9gvttzqc","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"categories","date":"2018-07-16T06:10:54.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2018-07-16 14:10:54\ntype: \"categories\"\n---\n","updated":"2018-08-30T10:00:53.000Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjlhq4qwg0007qkkavbxlrx2x","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"括号匹配问题","date":"2018-07-24T16:00:00.000Z","_content":"\n\n\n验证括号是否匹配 `{1+2}+[(3+4)*5]*6-1` ，这种类型的字符串，括号必须成对出现，否则不符合要求\n\n### 实现\n\n```php\n$str = \"{1+2}+[(3+4)*5]*6-1\";\n$search = \"[](){}\";\n\nfunction check_match($str, $search){\n    $result = [];\n    $length = strlen($str);\n    for ($i=0; $i<$length; $i++){\n        if (strstr($search, $str[$i])){\n            $tmp = array_pop($result);\n            if ($tmp){\n                $pos = strpos($search, $tmp);\n                if ($search[$pos+1] == $str[$i]) {\n                    continue;\n                }\n                array_push($result, $tmp);\n            }\n            array_push($result, $str[$i]);\n        }\n    }\n    if (count($result)>0) return false;\n    return true;\n}\n\n$result = check_match($str, $search);\nvar_dump($result);\n```\n\n","source":"_posts/brackets_match.md","raw":"---\ntitle: 括号匹配问题\ndate: 2018-07-25\ncategories: 算法\ntags: 算法\n---\n\n\n\n验证括号是否匹配 `{1+2}+[(3+4)*5]*6-1` ，这种类型的字符串，括号必须成对出现，否则不符合要求\n\n### 实现\n\n```php\n$str = \"{1+2}+[(3+4)*5]*6-1\";\n$search = \"[](){}\";\n\nfunction check_match($str, $search){\n    $result = [];\n    $length = strlen($str);\n    for ($i=0; $i<$length; $i++){\n        if (strstr($search, $str[$i])){\n            $tmp = array_pop($result);\n            if ($tmp){\n                $pos = strpos($search, $tmp);\n                if ($search[$pos+1] == $str[$i]) {\n                    continue;\n                }\n                array_push($result, $tmp);\n            }\n            array_push($result, $str[$i]);\n        }\n    }\n    if (count($result)>0) return false;\n    return true;\n}\n\n$result = check_match($str, $search);\nvar_dump($result);\n```\n\n","slug":"brackets_match","published":1,"updated":"2018-08-30T10:00:53.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlhq4qw20000qkka3jxspt2q","content":"<p>验证括号是否匹配 <code>{1+2}+[(3+4)*5]*6-1</code> ，这种类型的字符串，括号必须成对出现，否则不符合要求</p>\n<h3 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$str = <span class=\"string\">\"&#123;1+2&#125;+[(3+4)*5]*6-1\"</span>;</span><br><span class=\"line\">$search = <span class=\"string\">\"[]()&#123;&#125;\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">check_match</span><span class=\"params\">($str, $search)</span></span>&#123;</span><br><span class=\"line\">    $result = [];</span><br><span class=\"line\">    $length = strlen($str);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> ($i=<span class=\"number\">0</span>; $i&lt;$length; $i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (strstr($search, $str[$i]))&#123;</span><br><span class=\"line\">            $tmp = array_pop($result);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> ($tmp)&#123;</span><br><span class=\"line\">                $pos = strpos($search, $tmp);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> ($search[$pos+<span class=\"number\">1</span>] == $str[$i]) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                array_push($result, $tmp);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            array_push($result, $str[$i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (count($result)&gt;<span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$result = check_match($str, $search);</span><br><span class=\"line\">var_dump($result);</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>验证括号是否匹配 <code>{1+2}+[(3+4)*5]*6-1</code> ，这种类型的字符串，括号必须成对出现，否则不符合要求</p>\n<h3 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$str = <span class=\"string\">\"&#123;1+2&#125;+[(3+4)*5]*6-1\"</span>;</span><br><span class=\"line\">$search = <span class=\"string\">\"[]()&#123;&#125;\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">check_match</span><span class=\"params\">($str, $search)</span></span>&#123;</span><br><span class=\"line\">    $result = [];</span><br><span class=\"line\">    $length = strlen($str);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> ($i=<span class=\"number\">0</span>; $i&lt;$length; $i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (strstr($search, $str[$i]))&#123;</span><br><span class=\"line\">            $tmp = array_pop($result);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> ($tmp)&#123;</span><br><span class=\"line\">                $pos = strpos($search, $tmp);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> ($search[$pos+<span class=\"number\">1</span>] == $str[$i]) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                array_push($result, $tmp);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            array_push($result, $str[$i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (count($result)&gt;<span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$result = check_match($str, $search);</span><br><span class=\"line\">var_dump($result);</span><br></pre></td></tr></table></figure>\n"},{"title":"二分查找","date":"2018-02-03T16:00:00.000Z","_content":"\n二分查找的前提是数组已经排序好\n\n#### 思路\n```\n1. 取出最小下标low和最大下标high\n2. 使用while循环\n3. 取出中间位置\n4. 再拿target和中间位置的数做比较，如果大于，则将low = middle+1，降低数据查找的范围。\n```\n\n#### 实现\n```php\nfunction binary_search($arr, $target) {\n    $high = count($arr);\n    $low = 0;\n    while ($high >= $low){\n        $middle = floor(($high + $low) / 2);\n        if ($target > $arr[$middle]){\n            $low = $middle + 1;\n        }elseif ($target < $arr[$middle]) {\n            $high = $middle - 1;\n        }else {\n            return $middle;\n        }\n    }\n}\n```","source":"_posts/binary_search.md","raw":"---\ntitle: 二分查找\ndate: 2018-02-04\ncategories: 算法\ntags: 算法\n---\n\n二分查找的前提是数组已经排序好\n\n#### 思路\n```\n1. 取出最小下标low和最大下标high\n2. 使用while循环\n3. 取出中间位置\n4. 再拿target和中间位置的数做比较，如果大于，则将low = middle+1，降低数据查找的范围。\n```\n\n#### 实现\n```php\nfunction binary_search($arr, $target) {\n    $high = count($arr);\n    $low = 0;\n    while ($high >= $low){\n        $middle = floor(($high + $low) / 2);\n        if ($target > $arr[$middle]){\n            $low = $middle + 1;\n        }elseif ($target < $arr[$middle]) {\n            $high = $middle - 1;\n        }else {\n            return $middle;\n        }\n    }\n}\n```","slug":"binary_search","published":1,"updated":"2018-08-30T10:00:53.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlhq4qw90002qkkacpfqi0xy","content":"<p>二分查找的前提是数组已经排序好</p>\n<h4 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 取出最小下标low和最大下标high</span><br><span class=\"line\">2. 使用while循环</span><br><span class=\"line\">3. 取出中间位置</span><br><span class=\"line\">4. 再拿target和中间位置的数做比较，如果大于，则将low = middle+1，降低数据查找的范围。</span><br></pre></td></tr></table></figure>\n<h4 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">binary_search</span><span class=\"params\">($arr, $target)</span> </span>&#123;</span><br><span class=\"line\">    $high = count($arr);</span><br><span class=\"line\">    $low = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> ($high &gt;= $low)&#123;</span><br><span class=\"line\">        $middle = floor(($high + $low) / <span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ($target &gt; $arr[$middle])&#123;</span><br><span class=\"line\">            $low = $middle + <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">elseif</span> ($target &lt; $arr[$middle]) &#123;</span><br><span class=\"line\">            $high = $middle - <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> $middle;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>二分查找的前提是数组已经排序好</p>\n<h4 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 取出最小下标low和最大下标high</span><br><span class=\"line\">2. 使用while循环</span><br><span class=\"line\">3. 取出中间位置</span><br><span class=\"line\">4. 再拿target和中间位置的数做比较，如果大于，则将low = middle+1，降低数据查找的范围。</span><br></pre></td></tr></table></figure>\n<h4 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">binary_search</span><span class=\"params\">($arr, $target)</span> </span>&#123;</span><br><span class=\"line\">    $high = count($arr);</span><br><span class=\"line\">    $low = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> ($high &gt;= $low)&#123;</span><br><span class=\"line\">        $middle = floor(($high + $low) / <span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ($target &gt; $arr[$middle])&#123;</span><br><span class=\"line\">            $low = $middle + <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">elseif</span> ($target &lt; $arr[$middle]) &#123;</span><br><span class=\"line\">            $high = $middle - <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> $middle;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"位运算","date":"2018-02-02T16:00:00.000Z","_content":"\n### 基础语法\n\n| 符号 | 描述 | 规则                                                         |\n| ---- | ---- | ------------------------------------------------------------ |\n| &    | 与   | 两位都是1时，结果为1                                         |\n| 丨  | 或   | 两位有一个为1时，结果为1，否则为0                            |\n| ^    | 异或 | 两位相同时为0，不同时为1                                     |\n| ~    | 取反 | 0变1，1变0                                                   |\n| <<   | 左移 | 二进制全部位向左移动若干位，高位丢弃，低位补0                |\n| >>   | 右移 | 二进制全部位向右移动若干位，高位补0（无符号），有符号数，算数右移补符号位，逻辑右移不补符号位 |\n\n\n### 常用算法\n#### 判断是否是奇数\n\n```php\n$num = mt_rand(1, 1000);\nif ($num & 1){\n    echo '奇数:' . $num\n}\n\n因为1的二进制为 000001，最后一位是1，两位相与，奇数会返回1，偶数会返回0\n```\n\n#### 交换两数\n```php\nfunction swap(&$a, &$b){\n    $a ^= $b;\n    $b ^= $a;\n    $a ^= $b;\n}\n\n使用异或操作\n第一步：$a = $a ^ $b\n第二步：$b = $a ^ $b ^ $b\n第三步：$a = $a ^ $b ^ $b ^ $a\n\n\n两个结论\n1. 相同的数进行异或操作结果为0\n2. 任何数和0进行异或操作结果都为本身\n```\n\n#### 变换符号\n```php\n$a = 100;\n~$a + 1\n\n取$a的相反数，正负号进行转换\n```\n\n#### 计算绝对值\n```php\n$a = -100;\n//把31位全部移动，正数只会是0，负数会把最高位的1补齐，所以是-1\n$i = $a >> 31;\nreturn $i == 0 ? $a : ~$a + 1\n将a右移31位，如果是正数，结果为0，负数结果为-1\n\n另一种方法：\n$a = -100;\n$i = $a >> 31;\nreturn ($a ^ $i) - $i;\n```\n\n\n","source":"_posts/bit_operation.md","raw":"---\ntitle: 位运算\ndate: 2018-02-03\ncategories: 算法\ntags: 算法\n---\n\n### 基础语法\n\n| 符号 | 描述 | 规则                                                         |\n| ---- | ---- | ------------------------------------------------------------ |\n| &    | 与   | 两位都是1时，结果为1                                         |\n| 丨  | 或   | 两位有一个为1时，结果为1，否则为0                            |\n| ^    | 异或 | 两位相同时为0，不同时为1                                     |\n| ~    | 取反 | 0变1，1变0                                                   |\n| <<   | 左移 | 二进制全部位向左移动若干位，高位丢弃，低位补0                |\n| >>   | 右移 | 二进制全部位向右移动若干位，高位补0（无符号），有符号数，算数右移补符号位，逻辑右移不补符号位 |\n\n\n### 常用算法\n#### 判断是否是奇数\n\n```php\n$num = mt_rand(1, 1000);\nif ($num & 1){\n    echo '奇数:' . $num\n}\n\n因为1的二进制为 000001，最后一位是1，两位相与，奇数会返回1，偶数会返回0\n```\n\n#### 交换两数\n```php\nfunction swap(&$a, &$b){\n    $a ^= $b;\n    $b ^= $a;\n    $a ^= $b;\n}\n\n使用异或操作\n第一步：$a = $a ^ $b\n第二步：$b = $a ^ $b ^ $b\n第三步：$a = $a ^ $b ^ $b ^ $a\n\n\n两个结论\n1. 相同的数进行异或操作结果为0\n2. 任何数和0进行异或操作结果都为本身\n```\n\n#### 变换符号\n```php\n$a = 100;\n~$a + 1\n\n取$a的相反数，正负号进行转换\n```\n\n#### 计算绝对值\n```php\n$a = -100;\n//把31位全部移动，正数只会是0，负数会把最高位的1补齐，所以是-1\n$i = $a >> 31;\nreturn $i == 0 ? $a : ~$a + 1\n将a右移31位，如果是正数，结果为0，负数结果为-1\n\n另一种方法：\n$a = -100;\n$i = $a >> 31;\nreturn ($a ^ $i) - $i;\n```\n\n\n","slug":"bit_operation","published":1,"updated":"2018-08-30T10:00:53.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlhq4qwf0006qkkao17q0nx4","content":"<h3 id=\"基础语法\"><a href=\"#基础语法\" class=\"headerlink\" title=\"基础语法\"></a>基础语法</h3><table>\n<thead>\n<tr>\n<th>符号</th>\n<th>描述</th>\n<th>规则</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>&amp;</td>\n<td>与</td>\n<td>两位都是1时，结果为1</td>\n</tr>\n<tr>\n<td>丨</td>\n<td>或</td>\n<td>两位有一个为1时，结果为1，否则为0</td>\n</tr>\n<tr>\n<td>^</td>\n<td>异或</td>\n<td>两位相同时为0，不同时为1</td>\n</tr>\n<tr>\n<td>~</td>\n<td>取反</td>\n<td>0变1，1变0</td>\n</tr>\n<tr>\n<td>&lt;&lt;</td>\n<td>左移</td>\n<td>二进制全部位向左移动若干位，高位丢弃，低位补0</td>\n</tr>\n<tr>\n<td>&gt;&gt;</td>\n<td>右移</td>\n<td>二进制全部位向右移动若干位，高位补0（无符号），有符号数，算数右移补符号位，逻辑右移不补符号位</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"常用算法\"><a href=\"#常用算法\" class=\"headerlink\" title=\"常用算法\"></a>常用算法</h3><h4 id=\"判断是否是奇数\"><a href=\"#判断是否是奇数\" class=\"headerlink\" title=\"判断是否是奇数\"></a>判断是否是奇数</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$num = mt_rand(<span class=\"number\">1</span>, <span class=\"number\">1000</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span> ($num &amp; <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">'奇数:'</span> . $num</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">因为<span class=\"number\">1</span>的二进制为 <span class=\"number\">000001</span>，最后一位是<span class=\"number\">1</span>，两位相与，奇数会返回<span class=\"number\">1</span>，偶数会返回<span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"交换两数\"><a href=\"#交换两数\" class=\"headerlink\" title=\"交换两数\"></a>交换两数</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">swap</span><span class=\"params\">(&amp;$a, &amp;$b)</span></span>&#123;</span><br><span class=\"line\">    $a ^= $b;</span><br><span class=\"line\">    $b ^= $a;</span><br><span class=\"line\">    $a ^= $b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">使用异或操作</span><br><span class=\"line\">第一步：$a = $a ^ $b</span><br><span class=\"line\">第二步：$b = $a ^ $b ^ $b</span><br><span class=\"line\">第三步：$a = $a ^ $b ^ $b ^ $a</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">两个结论</span><br><span class=\"line\"><span class=\"number\">1.</span> 相同的数进行异或操作结果为<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"number\">2.</span> 任何数和<span class=\"number\">0</span>进行异或操作结果都为本身</span><br></pre></td></tr></table></figure>\n<h4 id=\"变换符号\"><a href=\"#变换符号\" class=\"headerlink\" title=\"变换符号\"></a>变换符号</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$a = <span class=\"number\">100</span>;</span><br><span class=\"line\">~$a + <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">取$a的相反数，正负号进行转换</span><br></pre></td></tr></table></figure>\n<h4 id=\"计算绝对值\"><a href=\"#计算绝对值\" class=\"headerlink\" title=\"计算绝对值\"></a>计算绝对值</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$a = <span class=\"number\">-100</span>;</span><br><span class=\"line\"><span class=\"comment\">//把31位全部移动，正数只会是0，负数会把最高位的1补齐，所以是-1</span></span><br><span class=\"line\">$i = $a &gt;&gt; <span class=\"number\">31</span>;</span><br><span class=\"line\"><span class=\"keyword\">return</span> $i == <span class=\"number\">0</span> ? $a : ~$a + <span class=\"number\">1</span></span><br><span class=\"line\">将a右移<span class=\"number\">31</span>位，如果是正数，结果为<span class=\"number\">0</span>，负数结果为<span class=\"number\">-1</span></span><br><span class=\"line\"></span><br><span class=\"line\">另一种方法：</span><br><span class=\"line\">$a = <span class=\"number\">-100</span>;</span><br><span class=\"line\">$i = $a &gt;&gt; <span class=\"number\">31</span>;</span><br><span class=\"line\"><span class=\"keyword\">return</span> ($a ^ $i) - $i;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"基础语法\"><a href=\"#基础语法\" class=\"headerlink\" title=\"基础语法\"></a>基础语法</h3><table>\n<thead>\n<tr>\n<th>符号</th>\n<th>描述</th>\n<th>规则</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>&amp;</td>\n<td>与</td>\n<td>两位都是1时，结果为1</td>\n</tr>\n<tr>\n<td>丨</td>\n<td>或</td>\n<td>两位有一个为1时，结果为1，否则为0</td>\n</tr>\n<tr>\n<td>^</td>\n<td>异或</td>\n<td>两位相同时为0，不同时为1</td>\n</tr>\n<tr>\n<td>~</td>\n<td>取反</td>\n<td>0变1，1变0</td>\n</tr>\n<tr>\n<td>&lt;&lt;</td>\n<td>左移</td>\n<td>二进制全部位向左移动若干位，高位丢弃，低位补0</td>\n</tr>\n<tr>\n<td>&gt;&gt;</td>\n<td>右移</td>\n<td>二进制全部位向右移动若干位，高位补0（无符号），有符号数，算数右移补符号位，逻辑右移不补符号位</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"常用算法\"><a href=\"#常用算法\" class=\"headerlink\" title=\"常用算法\"></a>常用算法</h3><h4 id=\"判断是否是奇数\"><a href=\"#判断是否是奇数\" class=\"headerlink\" title=\"判断是否是奇数\"></a>判断是否是奇数</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$num = mt_rand(<span class=\"number\">1</span>, <span class=\"number\">1000</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span> ($num &amp; <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">'奇数:'</span> . $num</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">因为<span class=\"number\">1</span>的二进制为 <span class=\"number\">000001</span>，最后一位是<span class=\"number\">1</span>，两位相与，奇数会返回<span class=\"number\">1</span>，偶数会返回<span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"交换两数\"><a href=\"#交换两数\" class=\"headerlink\" title=\"交换两数\"></a>交换两数</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">swap</span><span class=\"params\">(&amp;$a, &amp;$b)</span></span>&#123;</span><br><span class=\"line\">    $a ^= $b;</span><br><span class=\"line\">    $b ^= $a;</span><br><span class=\"line\">    $a ^= $b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">使用异或操作</span><br><span class=\"line\">第一步：$a = $a ^ $b</span><br><span class=\"line\">第二步：$b = $a ^ $b ^ $b</span><br><span class=\"line\">第三步：$a = $a ^ $b ^ $b ^ $a</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">两个结论</span><br><span class=\"line\"><span class=\"number\">1.</span> 相同的数进行异或操作结果为<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"number\">2.</span> 任何数和<span class=\"number\">0</span>进行异或操作结果都为本身</span><br></pre></td></tr></table></figure>\n<h4 id=\"变换符号\"><a href=\"#变换符号\" class=\"headerlink\" title=\"变换符号\"></a>变换符号</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$a = <span class=\"number\">100</span>;</span><br><span class=\"line\">~$a + <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">取$a的相反数，正负号进行转换</span><br></pre></td></tr></table></figure>\n<h4 id=\"计算绝对值\"><a href=\"#计算绝对值\" class=\"headerlink\" title=\"计算绝对值\"></a>计算绝对值</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$a = <span class=\"number\">-100</span>;</span><br><span class=\"line\"><span class=\"comment\">//把31位全部移动，正数只会是0，负数会把最高位的1补齐，所以是-1</span></span><br><span class=\"line\">$i = $a &gt;&gt; <span class=\"number\">31</span>;</span><br><span class=\"line\"><span class=\"keyword\">return</span> $i == <span class=\"number\">0</span> ? $a : ~$a + <span class=\"number\">1</span></span><br><span class=\"line\">将a右移<span class=\"number\">31</span>位，如果是正数，结果为<span class=\"number\">0</span>，负数结果为<span class=\"number\">-1</span></span><br><span class=\"line\"></span><br><span class=\"line\">另一种方法：</span><br><span class=\"line\">$a = <span class=\"number\">-100</span>;</span><br><span class=\"line\">$i = $a &gt;&gt; <span class=\"number\">31</span>;</span><br><span class=\"line\"><span class=\"keyword\">return</span> ($a ^ $i) - $i;</span><br></pre></td></tr></table></figure>\n"},{"title":"composer命令及其配置","date":"2017-08-09T16:00:00.000Z","_content":"\n\n\n\n\n### 配置文件\n\n```shell\n查看所有配置项，一些看不懂的没有列出来\n\ncomposer config -l\n\n[repositories.packagist.org.type] composer\n//仓库地址\n[repositories.packagist.org.url] https://packagist.org\n[repositories.packagist.org.allow_ssl_downgrade] true\n...\n[github-protocols] [https, ssh]\n[vendor-dir] vendor (/Users/user/Sites/atom/packages/tuling/vendor)\n[bin-dir] {$vendor-dir}/bin (/Users/user/Sites/atom/packages/tuling/vendor/bin)\n[cache-dir] /Users/user/.composer/cache\n[data-dir] /Users/user/.composer\n\n//缓存地址\n[cache-files-dir] {$cache-dir}/files (/Users/user/.composer/cache/files)\n[cache-repo-dir] {$cache-dir}/repo (/Users/user/.composer/cache/repo)\n[cache-vcs-dir] {$cache-dir}/vcs (/Users/user/.composer/cache/vcs)\n[cache-ttl] 15552000\n[cache-files-ttl] 15552000\n[cache-files-maxsize] 300MiB (314572800)\n...\n//composer全局配置地址\n[home] /Users/user/.composer\n```\n\n\n\n### require包的版本号规则\n\n```\n常用版本号规则，确定版本号、版本号范围、版本号通配符，2、3、4是常用的版本号规则\n>= 是范围符号，大于某个\n\n//指定确定版本号\n1. 1.0.2    \n\n//在某个版本号的范围之内，可以加逗号、或运算符，>=1.0,<2.0  >=1.0|<2.0  逗号表示and，两个范围之内的版本号，|表示或者\n2. >=1.0    \n\n// *星号表示匹配任意值，例如：表示1.0.*下的任意版本，等效于>=1.0,<1.1\n3. 1.0.*    \n\n//~波浪号表示在某一个重要版本下的小版本升级\n例如：在1.2.2版本之上升级，但是不升级到1.3.0版本  1.2 >= 版本号 < 1.3.0\n避免高版本不兼容低版本\n4. ~1.2.2     \n\n//^和~类似， 1.2.3 <= 版本号 < 2.0.0\n//比~的范围更广，匹配下一个重要版本（官网上没有，但实际中经常见到）\n5. ^1.2.3\n```\n\n\n\n### composer.json示例文件\n\n```json\n// composer.json配置文件\n\n\"type\": \"library\",  //默认为library\n\"require\": {\n    //对php有版本限制\n    \"php\": \">=5.6\",\n    //要求php扩展，必须安装ext-mbstring\n    \"ext-mbstring\": \"*\",\n    //要求php库，必须安装lib-curl\n    \"lib-curl\": \"*\"\n},\n\"require-dev\": {},\n\"autoload\": {\n     \"psr-4\": {\n         \"App\\\\\": \"app/\",\n          \"Monolog\\\\\": [\"src/\", \"lib/\"]\n     },\n     \"psr-0\": {\n         \"Monolog\\\\\": [\"src/\", \"lib/\"] \n     },\n     \"classmap\": {     //不遵循psr-0/4规范\n         \"database\" \n     },\n     \"files\": {     //作为函数库引入\n         [\"url/to/your/helpers.php\"] \n     }\n},\n\"repositories\": {\n     \"packagist\": {\n         \"type\": \"composer\",\n         \"url\": \"https://packagist.phpcomposer.com\"\n     }\n},\n//最低版本要求，尽量不要安装dev-master版本的包，安装稳定版\n\"minimum-stability\": \"stable\"\n```\n\n\n\n### 常用命令\n\n```shell\n//查看软件包被哪些包依赖\ncomposer depends guzzlehttp/guzzle\n\ncomposer init\ncomposer require\ncomposer update\ncomposer install \n     —no-dev 跳过require-dev中列出的包\n     —dev 安装require-dev列出的包\n     \n//重建索引\ncomposer dump-autoload\n```\n\n","source":"_posts/composer.md","raw":"---\ntitle: composer命令及其配置\ndate: 2017-08-10\ncategories: php\ntags: composer\n---\n\n\n\n\n\n### 配置文件\n\n```shell\n查看所有配置项，一些看不懂的没有列出来\n\ncomposer config -l\n\n[repositories.packagist.org.type] composer\n//仓库地址\n[repositories.packagist.org.url] https://packagist.org\n[repositories.packagist.org.allow_ssl_downgrade] true\n...\n[github-protocols] [https, ssh]\n[vendor-dir] vendor (/Users/user/Sites/atom/packages/tuling/vendor)\n[bin-dir] {$vendor-dir}/bin (/Users/user/Sites/atom/packages/tuling/vendor/bin)\n[cache-dir] /Users/user/.composer/cache\n[data-dir] /Users/user/.composer\n\n//缓存地址\n[cache-files-dir] {$cache-dir}/files (/Users/user/.composer/cache/files)\n[cache-repo-dir] {$cache-dir}/repo (/Users/user/.composer/cache/repo)\n[cache-vcs-dir] {$cache-dir}/vcs (/Users/user/.composer/cache/vcs)\n[cache-ttl] 15552000\n[cache-files-ttl] 15552000\n[cache-files-maxsize] 300MiB (314572800)\n...\n//composer全局配置地址\n[home] /Users/user/.composer\n```\n\n\n\n### require包的版本号规则\n\n```\n常用版本号规则，确定版本号、版本号范围、版本号通配符，2、3、4是常用的版本号规则\n>= 是范围符号，大于某个\n\n//指定确定版本号\n1. 1.0.2    \n\n//在某个版本号的范围之内，可以加逗号、或运算符，>=1.0,<2.0  >=1.0|<2.0  逗号表示and，两个范围之内的版本号，|表示或者\n2. >=1.0    \n\n// *星号表示匹配任意值，例如：表示1.0.*下的任意版本，等效于>=1.0,<1.1\n3. 1.0.*    \n\n//~波浪号表示在某一个重要版本下的小版本升级\n例如：在1.2.2版本之上升级，但是不升级到1.3.0版本  1.2 >= 版本号 < 1.3.0\n避免高版本不兼容低版本\n4. ~1.2.2     \n\n//^和~类似， 1.2.3 <= 版本号 < 2.0.0\n//比~的范围更广，匹配下一个重要版本（官网上没有，但实际中经常见到）\n5. ^1.2.3\n```\n\n\n\n### composer.json示例文件\n\n```json\n// composer.json配置文件\n\n\"type\": \"library\",  //默认为library\n\"require\": {\n    //对php有版本限制\n    \"php\": \">=5.6\",\n    //要求php扩展，必须安装ext-mbstring\n    \"ext-mbstring\": \"*\",\n    //要求php库，必须安装lib-curl\n    \"lib-curl\": \"*\"\n},\n\"require-dev\": {},\n\"autoload\": {\n     \"psr-4\": {\n         \"App\\\\\": \"app/\",\n          \"Monolog\\\\\": [\"src/\", \"lib/\"]\n     },\n     \"psr-0\": {\n         \"Monolog\\\\\": [\"src/\", \"lib/\"] \n     },\n     \"classmap\": {     //不遵循psr-0/4规范\n         \"database\" \n     },\n     \"files\": {     //作为函数库引入\n         [\"url/to/your/helpers.php\"] \n     }\n},\n\"repositories\": {\n     \"packagist\": {\n         \"type\": \"composer\",\n         \"url\": \"https://packagist.phpcomposer.com\"\n     }\n},\n//最低版本要求，尽量不要安装dev-master版本的包，安装稳定版\n\"minimum-stability\": \"stable\"\n```\n\n\n\n### 常用命令\n\n```shell\n//查看软件包被哪些包依赖\ncomposer depends guzzlehttp/guzzle\n\ncomposer init\ncomposer require\ncomposer update\ncomposer install \n     —no-dev 跳过require-dev中列出的包\n     —dev 安装require-dev列出的包\n     \n//重建索引\ncomposer dump-autoload\n```\n\n","slug":"composer","published":1,"updated":"2018-08-30T10:00:53.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlhq4qwi0008qkkapo28s26k","content":"<h3 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">查看所有配置项，一些看不懂的没有列出来</span><br><span class=\"line\"></span><br><span class=\"line\">composer config -l</span><br><span class=\"line\"></span><br><span class=\"line\">[repositories.packagist.org.type] composer</span><br><span class=\"line\">//仓库地址</span><br><span class=\"line\">[repositories.packagist.org.url] https://packagist.org</span><br><span class=\"line\">[repositories.packagist.org.allow_ssl_downgrade] true</span><br><span class=\"line\">...</span><br><span class=\"line\">[github-protocols] [https, ssh]</span><br><span class=\"line\">[vendor-dir] vendor (/Users/user/Sites/atom/packages/tuling/vendor)</span><br><span class=\"line\">[bin-dir] &#123;$vendor-dir&#125;/bin (/Users/user/Sites/atom/packages/tuling/vendor/bin)</span><br><span class=\"line\">[cache-dir] /Users/user/.composer/cache</span><br><span class=\"line\">[data-dir] /Users/user/.composer</span><br><span class=\"line\"></span><br><span class=\"line\">//缓存地址</span><br><span class=\"line\">[cache-files-dir] &#123;$cache-dir&#125;/files (/Users/user/.composer/cache/files)</span><br><span class=\"line\">[cache-repo-dir] &#123;$cache-dir&#125;/repo (/Users/user/.composer/cache/repo)</span><br><span class=\"line\">[cache-vcs-dir] &#123;$cache-dir&#125;/vcs (/Users/user/.composer/cache/vcs)</span><br><span class=\"line\">[cache-ttl] 15552000</span><br><span class=\"line\">[cache-files-ttl] 15552000</span><br><span class=\"line\">[cache-files-maxsize] 300MiB (314572800)</span><br><span class=\"line\">...</span><br><span class=\"line\">//composer全局配置地址</span><br><span class=\"line\">[home] /Users/user/.composer</span><br></pre></td></tr></table></figure>\n<h3 id=\"require包的版本号规则\"><a href=\"#require包的版本号规则\" class=\"headerlink\" title=\"require包的版本号规则\"></a>require包的版本号规则</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">常用版本号规则，确定版本号、版本号范围、版本号通配符，2、3、4是常用的版本号规则</span><br><span class=\"line\">&gt;= 是范围符号，大于某个</span><br><span class=\"line\"></span><br><span class=\"line\">//指定确定版本号</span><br><span class=\"line\">1. 1.0.2    </span><br><span class=\"line\"></span><br><span class=\"line\">//在某个版本号的范围之内，可以加逗号、或运算符，&gt;=1.0,&lt;2.0  &gt;=1.0|&lt;2.0  逗号表示and，两个范围之内的版本号，|表示或者</span><br><span class=\"line\">2. &gt;=1.0    </span><br><span class=\"line\"></span><br><span class=\"line\">// *星号表示匹配任意值，例如：表示1.0.*下的任意版本，等效于&gt;=1.0,&lt;1.1</span><br><span class=\"line\">3. 1.0.*    </span><br><span class=\"line\"></span><br><span class=\"line\">//~波浪号表示在某一个重要版本下的小版本升级</span><br><span class=\"line\">例如：在1.2.2版本之上升级，但是不升级到1.3.0版本  1.2 &gt;= 版本号 &lt; 1.3.0</span><br><span class=\"line\">避免高版本不兼容低版本</span><br><span class=\"line\">4. ~1.2.2     </span><br><span class=\"line\"></span><br><span class=\"line\">//^和~类似， 1.2.3 &lt;= 版本号 &lt; 2.0.0</span><br><span class=\"line\">//比~的范围更广，匹配下一个重要版本（官网上没有，但实际中经常见到）</span><br><span class=\"line\">5. ^1.2.3</span><br></pre></td></tr></table></figure>\n<h3 id=\"composer-json示例文件\"><a href=\"#composer-json示例文件\" class=\"headerlink\" title=\"composer.json示例文件\"></a>composer.json示例文件</h3><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// composer.json配置文件</span><br><span class=\"line\"></span><br><span class=\"line\">\"type\": \"library\",  //默认为library</span><br><span class=\"line\">\"require\": &#123;</span><br><span class=\"line\">    //对php有版本限制</span><br><span class=\"line\">    \"php\": \"&gt;=5.6\",</span><br><span class=\"line\">    //要求php扩展，必须安装ext-mbstring</span><br><span class=\"line\">    \"ext-mbstring\": \"*\",</span><br><span class=\"line\">    //要求php库，必须安装lib-curl</span><br><span class=\"line\">    \"lib-curl\": \"*\"</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">\"require-dev\": &#123;&#125;,</span><br><span class=\"line\">\"autoload\": &#123;</span><br><span class=\"line\">     \"psr-4\": &#123;</span><br><span class=\"line\">         \"App\\\\\": \"app/\",</span><br><span class=\"line\">          \"Monolog\\\\\": [\"src/\", \"lib/\"]</span><br><span class=\"line\">     &#125;,</span><br><span class=\"line\">     \"psr-0\": &#123;</span><br><span class=\"line\">         \"Monolog\\\\\": [\"src/\", \"lib/\"] </span><br><span class=\"line\">     &#125;,</span><br><span class=\"line\">     \"classmap\": &#123;     //不遵循psr-0/4规范</span><br><span class=\"line\">         <span class=\"string\">\"database\"</span> </span><br><span class=\"line\">     &#125;,</span><br><span class=\"line\">     \"files\": &#123;     //作为函数库引入</span><br><span class=\"line\">         [<span class=\"string\">\"url/to/your/helpers.php\"</span>] </span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">\"repositories\": &#123;</span><br><span class=\"line\">     \"packagist\": &#123;</span><br><span class=\"line\">         \"type\": \"composer\",</span><br><span class=\"line\">         \"url\": \"https://packagist.phpcomposer.com\"</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">//最低版本要求，尽量不要安装dev-master版本的包，安装稳定版</span><br><span class=\"line\">\"minimum-stability\": \"stable\"</span><br></pre></td></tr></table></figure>\n<h3 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//查看软件包被哪些包依赖</span><br><span class=\"line\">composer depends guzzlehttp/guzzle</span><br><span class=\"line\"></span><br><span class=\"line\">composer init</span><br><span class=\"line\">composer require</span><br><span class=\"line\">composer update</span><br><span class=\"line\">composer install </span><br><span class=\"line\">     —no-dev 跳过require-dev中列出的包</span><br><span class=\"line\">     —dev 安装require-dev列出的包</span><br><span class=\"line\">     </span><br><span class=\"line\">//重建索引</span><br><span class=\"line\">composer dump-autoload</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">查看所有配置项，一些看不懂的没有列出来</span><br><span class=\"line\"></span><br><span class=\"line\">composer config -l</span><br><span class=\"line\"></span><br><span class=\"line\">[repositories.packagist.org.type] composer</span><br><span class=\"line\">//仓库地址</span><br><span class=\"line\">[repositories.packagist.org.url] https://packagist.org</span><br><span class=\"line\">[repositories.packagist.org.allow_ssl_downgrade] true</span><br><span class=\"line\">...</span><br><span class=\"line\">[github-protocols] [https, ssh]</span><br><span class=\"line\">[vendor-dir] vendor (/Users/user/Sites/atom/packages/tuling/vendor)</span><br><span class=\"line\">[bin-dir] &#123;$vendor-dir&#125;/bin (/Users/user/Sites/atom/packages/tuling/vendor/bin)</span><br><span class=\"line\">[cache-dir] /Users/user/.composer/cache</span><br><span class=\"line\">[data-dir] /Users/user/.composer</span><br><span class=\"line\"></span><br><span class=\"line\">//缓存地址</span><br><span class=\"line\">[cache-files-dir] &#123;$cache-dir&#125;/files (/Users/user/.composer/cache/files)</span><br><span class=\"line\">[cache-repo-dir] &#123;$cache-dir&#125;/repo (/Users/user/.composer/cache/repo)</span><br><span class=\"line\">[cache-vcs-dir] &#123;$cache-dir&#125;/vcs (/Users/user/.composer/cache/vcs)</span><br><span class=\"line\">[cache-ttl] 15552000</span><br><span class=\"line\">[cache-files-ttl] 15552000</span><br><span class=\"line\">[cache-files-maxsize] 300MiB (314572800)</span><br><span class=\"line\">...</span><br><span class=\"line\">//composer全局配置地址</span><br><span class=\"line\">[home] /Users/user/.composer</span><br></pre></td></tr></table></figure>\n<h3 id=\"require包的版本号规则\"><a href=\"#require包的版本号规则\" class=\"headerlink\" title=\"require包的版本号规则\"></a>require包的版本号规则</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">常用版本号规则，确定版本号、版本号范围、版本号通配符，2、3、4是常用的版本号规则</span><br><span class=\"line\">&gt;= 是范围符号，大于某个</span><br><span class=\"line\"></span><br><span class=\"line\">//指定确定版本号</span><br><span class=\"line\">1. 1.0.2    </span><br><span class=\"line\"></span><br><span class=\"line\">//在某个版本号的范围之内，可以加逗号、或运算符，&gt;=1.0,&lt;2.0  &gt;=1.0|&lt;2.0  逗号表示and，两个范围之内的版本号，|表示或者</span><br><span class=\"line\">2. &gt;=1.0    </span><br><span class=\"line\"></span><br><span class=\"line\">// *星号表示匹配任意值，例如：表示1.0.*下的任意版本，等效于&gt;=1.0,&lt;1.1</span><br><span class=\"line\">3. 1.0.*    </span><br><span class=\"line\"></span><br><span class=\"line\">//~波浪号表示在某一个重要版本下的小版本升级</span><br><span class=\"line\">例如：在1.2.2版本之上升级，但是不升级到1.3.0版本  1.2 &gt;= 版本号 &lt; 1.3.0</span><br><span class=\"line\">避免高版本不兼容低版本</span><br><span class=\"line\">4. ~1.2.2     </span><br><span class=\"line\"></span><br><span class=\"line\">//^和~类似， 1.2.3 &lt;= 版本号 &lt; 2.0.0</span><br><span class=\"line\">//比~的范围更广，匹配下一个重要版本（官网上没有，但实际中经常见到）</span><br><span class=\"line\">5. ^1.2.3</span><br></pre></td></tr></table></figure>\n<h3 id=\"composer-json示例文件\"><a href=\"#composer-json示例文件\" class=\"headerlink\" title=\"composer.json示例文件\"></a>composer.json示例文件</h3><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// composer.json配置文件</span><br><span class=\"line\"></span><br><span class=\"line\">\"type\": \"library\",  //默认为library</span><br><span class=\"line\">\"require\": &#123;</span><br><span class=\"line\">    //对php有版本限制</span><br><span class=\"line\">    \"php\": \"&gt;=5.6\",</span><br><span class=\"line\">    //要求php扩展，必须安装ext-mbstring</span><br><span class=\"line\">    \"ext-mbstring\": \"*\",</span><br><span class=\"line\">    //要求php库，必须安装lib-curl</span><br><span class=\"line\">    \"lib-curl\": \"*\"</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">\"require-dev\": &#123;&#125;,</span><br><span class=\"line\">\"autoload\": &#123;</span><br><span class=\"line\">     \"psr-4\": &#123;</span><br><span class=\"line\">         \"App\\\\\": \"app/\",</span><br><span class=\"line\">          \"Monolog\\\\\": [\"src/\", \"lib/\"]</span><br><span class=\"line\">     &#125;,</span><br><span class=\"line\">     \"psr-0\": &#123;</span><br><span class=\"line\">         \"Monolog\\\\\": [\"src/\", \"lib/\"] </span><br><span class=\"line\">     &#125;,</span><br><span class=\"line\">     \"classmap\": &#123;     //不遵循psr-0/4规范</span><br><span class=\"line\">         <span class=\"string\">\"database\"</span> </span><br><span class=\"line\">     &#125;,</span><br><span class=\"line\">     \"files\": &#123;     //作为函数库引入</span><br><span class=\"line\">         [<span class=\"string\">\"url/to/your/helpers.php\"</span>] </span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">\"repositories\": &#123;</span><br><span class=\"line\">     \"packagist\": &#123;</span><br><span class=\"line\">         \"type\": \"composer\",</span><br><span class=\"line\">         \"url\": \"https://packagist.phpcomposer.com\"</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">//最低版本要求，尽量不要安装dev-master版本的包，安装稳定版</span><br><span class=\"line\">\"minimum-stability\": \"stable\"</span><br></pre></td></tr></table></figure>\n<h3 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//查看软件包被哪些包依赖</span><br><span class=\"line\">composer depends guzzlehttp/guzzle</span><br><span class=\"line\"></span><br><span class=\"line\">composer init</span><br><span class=\"line\">composer require</span><br><span class=\"line\">composer update</span><br><span class=\"line\">composer install </span><br><span class=\"line\">     —no-dev 跳过require-dev中列出的包</span><br><span class=\"line\">     —dev 安装require-dev列出的包</span><br><span class=\"line\">     </span><br><span class=\"line\">//重建索引</span><br><span class=\"line\">composer dump-autoload</span><br></pre></td></tr></table></figure>\n"},{"title":"约瑟夫环","date":"2018-02-03T16:00:00.000Z","_content":"猴子问题，n个猴子围成圈，每第m个踢掉，最后剩下哪个\n\n#### 思路\n```\n1. 因为不知道具体的循环次数，所以使用while循环\n2. 使用临时变量i来计数，循环中每次取出第一个值\n3. 判断i对m取余是否为0，如果为0，则证明该值应该去掉，否则将其重新添加到队尾\n```\n\n#### 实现\n```php\nfunction joseph_ring($n, $m){\n    $arr = range(1, $n);\n    $i = 0;\n    while (count($arr)>1){\n        $i ++:\n        $left = array_shift($arr);\n        if ($i % $m != 0) {\n            array_push($arr, $left);\n        }\n    }\n    return $arr[0];\n}\n```","source":"_posts/joseph_ring.md","raw":"---\ntitle: 约瑟夫环\ndate: 2018-02-04\ncategories: 算法\ntags: 算法\n---\n猴子问题，n个猴子围成圈，每第m个踢掉，最后剩下哪个\n\n#### 思路\n```\n1. 因为不知道具体的循环次数，所以使用while循环\n2. 使用临时变量i来计数，循环中每次取出第一个值\n3. 判断i对m取余是否为0，如果为0，则证明该值应该去掉，否则将其重新添加到队尾\n```\n\n#### 实现\n```php\nfunction joseph_ring($n, $m){\n    $arr = range(1, $n);\n    $i = 0;\n    while (count($arr)>1){\n        $i ++:\n        $left = array_shift($arr);\n        if ($i % $m != 0) {\n            array_push($arr, $left);\n        }\n    }\n    return $arr[0];\n}\n```","slug":"joseph_ring","published":1,"updated":"2018-08-30T10:00:53.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlhq4qwj0009qkkapu25y9hd","content":"<p>猴子问题，n个猴子围成圈，每第m个踢掉，最后剩下哪个</p>\n<h4 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 因为不知道具体的循环次数，所以使用while循环</span><br><span class=\"line\">2. 使用临时变量i来计数，循环中每次取出第一个值</span><br><span class=\"line\">3. 判断i对m取余是否为0，如果为0，则证明该值应该去掉，否则将其重新添加到队尾</span><br></pre></td></tr></table></figure>\n<h4 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">joseph_ring</span><span class=\"params\">($n, $m)</span></span>&#123;</span><br><span class=\"line\">    $arr = range(<span class=\"number\">1</span>, $n);</span><br><span class=\"line\">    $i = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (count($arr)&gt;<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        $i ++:</span><br><span class=\"line\">        $left = array_shift($arr);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ($i % $m != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            array_push($arr, $left);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> $arr[<span class=\"number\">0</span>];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>猴子问题，n个猴子围成圈，每第m个踢掉，最后剩下哪个</p>\n<h4 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 因为不知道具体的循环次数，所以使用while循环</span><br><span class=\"line\">2. 使用临时变量i来计数，循环中每次取出第一个值</span><br><span class=\"line\">3. 判断i对m取余是否为0，如果为0，则证明该值应该去掉，否则将其重新添加到队尾</span><br></pre></td></tr></table></figure>\n<h4 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">joseph_ring</span><span class=\"params\">($n, $m)</span></span>&#123;</span><br><span class=\"line\">    $arr = range(<span class=\"number\">1</span>, $n);</span><br><span class=\"line\">    $i = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (count($arr)&gt;<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        $i ++:</span><br><span class=\"line\">        $left = array_shift($arr);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ($i % $m != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            array_push($arr, $left);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> $arr[<span class=\"number\">0</span>];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"docker实现nginx负载均衡","date":"2018-05-09T16:00:00.000Z","_content":"\n\n\nlinux环境下docker实现nginx负载均衡环境搭建\n\n\n\n## 思路\n\n启动1个php容器，处理php请求\n\n启动3个nginx容器，nginx1，nginx2，nginx_main，1和2是应用服务器，main是反向代理服务器\n\n所有对nginx_main的请求都会分布到nginx1和nginx2上面\n\n最后通过观察nginx1，2的访问日志可以看到效果\n\n## 目录说明\n\n```\n/var/www/html/laravel\t主机的网站地址\n/usr/share/nginx/html\t容器内的网站地址\n/root/docker/nginx/conf.d\t主机的nginx配置目录\n/etc/nginx/conf.d\t容器内的nginx配置目录\n/root/docker/nginx/nginx.conf\t主机的nginx配置文件\n/etc/nginx/nginx.conf\t容器内的nginx配置文件\n/root/docker/nginx/nginx_main.conf\t主机的nginx代理服务器配置文件\n```\n\n## 步骤\n\n1.启动php服务器\n\n\n```shell\n# 拉取镜像\ndocker pull php:7.0-fpm\n\n# 启动容器\ndocker run --name php -d -p 9001:9000 \\\n-v /var/www/html/laravel:/usr/share/nginx/html php:7.0-fpm\n\n#安装pdo_mysql扩展\ndocker-php-ext-install pdo_mysql\n```\n\n\n\n2.启动nginx1，2，关联php容器\n\n```shell\n# 拉取nginx镜像\ndocker pull nginx\n\n# 启动nginx1容器\ndocker run --name nginx1 -d -p 81:80 \\\n-v /root/docker/nginx/conf.d:/etc/nginx/conf.d \\\n-v /root/docker/nginx/nginx.conf:/etc/nginx/nginx.conf \\\n-v /var/www/html/laravel:/usr/share/nginx/html --link php:php nginx\n\n# 启动nginx2容器\ndocker run --name nginx2 -d -p 82:80 \\\n-v /root/docker/nginx/conf.d:/etc/nginx/conf.d \\\n-v /root/docker/nginx/nginx.conf:/etc/nginx/nginx.conf \\\n-v /var/www/html/laravel:/usr/share/nginx/html --link php:php nginx\n```\n\n\n\nnginx.conf配置\n\n```nginx\nuser nginx;\nworker_processes 1;\nerror_log /var/log/nginx/error.log warn;\npid /var/run/nginx.pid;\n\nevents {\n    worker_connections 1024;\n}\n\nhttp {\n    include /etc/nginx/mime.types;\n    default_type application/octet-stream;\n    log_format main '$remote_addr - $remote_user [$time_local] \"$request\" '\n        '$status $body_bytes_sent \"$http_referer\"'\n        '\"$http_user_agent\" \"$http_x_forwarded_for\"'\n    access_log /var/log/nginx/access.log main;\n    sendfile on;\n    keepalive_timeout 65;\n    include /etc/nginx/conf.d/*.conf;\n}\n```\n\n\n\ndefault.conf配置\n\n```nginx\nserver {\n    listen 80;\n    server_name localhost;\n    root /usr/share/nginx/html/public;\n    index index.php index.html index.htm;\n    \n    location ~* \\.(gif|jpg|png|css|js|flv|swf|ico|woff|ttf|woff2)(.*)$ {\n        access_log off;\n        expires 30d;\n    }\n    \n    location / {\n        try_files $uri $uri/ /index.php$is_args$args;\n        # 连接php容器的9000端口\n        fastcgi_pass php:9000;\n        fastcgi_index index.php;\n        fastcgi_buffers 16 16k;\n        fastcgi_buffer_size 32k;\n        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\n        fastcgi_read_timeout 600;\n        include fastcgi_params;\n    }\n}\n# fastcgi_pass里的php为php容器\n```\n\n\n\n3.启动nginx_main反向代理服务器，关联nginx1和nginx2\n\n```shell\ndocker run --name nginx_main -d -p 83:80 \\\n-v /root/docker/nginx/nginx_main.conf:/etc/nginx/nginx.conf --link nginx1:nginx1 --link nginx2:nginx2 nginx\n```\n\n\n\nnginx_main反向代理服务器配置\n\n```nginx\nuser nginx;\nworker_processes auto;\nerror_log /var/log/nginx/error.log;\npid /run/nginx.pid;\n\n# include /usr/share/nginx/modules/*.conf;\n\nevent {\n\tworker_connections 1024;\n}\n\nhttp {\n\t# 反向代理配置，nginx1的权重是2，nginx2的权重是3\n\tupstream php-fpm {\n\t\tserver nginx1 weight=2;\n\t\tserver nginx2 weight=3;\n\t}\n\tlog_format main '$remote_addr - $remote_user [$time_local] \"$request\" '\n                     '$status $body_bytes_sent \"$http_referer\" '\n                     '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\taccess_log  /var/log/nginx/access.log  main;\n\tsendfile            on;\n\ttcp_nopush          on;\n\ttcp_nodelay         on;\n\tkeepalive_timeout   65;\n\ttypes_hash_max_size 2048;\n\n\tinclude             /etc/nginx/mime.types;\n\tdefault_type        application/octet-stream;\n\n\tserver {\n\t\tlisten 80;\n\t\tserver_name localhost;\n\t\troot /usr/share/nginx/html;\n\t\tlocation / {\n\t\t\t# 此处的php-fpm为上面upstream模块配置的php-fpm\n\t\t\tproxy_pass http://php-fpm;\n\t\t}\n\t}\n}\n# proxy_pass的php-fpm必须加上http://，否则报错\n```\n\n\n","source":"_posts/docker_nginx.md","raw":"---\ntitle: docker实现nginx负载均衡\ndate: 2018-05-10\ntags: docker\ncategories: docker\n---\n\n\n\nlinux环境下docker实现nginx负载均衡环境搭建\n\n\n\n## 思路\n\n启动1个php容器，处理php请求\n\n启动3个nginx容器，nginx1，nginx2，nginx_main，1和2是应用服务器，main是反向代理服务器\n\n所有对nginx_main的请求都会分布到nginx1和nginx2上面\n\n最后通过观察nginx1，2的访问日志可以看到效果\n\n## 目录说明\n\n```\n/var/www/html/laravel\t主机的网站地址\n/usr/share/nginx/html\t容器内的网站地址\n/root/docker/nginx/conf.d\t主机的nginx配置目录\n/etc/nginx/conf.d\t容器内的nginx配置目录\n/root/docker/nginx/nginx.conf\t主机的nginx配置文件\n/etc/nginx/nginx.conf\t容器内的nginx配置文件\n/root/docker/nginx/nginx_main.conf\t主机的nginx代理服务器配置文件\n```\n\n## 步骤\n\n1.启动php服务器\n\n\n```shell\n# 拉取镜像\ndocker pull php:7.0-fpm\n\n# 启动容器\ndocker run --name php -d -p 9001:9000 \\\n-v /var/www/html/laravel:/usr/share/nginx/html php:7.0-fpm\n\n#安装pdo_mysql扩展\ndocker-php-ext-install pdo_mysql\n```\n\n\n\n2.启动nginx1，2，关联php容器\n\n```shell\n# 拉取nginx镜像\ndocker pull nginx\n\n# 启动nginx1容器\ndocker run --name nginx1 -d -p 81:80 \\\n-v /root/docker/nginx/conf.d:/etc/nginx/conf.d \\\n-v /root/docker/nginx/nginx.conf:/etc/nginx/nginx.conf \\\n-v /var/www/html/laravel:/usr/share/nginx/html --link php:php nginx\n\n# 启动nginx2容器\ndocker run --name nginx2 -d -p 82:80 \\\n-v /root/docker/nginx/conf.d:/etc/nginx/conf.d \\\n-v /root/docker/nginx/nginx.conf:/etc/nginx/nginx.conf \\\n-v /var/www/html/laravel:/usr/share/nginx/html --link php:php nginx\n```\n\n\n\nnginx.conf配置\n\n```nginx\nuser nginx;\nworker_processes 1;\nerror_log /var/log/nginx/error.log warn;\npid /var/run/nginx.pid;\n\nevents {\n    worker_connections 1024;\n}\n\nhttp {\n    include /etc/nginx/mime.types;\n    default_type application/octet-stream;\n    log_format main '$remote_addr - $remote_user [$time_local] \"$request\" '\n        '$status $body_bytes_sent \"$http_referer\"'\n        '\"$http_user_agent\" \"$http_x_forwarded_for\"'\n    access_log /var/log/nginx/access.log main;\n    sendfile on;\n    keepalive_timeout 65;\n    include /etc/nginx/conf.d/*.conf;\n}\n```\n\n\n\ndefault.conf配置\n\n```nginx\nserver {\n    listen 80;\n    server_name localhost;\n    root /usr/share/nginx/html/public;\n    index index.php index.html index.htm;\n    \n    location ~* \\.(gif|jpg|png|css|js|flv|swf|ico|woff|ttf|woff2)(.*)$ {\n        access_log off;\n        expires 30d;\n    }\n    \n    location / {\n        try_files $uri $uri/ /index.php$is_args$args;\n        # 连接php容器的9000端口\n        fastcgi_pass php:9000;\n        fastcgi_index index.php;\n        fastcgi_buffers 16 16k;\n        fastcgi_buffer_size 32k;\n        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\n        fastcgi_read_timeout 600;\n        include fastcgi_params;\n    }\n}\n# fastcgi_pass里的php为php容器\n```\n\n\n\n3.启动nginx_main反向代理服务器，关联nginx1和nginx2\n\n```shell\ndocker run --name nginx_main -d -p 83:80 \\\n-v /root/docker/nginx/nginx_main.conf:/etc/nginx/nginx.conf --link nginx1:nginx1 --link nginx2:nginx2 nginx\n```\n\n\n\nnginx_main反向代理服务器配置\n\n```nginx\nuser nginx;\nworker_processes auto;\nerror_log /var/log/nginx/error.log;\npid /run/nginx.pid;\n\n# include /usr/share/nginx/modules/*.conf;\n\nevent {\n\tworker_connections 1024;\n}\n\nhttp {\n\t# 反向代理配置，nginx1的权重是2，nginx2的权重是3\n\tupstream php-fpm {\n\t\tserver nginx1 weight=2;\n\t\tserver nginx2 weight=3;\n\t}\n\tlog_format main '$remote_addr - $remote_user [$time_local] \"$request\" '\n                     '$status $body_bytes_sent \"$http_referer\" '\n                     '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\taccess_log  /var/log/nginx/access.log  main;\n\tsendfile            on;\n\ttcp_nopush          on;\n\ttcp_nodelay         on;\n\tkeepalive_timeout   65;\n\ttypes_hash_max_size 2048;\n\n\tinclude             /etc/nginx/mime.types;\n\tdefault_type        application/octet-stream;\n\n\tserver {\n\t\tlisten 80;\n\t\tserver_name localhost;\n\t\troot /usr/share/nginx/html;\n\t\tlocation / {\n\t\t\t# 此处的php-fpm为上面upstream模块配置的php-fpm\n\t\t\tproxy_pass http://php-fpm;\n\t\t}\n\t}\n}\n# proxy_pass的php-fpm必须加上http://，否则报错\n```\n\n\n","slug":"docker_nginx","published":1,"updated":"2018-08-30T10:00:53.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlhq4qwo000dqkkahn7a7gsw","content":"<p>linux环境下docker实现nginx负载均衡环境搭建</p>\n<h2 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h2><p>启动1个php容器，处理php请求</p>\n<p>启动3个nginx容器，nginx1，nginx2，nginx_main，1和2是应用服务器，main是反向代理服务器</p>\n<p>所有对nginx_main的请求都会分布到nginx1和nginx2上面</p>\n<p>最后通过观察nginx1，2的访问日志可以看到效果</p>\n<h2 id=\"目录说明\"><a href=\"#目录说明\" class=\"headerlink\" title=\"目录说明\"></a>目录说明</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/var/www/html/laravel\t主机的网站地址</span><br><span class=\"line\">/usr/share/nginx/html\t容器内的网站地址</span><br><span class=\"line\">/root/docker/nginx/conf.d\t主机的nginx配置目录</span><br><span class=\"line\">/etc/nginx/conf.d\t容器内的nginx配置目录</span><br><span class=\"line\">/root/docker/nginx/nginx.conf\t主机的nginx配置文件</span><br><span class=\"line\">/etc/nginx/nginx.conf\t容器内的nginx配置文件</span><br><span class=\"line\">/root/docker/nginx/nginx_main.conf\t主机的nginx代理服务器配置文件</span><br></pre></td></tr></table></figure>\n<h2 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h2><p>1.启动php服务器</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 拉取镜像</span><br><span class=\"line\">docker pull php:7.0-fpm</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> 启动容器</span><br><span class=\"line\">docker run --name php -d -p 9001:9000 \\</span><br><span class=\"line\">-v /var/www/html/laravel:/usr/share/nginx/html php:7.0-fpm</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span>安装pdo_mysql扩展</span><br><span class=\"line\">docker-php-ext-install pdo_mysql</span><br></pre></td></tr></table></figure>\n<p>2.启动nginx1，2，关联php容器</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 拉取nginx镜像</span><br><span class=\"line\">docker pull nginx</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> 启动nginx1容器</span><br><span class=\"line\">docker run --name nginx1 -d -p 81:80 \\</span><br><span class=\"line\">-v /root/docker/nginx/conf.d:/etc/nginx/conf.d \\</span><br><span class=\"line\">-v /root/docker/nginx/nginx.conf:/etc/nginx/nginx.conf \\</span><br><span class=\"line\">-v /var/www/html/laravel:/usr/share/nginx/html --link php:php nginx</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> 启动nginx2容器</span><br><span class=\"line\">docker run --name nginx2 -d -p 82:80 \\</span><br><span class=\"line\">-v /root/docker/nginx/conf.d:/etc/nginx/conf.d \\</span><br><span class=\"line\">-v /root/docker/nginx/nginx.conf:/etc/nginx/nginx.conf \\</span><br><span class=\"line\">-v /var/www/html/laravel:/usr/share/nginx/html --link php:php nginx</span><br></pre></td></tr></table></figure>\n<p>nginx.conf配置</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">user</span> nginx;</span><br><span class=\"line\"><span class=\"attribute\">worker_processes</span> <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"attribute\">error_log</span> /var/log/nginx/error.log <span class=\"literal\">warn</span>;</span><br><span class=\"line\"><span class=\"attribute\">pid</span> /var/run/nginx.pid;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">events</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">worker_connections</span> <span class=\"number\">1024</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">http</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">include</span> /etc/nginx/mime.types;</span><br><span class=\"line\">    <span class=\"attribute\">default_type</span> application/octet-stream;</span><br><span class=\"line\">    <span class=\"attribute\">log_format</span> main <span class=\"string\">'<span class=\"variable\">$remote_addr</span> - <span class=\"variable\">$remote_user</span> [<span class=\"variable\">$time_local</span>] \"<span class=\"variable\">$request</span>\" '</span></span><br><span class=\"line\">        <span class=\"string\">'<span class=\"variable\">$status</span> <span class=\"variable\">$body_bytes_sent</span> \"<span class=\"variable\">$http_referer</span>\"'</span></span><br><span class=\"line\">        <span class=\"string\">'\"<span class=\"variable\">$http_user_agent</span>\" \"<span class=\"variable\">$http_x_forwarded_for</span>\"'</span></span><br><span class=\"line\">    access_log /var/log/nginx/access.log main;</span><br><span class=\"line\">    <span class=\"attribute\">sendfile</span> <span class=\"literal\">on</span>;</span><br><span class=\"line\">    <span class=\"attribute\">keepalive_timeout</span> <span class=\"number\">65</span>;</span><br><span class=\"line\">    <span class=\"attribute\">include</span> /etc/nginx/conf.d/<span class=\"regexp\">*.conf</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>default.conf配置</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> localhost;</span><br><span class=\"line\">    <span class=\"attribute\">root</span> /usr/share/nginx/html/public;</span><br><span class=\"line\">    <span class=\"attribute\">index</span> index.php index.html index.htm;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"attribute\">location</span> <span class=\"regexp\">~* \\.(gif|jpg|png|css|js|flv|swf|ico|woff|ttf|woff2)(.*)$</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">access_log</span> <span class=\"literal\">off</span>;</span><br><span class=\"line\">        <span class=\"attribute\">expires</span> <span class=\"number\">30d</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"attribute\">location</span> / &#123;</span><br><span class=\"line\">        <span class=\"attribute\">try_files</span> <span class=\"variable\">$uri</span> <span class=\"variable\">$uri</span>/ /index.php<span class=\"variable\">$is_args</span><span class=\"variable\">$args</span>;</span><br><span class=\"line\">        <span class=\"comment\"># 连接php容器的9000端口</span></span><br><span class=\"line\">        <span class=\"attribute\">fastcgi_pass</span> php:<span class=\"number\">9000</span>;</span><br><span class=\"line\">        <span class=\"attribute\">fastcgi_index</span> index.php;</span><br><span class=\"line\">        <span class=\"attribute\">fastcgi_buffers</span> <span class=\"number\">16</span> <span class=\"number\">16k</span>;</span><br><span class=\"line\">        <span class=\"attribute\">fastcgi_buffer_size</span> <span class=\"number\">32k</span>;</span><br><span class=\"line\">        <span class=\"attribute\">fastcgi_param</span> SCRIPT_FILENAME <span class=\"variable\">$document_root</span><span class=\"variable\">$fastcgi_script_name</span>;</span><br><span class=\"line\">        <span class=\"attribute\">fastcgi_read_timeout</span> <span class=\"number\">600</span>;</span><br><span class=\"line\">        <span class=\"attribute\">include</span> fastcgi_params;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\"># fastcgi_pass里的php为php容器</span></span><br></pre></td></tr></table></figure>\n<p>3.启动nginx_main反向代理服务器，关联nginx1和nginx2</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --name nginx_main -d -p 83:80 \\</span><br><span class=\"line\">-v /root/docker/nginx/nginx_main.conf:/etc/nginx/nginx.conf --link nginx1:nginx1 --link nginx2:nginx2 nginx</span><br></pre></td></tr></table></figure>\n<p>nginx_main反向代理服务器配置</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">user</span> nginx;</span><br><span class=\"line\"><span class=\"attribute\">worker_processes</span> auto;</span><br><span class=\"line\"><span class=\"attribute\">error_log</span> /var/log/nginx/error.log;</span><br><span class=\"line\"><span class=\"attribute\">pid</span> /run/nginx.pid;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># include /usr/share/nginx/modules/*.conf;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">event</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">worker_connections</span> <span class=\"number\">1024</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">http</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\"># 反向代理配置，nginx1的权重是2，nginx2的权重是3</span></span><br><span class=\"line\">\t<span class=\"attribute\">upstream</span> php-fpm &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">server</span> nginx1 weight=<span class=\"number\">2</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">server</span> nginx2 weight=<span class=\"number\">3</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"attribute\">log_format</span> main <span class=\"string\">'<span class=\"variable\">$remote_addr</span> - <span class=\"variable\">$remote_user</span> [<span class=\"variable\">$time_local</span>] \"<span class=\"variable\">$request</span>\" '</span></span><br><span class=\"line\">                     <span class=\"string\">'<span class=\"variable\">$status</span> <span class=\"variable\">$body_bytes_sent</span> \"<span class=\"variable\">$http_referer</span>\" '</span></span><br><span class=\"line\">                     <span class=\"string\">'\"<span class=\"variable\">$http_user_agent</span>\" \"<span class=\"variable\">$http_x_forwarded_for</span>\"'</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">access_log</span>  /var/log/nginx/access.log  main;</span><br><span class=\"line\">\t<span class=\"attribute\">sendfile</span>            <span class=\"literal\">on</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">tcp_nopush</span>          <span class=\"literal\">on</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">tcp_nodelay</span>         <span class=\"literal\">on</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">keepalive_timeout</span>   <span class=\"number\">65</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">types_hash_max_size</span> <span class=\"number\">2048</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"attribute\">include</span>             /etc/nginx/mime.types;</span><br><span class=\"line\">\t<span class=\"attribute\">default_type</span>        application/octet-stream;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"section\">server</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">server_name</span> localhost;</span><br><span class=\"line\">\t\t<span class=\"attribute\">root</span> /usr/share/nginx/html;</span><br><span class=\"line\">\t\t<span class=\"attribute\">location</span> / &#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\"># 此处的php-fpm为上面upstream模块配置的php-fpm</span></span><br><span class=\"line\">\t\t\t<span class=\"attribute\">proxy_pass</span> http://php-fpm;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\"># proxy_pass的php-fpm必须加上http://，否则报错</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>linux环境下docker实现nginx负载均衡环境搭建</p>\n<h2 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h2><p>启动1个php容器，处理php请求</p>\n<p>启动3个nginx容器，nginx1，nginx2，nginx_main，1和2是应用服务器，main是反向代理服务器</p>\n<p>所有对nginx_main的请求都会分布到nginx1和nginx2上面</p>\n<p>最后通过观察nginx1，2的访问日志可以看到效果</p>\n<h2 id=\"目录说明\"><a href=\"#目录说明\" class=\"headerlink\" title=\"目录说明\"></a>目录说明</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/var/www/html/laravel\t主机的网站地址</span><br><span class=\"line\">/usr/share/nginx/html\t容器内的网站地址</span><br><span class=\"line\">/root/docker/nginx/conf.d\t主机的nginx配置目录</span><br><span class=\"line\">/etc/nginx/conf.d\t容器内的nginx配置目录</span><br><span class=\"line\">/root/docker/nginx/nginx.conf\t主机的nginx配置文件</span><br><span class=\"line\">/etc/nginx/nginx.conf\t容器内的nginx配置文件</span><br><span class=\"line\">/root/docker/nginx/nginx_main.conf\t主机的nginx代理服务器配置文件</span><br></pre></td></tr></table></figure>\n<h2 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h2><p>1.启动php服务器</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 拉取镜像</span><br><span class=\"line\">docker pull php:7.0-fpm</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> 启动容器</span><br><span class=\"line\">docker run --name php -d -p 9001:9000 \\</span><br><span class=\"line\">-v /var/www/html/laravel:/usr/share/nginx/html php:7.0-fpm</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span>安装pdo_mysql扩展</span><br><span class=\"line\">docker-php-ext-install pdo_mysql</span><br></pre></td></tr></table></figure>\n<p>2.启动nginx1，2，关联php容器</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 拉取nginx镜像</span><br><span class=\"line\">docker pull nginx</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> 启动nginx1容器</span><br><span class=\"line\">docker run --name nginx1 -d -p 81:80 \\</span><br><span class=\"line\">-v /root/docker/nginx/conf.d:/etc/nginx/conf.d \\</span><br><span class=\"line\">-v /root/docker/nginx/nginx.conf:/etc/nginx/nginx.conf \\</span><br><span class=\"line\">-v /var/www/html/laravel:/usr/share/nginx/html --link php:php nginx</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> 启动nginx2容器</span><br><span class=\"line\">docker run --name nginx2 -d -p 82:80 \\</span><br><span class=\"line\">-v /root/docker/nginx/conf.d:/etc/nginx/conf.d \\</span><br><span class=\"line\">-v /root/docker/nginx/nginx.conf:/etc/nginx/nginx.conf \\</span><br><span class=\"line\">-v /var/www/html/laravel:/usr/share/nginx/html --link php:php nginx</span><br></pre></td></tr></table></figure>\n<p>nginx.conf配置</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">user</span> nginx;</span><br><span class=\"line\"><span class=\"attribute\">worker_processes</span> <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"attribute\">error_log</span> /var/log/nginx/error.log <span class=\"literal\">warn</span>;</span><br><span class=\"line\"><span class=\"attribute\">pid</span> /var/run/nginx.pid;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">events</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">worker_connections</span> <span class=\"number\">1024</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">http</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">include</span> /etc/nginx/mime.types;</span><br><span class=\"line\">    <span class=\"attribute\">default_type</span> application/octet-stream;</span><br><span class=\"line\">    <span class=\"attribute\">log_format</span> main <span class=\"string\">'<span class=\"variable\">$remote_addr</span> - <span class=\"variable\">$remote_user</span> [<span class=\"variable\">$time_local</span>] \"<span class=\"variable\">$request</span>\" '</span></span><br><span class=\"line\">        <span class=\"string\">'<span class=\"variable\">$status</span> <span class=\"variable\">$body_bytes_sent</span> \"<span class=\"variable\">$http_referer</span>\"'</span></span><br><span class=\"line\">        <span class=\"string\">'\"<span class=\"variable\">$http_user_agent</span>\" \"<span class=\"variable\">$http_x_forwarded_for</span>\"'</span></span><br><span class=\"line\">    access_log /var/log/nginx/access.log main;</span><br><span class=\"line\">    <span class=\"attribute\">sendfile</span> <span class=\"literal\">on</span>;</span><br><span class=\"line\">    <span class=\"attribute\">keepalive_timeout</span> <span class=\"number\">65</span>;</span><br><span class=\"line\">    <span class=\"attribute\">include</span> /etc/nginx/conf.d/<span class=\"regexp\">*.conf</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>default.conf配置</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> localhost;</span><br><span class=\"line\">    <span class=\"attribute\">root</span> /usr/share/nginx/html/public;</span><br><span class=\"line\">    <span class=\"attribute\">index</span> index.php index.html index.htm;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"attribute\">location</span> <span class=\"regexp\">~* \\.(gif|jpg|png|css|js|flv|swf|ico|woff|ttf|woff2)(.*)$</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">access_log</span> <span class=\"literal\">off</span>;</span><br><span class=\"line\">        <span class=\"attribute\">expires</span> <span class=\"number\">30d</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"attribute\">location</span> / &#123;</span><br><span class=\"line\">        <span class=\"attribute\">try_files</span> <span class=\"variable\">$uri</span> <span class=\"variable\">$uri</span>/ /index.php<span class=\"variable\">$is_args</span><span class=\"variable\">$args</span>;</span><br><span class=\"line\">        <span class=\"comment\"># 连接php容器的9000端口</span></span><br><span class=\"line\">        <span class=\"attribute\">fastcgi_pass</span> php:<span class=\"number\">9000</span>;</span><br><span class=\"line\">        <span class=\"attribute\">fastcgi_index</span> index.php;</span><br><span class=\"line\">        <span class=\"attribute\">fastcgi_buffers</span> <span class=\"number\">16</span> <span class=\"number\">16k</span>;</span><br><span class=\"line\">        <span class=\"attribute\">fastcgi_buffer_size</span> <span class=\"number\">32k</span>;</span><br><span class=\"line\">        <span class=\"attribute\">fastcgi_param</span> SCRIPT_FILENAME <span class=\"variable\">$document_root</span><span class=\"variable\">$fastcgi_script_name</span>;</span><br><span class=\"line\">        <span class=\"attribute\">fastcgi_read_timeout</span> <span class=\"number\">600</span>;</span><br><span class=\"line\">        <span class=\"attribute\">include</span> fastcgi_params;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\"># fastcgi_pass里的php为php容器</span></span><br></pre></td></tr></table></figure>\n<p>3.启动nginx_main反向代理服务器，关联nginx1和nginx2</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --name nginx_main -d -p 83:80 \\</span><br><span class=\"line\">-v /root/docker/nginx/nginx_main.conf:/etc/nginx/nginx.conf --link nginx1:nginx1 --link nginx2:nginx2 nginx</span><br></pre></td></tr></table></figure>\n<p>nginx_main反向代理服务器配置</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">user</span> nginx;</span><br><span class=\"line\"><span class=\"attribute\">worker_processes</span> auto;</span><br><span class=\"line\"><span class=\"attribute\">error_log</span> /var/log/nginx/error.log;</span><br><span class=\"line\"><span class=\"attribute\">pid</span> /run/nginx.pid;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># include /usr/share/nginx/modules/*.conf;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">event</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">worker_connections</span> <span class=\"number\">1024</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">http</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\"># 反向代理配置，nginx1的权重是2，nginx2的权重是3</span></span><br><span class=\"line\">\t<span class=\"attribute\">upstream</span> php-fpm &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">server</span> nginx1 weight=<span class=\"number\">2</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">server</span> nginx2 weight=<span class=\"number\">3</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"attribute\">log_format</span> main <span class=\"string\">'<span class=\"variable\">$remote_addr</span> - <span class=\"variable\">$remote_user</span> [<span class=\"variable\">$time_local</span>] \"<span class=\"variable\">$request</span>\" '</span></span><br><span class=\"line\">                     <span class=\"string\">'<span class=\"variable\">$status</span> <span class=\"variable\">$body_bytes_sent</span> \"<span class=\"variable\">$http_referer</span>\" '</span></span><br><span class=\"line\">                     <span class=\"string\">'\"<span class=\"variable\">$http_user_agent</span>\" \"<span class=\"variable\">$http_x_forwarded_for</span>\"'</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">access_log</span>  /var/log/nginx/access.log  main;</span><br><span class=\"line\">\t<span class=\"attribute\">sendfile</span>            <span class=\"literal\">on</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">tcp_nopush</span>          <span class=\"literal\">on</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">tcp_nodelay</span>         <span class=\"literal\">on</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">keepalive_timeout</span>   <span class=\"number\">65</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">types_hash_max_size</span> <span class=\"number\">2048</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"attribute\">include</span>             /etc/nginx/mime.types;</span><br><span class=\"line\">\t<span class=\"attribute\">default_type</span>        application/octet-stream;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"section\">server</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">server_name</span> localhost;</span><br><span class=\"line\">\t\t<span class=\"attribute\">root</span> /usr/share/nginx/html;</span><br><span class=\"line\">\t\t<span class=\"attribute\">location</span> / &#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\"># 此处的php-fpm为上面upstream模块配置的php-fpm</span></span><br><span class=\"line\">\t\t\t<span class=\"attribute\">proxy_pass</span> http://php-fpm;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\"># proxy_pass的php-fpm必须加上http://，否则报错</span></span><br></pre></td></tr></table></figure>\n"},{"title":"cors跨域问题","date":"2018-01-14T16:00:00.000Z","_content":"\n\n\n以前碰到过跨域问题，这里整理了一下，主要是通过程序或者nginx配置实现的。\n\n\n\n## 分析思路\ncross-origin resource sharing，跨域资源共享，简称为CORS，html5下很容易解决\n假设有两个网站，客户端：www.site.com ，服务器：www.example.com \n客户端要访问服务器的资源，发送ajax GET [www.example.com/ajax/resource](http://www.example.com/ajax/resource) ，请求头中会增加Origin:www.site.com。 \n\n服务器返回头中要增加Access-Control-Allow-Orgin: *，这样客户端才会正常接收返回数据，没有的话会在console下报错。 \n\n还有这两项：Access-Control-Allow-Methods，Access-Control-Allow-Headers\n\n\n```\nquery-user-information:1 \nFailed to load http://www.proton.work/test/ajax: No 'Access-Control-Allow-Origin' header is present on the requested resource. Origin 'http://www.dep.work' is therefore not allowed access.\n\n现在没有Access-Control-Allow-Origin头在请求的资源上，源站点因此不能正常访问\n```\n\n## 解决办法\n\n1.通过php程序里面处理 \n\n```php\n//目前采用的php原生代码，可以实现简单的跨域访问\n处理如下:\n//允许所有的域名\nheader('Access-Control-Allow-Origin: *');\n//允许post，get请求\nheader('Access-Control-Allow-Methods: POST,GET ');\n//允许的header\nheader('Access-Control-Allow-Headers: content-type, x-requested-with');\n$json = ['succ'=>true,'info'=>['name'=>'my-name']];\n//返回json字符串，如果直接用return返回的话，会报错\necho json_encode($json);\nreturn ;\n```\n\n\n\n2.在laravel中增加cors处理 \n\n给路由增加中间件处理，实际上也是通过增加header头实现的，github上有barryvhd-cors包可以直接使用 \n\n```php\n//路由之前增加cors中间件处理\n\nRoute::get('ajax', function (\\Illuminate\\Http\\Request $request) { \n    $json = [ \n        'succ' => true, \n        'info' => [ \n            'name' => 'wjh' \n        ] \n    ];\n    echo json_encode($json); \n})->middleware('cors');\n\n//中间件文件\nCors.php\npublic function handle($request, \\Closure $next)\n{\n    header('content-type:application:json;charset=utf8'); \n    header('Access-Control-Allow-Origin: *'); \n    header('Access-Control-Allow-Methods: GET,POST'); \n    header('Access-Control-Allow-Headers: content-type,x-requested-with'); \n    return $next($request); \n}\n```\n\n\n\n3.nginx中处理cors \n\n```nginx\nif ($request_method = OPTION){\n                add_header 'Access-Control-Allow-Orgin' *;\n                add_header 'Access-Control-Allow-Credentials' 'true';\n                add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS';\n                add_header 'Access-Control-Allow-Headers' 'DNT, X-Mx-ReqToken, Keep-Alive, User-Agent, X-Requested-With, If-Modified-Since, Cache-Control, Content-Type';\n                add_header 'Content-Type' 'text/plain charset=UTF-8';\n                add_header 'Content-Length' 0;\n                return 200;\n            }\n```\n\n","source":"_posts/cors.md","raw":"---\ntitle: cors跨域问题\ndate: 2018-01-15\ntags: 网络\ncategories: 网络\n---\n\n\n\n以前碰到过跨域问题，这里整理了一下，主要是通过程序或者nginx配置实现的。\n\n\n\n## 分析思路\ncross-origin resource sharing，跨域资源共享，简称为CORS，html5下很容易解决\n假设有两个网站，客户端：www.site.com ，服务器：www.example.com \n客户端要访问服务器的资源，发送ajax GET [www.example.com/ajax/resource](http://www.example.com/ajax/resource) ，请求头中会增加Origin:www.site.com。 \n\n服务器返回头中要增加Access-Control-Allow-Orgin: *，这样客户端才会正常接收返回数据，没有的话会在console下报错。 \n\n还有这两项：Access-Control-Allow-Methods，Access-Control-Allow-Headers\n\n\n```\nquery-user-information:1 \nFailed to load http://www.proton.work/test/ajax: No 'Access-Control-Allow-Origin' header is present on the requested resource. Origin 'http://www.dep.work' is therefore not allowed access.\n\n现在没有Access-Control-Allow-Origin头在请求的资源上，源站点因此不能正常访问\n```\n\n## 解决办法\n\n1.通过php程序里面处理 \n\n```php\n//目前采用的php原生代码，可以实现简单的跨域访问\n处理如下:\n//允许所有的域名\nheader('Access-Control-Allow-Origin: *');\n//允许post，get请求\nheader('Access-Control-Allow-Methods: POST,GET ');\n//允许的header\nheader('Access-Control-Allow-Headers: content-type, x-requested-with');\n$json = ['succ'=>true,'info'=>['name'=>'my-name']];\n//返回json字符串，如果直接用return返回的话，会报错\necho json_encode($json);\nreturn ;\n```\n\n\n\n2.在laravel中增加cors处理 \n\n给路由增加中间件处理，实际上也是通过增加header头实现的，github上有barryvhd-cors包可以直接使用 \n\n```php\n//路由之前增加cors中间件处理\n\nRoute::get('ajax', function (\\Illuminate\\Http\\Request $request) { \n    $json = [ \n        'succ' => true, \n        'info' => [ \n            'name' => 'wjh' \n        ] \n    ];\n    echo json_encode($json); \n})->middleware('cors');\n\n//中间件文件\nCors.php\npublic function handle($request, \\Closure $next)\n{\n    header('content-type:application:json;charset=utf8'); \n    header('Access-Control-Allow-Origin: *'); \n    header('Access-Control-Allow-Methods: GET,POST'); \n    header('Access-Control-Allow-Headers: content-type,x-requested-with'); \n    return $next($request); \n}\n```\n\n\n\n3.nginx中处理cors \n\n```nginx\nif ($request_method = OPTION){\n                add_header 'Access-Control-Allow-Orgin' *;\n                add_header 'Access-Control-Allow-Credentials' 'true';\n                add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS';\n                add_header 'Access-Control-Allow-Headers' 'DNT, X-Mx-ReqToken, Keep-Alive, User-Agent, X-Requested-With, If-Modified-Since, Cache-Control, Content-Type';\n                add_header 'Content-Type' 'text/plain charset=UTF-8';\n                add_header 'Content-Length' 0;\n                return 200;\n            }\n```\n\n","slug":"cors","published":1,"updated":"2018-08-30T10:00:53.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlhq4qwr000fqkkaqkpm9kuv","content":"<p>以前碰到过跨域问题，这里整理了一下，主要是通过程序或者nginx配置实现的。</p>\n<h2 id=\"分析思路\"><a href=\"#分析思路\" class=\"headerlink\" title=\"分析思路\"></a>分析思路</h2><p>cross-origin resource sharing，跨域资源共享，简称为CORS，html5下很容易解决<br>假设有两个网站，客户端：www.site.com ，服务器：www.example.com<br>客户端要访问服务器的资源，发送ajax GET <a href=\"http://www.example.com/ajax/resource\" target=\"_blank\" rel=\"noopener\">www.example.com/ajax/resource</a> ，请求头中会增加Origin:www.site.com。 </p>\n<p>服务器返回头中要增加Access-Control-Allow-Orgin: *，这样客户端才会正常接收返回数据，没有的话会在console下报错。 </p>\n<p>还有这两项：Access-Control-Allow-Methods，Access-Control-Allow-Headers</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">query-user-information:1 </span><br><span class=\"line\">Failed to load http://www.proton.work/test/ajax: No &apos;Access-Control-Allow-Origin&apos; header is present on the requested resource. Origin &apos;http://www.dep.work&apos; is therefore not allowed access.</span><br><span class=\"line\"></span><br><span class=\"line\">现在没有Access-Control-Allow-Origin头在请求的资源上，源站点因此不能正常访问</span><br></pre></td></tr></table></figure>\n<h2 id=\"解决办法\"><a href=\"#解决办法\" class=\"headerlink\" title=\"解决办法\"></a>解决办法</h2><p>1.通过php程序里面处理 </p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//目前采用的php原生代码，可以实现简单的跨域访问</span></span><br><span class=\"line\">处理如下:</span><br><span class=\"line\"><span class=\"comment\">//允许所有的域名</span></span><br><span class=\"line\">header(<span class=\"string\">'Access-Control-Allow-Origin: *'</span>);</span><br><span class=\"line\"><span class=\"comment\">//允许post，get请求</span></span><br><span class=\"line\">header(<span class=\"string\">'Access-Control-Allow-Methods: POST,GET '</span>);</span><br><span class=\"line\"><span class=\"comment\">//允许的header</span></span><br><span class=\"line\">header(<span class=\"string\">'Access-Control-Allow-Headers: content-type, x-requested-with'</span>);</span><br><span class=\"line\">$json = [<span class=\"string\">'succ'</span>=&gt;<span class=\"keyword\">true</span>,<span class=\"string\">'info'</span>=&gt;[<span class=\"string\">'name'</span>=&gt;<span class=\"string\">'my-name'</span>]];</span><br><span class=\"line\"><span class=\"comment\">//返回json字符串，如果直接用return返回的话，会报错</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> json_encode($json);</span><br><span class=\"line\"><span class=\"keyword\">return</span> ;</span><br></pre></td></tr></table></figure>\n<p>2.在laravel中增加cors处理 </p>\n<p>给路由增加中间件处理，实际上也是通过增加header头实现的，github上有barryvhd-cors包可以直接使用 </p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//路由之前增加cors中间件处理</span></span><br><span class=\"line\"></span><br><span class=\"line\">Route::get(<span class=\"string\">'ajax'</span>, <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">(\\Illuminate\\Http\\Request $request)</span> </span>&#123; </span><br><span class=\"line\">    $json = [ </span><br><span class=\"line\">        <span class=\"string\">'succ'</span> =&gt; <span class=\"keyword\">true</span>, </span><br><span class=\"line\">        <span class=\"string\">'info'</span> =&gt; [ </span><br><span class=\"line\">            <span class=\"string\">'name'</span> =&gt; <span class=\"string\">'wjh'</span> </span><br><span class=\"line\">        ] </span><br><span class=\"line\">    ];</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> json_encode($json); </span><br><span class=\"line\">&#125;)-&gt;middleware(<span class=\"string\">'cors'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//中间件文件</span></span><br><span class=\"line\">Cors.php</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">handle</span><span class=\"params\">($request, \\Closure $next)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    header(<span class=\"string\">'content-type:application:json;charset=utf8'</span>); </span><br><span class=\"line\">    header(<span class=\"string\">'Access-Control-Allow-Origin: *'</span>); </span><br><span class=\"line\">    header(<span class=\"string\">'Access-Control-Allow-Methods: GET,POST'</span>); </span><br><span class=\"line\">    header(<span class=\"string\">'Access-Control-Allow-Headers: content-type,x-requested-with'</span>); </span><br><span class=\"line\">    <span class=\"keyword\">return</span> $next($request); </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>3.nginx中处理cors </p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">if</span> (<span class=\"variable\">$request_method</span> = OPTION)&#123;</span><br><span class=\"line\">                <span class=\"attribute\">add_header</span> <span class=\"string\">'Access-Control-Allow-Orgin'</span> *;</span><br><span class=\"line\">                <span class=\"attribute\">add_header</span> <span class=\"string\">'Access-Control-Allow-Credentials'</span> <span class=\"string\">'true'</span>;</span><br><span class=\"line\">                <span class=\"attribute\">add_header</span> <span class=\"string\">'Access-Control-Allow-Methods'</span> <span class=\"string\">'GET,POST,OPTIONS'</span>;</span><br><span class=\"line\">                <span class=\"attribute\">add_header</span> <span class=\"string\">'Access-Control-Allow-Headers'</span> <span class=\"string\">'DNT, X-Mx-ReqToken, Keep-Alive, User-Agent, X-Requested-With, If-Modified-Since, Cache-Control, Content-Type'</span>;</span><br><span class=\"line\">                <span class=\"attribute\">add_header</span> <span class=\"string\">'Content-Type'</span> <span class=\"string\">'text/plain charset=UTF-8'</span>;</span><br><span class=\"line\">                <span class=\"attribute\">add_header</span> <span class=\"string\">'Content-Length'</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">                <span class=\"attribute\">return</span> <span class=\"number\">200</span>;</span><br><span class=\"line\">            &#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>以前碰到过跨域问题，这里整理了一下，主要是通过程序或者nginx配置实现的。</p>\n<h2 id=\"分析思路\"><a href=\"#分析思路\" class=\"headerlink\" title=\"分析思路\"></a>分析思路</h2><p>cross-origin resource sharing，跨域资源共享，简称为CORS，html5下很容易解决<br>假设有两个网站，客户端：www.site.com ，服务器：www.example.com<br>客户端要访问服务器的资源，发送ajax GET <a href=\"http://www.example.com/ajax/resource\" target=\"_blank\" rel=\"noopener\">www.example.com/ajax/resource</a> ，请求头中会增加Origin:www.site.com。 </p>\n<p>服务器返回头中要增加Access-Control-Allow-Orgin: *，这样客户端才会正常接收返回数据，没有的话会在console下报错。 </p>\n<p>还有这两项：Access-Control-Allow-Methods，Access-Control-Allow-Headers</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">query-user-information:1 </span><br><span class=\"line\">Failed to load http://www.proton.work/test/ajax: No &apos;Access-Control-Allow-Origin&apos; header is present on the requested resource. Origin &apos;http://www.dep.work&apos; is therefore not allowed access.</span><br><span class=\"line\"></span><br><span class=\"line\">现在没有Access-Control-Allow-Origin头在请求的资源上，源站点因此不能正常访问</span><br></pre></td></tr></table></figure>\n<h2 id=\"解决办法\"><a href=\"#解决办法\" class=\"headerlink\" title=\"解决办法\"></a>解决办法</h2><p>1.通过php程序里面处理 </p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//目前采用的php原生代码，可以实现简单的跨域访问</span></span><br><span class=\"line\">处理如下:</span><br><span class=\"line\"><span class=\"comment\">//允许所有的域名</span></span><br><span class=\"line\">header(<span class=\"string\">'Access-Control-Allow-Origin: *'</span>);</span><br><span class=\"line\"><span class=\"comment\">//允许post，get请求</span></span><br><span class=\"line\">header(<span class=\"string\">'Access-Control-Allow-Methods: POST,GET '</span>);</span><br><span class=\"line\"><span class=\"comment\">//允许的header</span></span><br><span class=\"line\">header(<span class=\"string\">'Access-Control-Allow-Headers: content-type, x-requested-with'</span>);</span><br><span class=\"line\">$json = [<span class=\"string\">'succ'</span>=&gt;<span class=\"keyword\">true</span>,<span class=\"string\">'info'</span>=&gt;[<span class=\"string\">'name'</span>=&gt;<span class=\"string\">'my-name'</span>]];</span><br><span class=\"line\"><span class=\"comment\">//返回json字符串，如果直接用return返回的话，会报错</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> json_encode($json);</span><br><span class=\"line\"><span class=\"keyword\">return</span> ;</span><br></pre></td></tr></table></figure>\n<p>2.在laravel中增加cors处理 </p>\n<p>给路由增加中间件处理，实际上也是通过增加header头实现的，github上有barryvhd-cors包可以直接使用 </p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//路由之前增加cors中间件处理</span></span><br><span class=\"line\"></span><br><span class=\"line\">Route::get(<span class=\"string\">'ajax'</span>, <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">(\\Illuminate\\Http\\Request $request)</span> </span>&#123; </span><br><span class=\"line\">    $json = [ </span><br><span class=\"line\">        <span class=\"string\">'succ'</span> =&gt; <span class=\"keyword\">true</span>, </span><br><span class=\"line\">        <span class=\"string\">'info'</span> =&gt; [ </span><br><span class=\"line\">            <span class=\"string\">'name'</span> =&gt; <span class=\"string\">'wjh'</span> </span><br><span class=\"line\">        ] </span><br><span class=\"line\">    ];</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> json_encode($json); </span><br><span class=\"line\">&#125;)-&gt;middleware(<span class=\"string\">'cors'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//中间件文件</span></span><br><span class=\"line\">Cors.php</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">handle</span><span class=\"params\">($request, \\Closure $next)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    header(<span class=\"string\">'content-type:application:json;charset=utf8'</span>); </span><br><span class=\"line\">    header(<span class=\"string\">'Access-Control-Allow-Origin: *'</span>); </span><br><span class=\"line\">    header(<span class=\"string\">'Access-Control-Allow-Methods: GET,POST'</span>); </span><br><span class=\"line\">    header(<span class=\"string\">'Access-Control-Allow-Headers: content-type,x-requested-with'</span>); </span><br><span class=\"line\">    <span class=\"keyword\">return</span> $next($request); </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>3.nginx中处理cors </p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">if</span> (<span class=\"variable\">$request_method</span> = OPTION)&#123;</span><br><span class=\"line\">                <span class=\"attribute\">add_header</span> <span class=\"string\">'Access-Control-Allow-Orgin'</span> *;</span><br><span class=\"line\">                <span class=\"attribute\">add_header</span> <span class=\"string\">'Access-Control-Allow-Credentials'</span> <span class=\"string\">'true'</span>;</span><br><span class=\"line\">                <span class=\"attribute\">add_header</span> <span class=\"string\">'Access-Control-Allow-Methods'</span> <span class=\"string\">'GET,POST,OPTIONS'</span>;</span><br><span class=\"line\">                <span class=\"attribute\">add_header</span> <span class=\"string\">'Access-Control-Allow-Headers'</span> <span class=\"string\">'DNT, X-Mx-ReqToken, Keep-Alive, User-Agent, X-Requested-With, If-Modified-Since, Cache-Control, Content-Type'</span>;</span><br><span class=\"line\">                <span class=\"attribute\">add_header</span> <span class=\"string\">'Content-Type'</span> <span class=\"string\">'text/plain charset=UTF-8'</span>;</span><br><span class=\"line\">                <span class=\"attribute\">add_header</span> <span class=\"string\">'Content-Length'</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">                <span class=\"attribute\">return</span> <span class=\"number\">200</span>;</span><br><span class=\"line\">            &#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"docker实现mysql主从复制","date":"2018-05-09T16:00:00.000Z","_content":"\n\n\nlinux环境下docker实现mysql主从服务器\n\n\n\n## 思路\n\n启动2个mysql服务器，mysql_master主服务器，mysql_slave从服务器，并实现主从复制功能\n\n另外docker实现的nginx负载均衡在此 [nginx负载均衡](https://github.com/wjhtime/docker_nginx)\n\n\n\n## 目录说明\n\n```\n/root/docker/mysql/conf.d/master.cnf\t主机master配置文件\n/etc/mysql/conf.d/master.cnf\tmaster容器的配置文件\n/root/docker/mysql/master-data\t主机master数据文件\n/var/lib/mysql\t容器中mysql数据文件\n/root/docker/mysql/conf.d/slave.cnf\t主机中slave从服务器配置文件\n/etc/mysql/conf.d/slave.cnf\tslave容器中配置文件\n/root/docker/mysql/slave-data\tslave容器中的数据文件\n```\n\n\n\n## 步骤\n\n1.启动mysql_master主服务器\n\n```shell\n# 拉取mysql镜像\ndocker pull mysql:5.7\n\n# 启动容器，并配置密码为root\ndocker run --name mysql_master -d -p 3307:3306 \\\n-v /root/docker/mysql/conf.d/master.cnf:/etc/mysql/conf.d/master.cnf \\\n-v /root/docker/mysql/master-data:/var/lib/mysql \\\n-e MYSQL_ROOT_PASSWORD=root mysql:5.7\n```\n\n\n\n2.启动mysql_slave从服务器\n\n```shell\ndocker run --name mysql_slave -d -p 3308:3306 \\\n-v /root/docker/mysql/conf.d/slave.cnf:/etc/mysql/conf.d/slave.cnf \\\n-v /root/docker/mysql/slave-data:/var/lib/mysql \\\n-e MYSQL_ROOT_PASSWORD=root --link mysql_master:mysql_master mysql:5.7\n```\n\n\n\n3.创建backup用户，并授权同步\n\n```\ngrant replication slave on *.* to 'backup'@'%' indentified by '111111';\n```\n\n\n\n查看主服务器的状态，记录pos等数据\n\n```\nshow master status;\n```\n\n\n\n4.从服务器中执行\n\n```\nchange master to master_host='mysql_master',master_user='backup',master_password='111111',master_file_log='mysql_bin.000003',master_log_pos=439,master_port=3306;\n```\n\n\n\n```mysql\n# 查看各自的状态\nshow slave status;\nshow master status;\n\n# 启动主从复制\nstart slave;\n```\n\n\n\nmysql_master.cnf配置\n\n```mysql\n[mysqldump]\nuser=root\npassword='root'\n[mysqld]\nmax_allowed_packet=8M\nlower_case_table_names=1\ncharacter_set_server=utf8\nmax_connections=900\nmax_connect_errors=600\n# 比较重要，主服务器的id是1\nserver_id=1\nlog-bin=mysql-bin\n\nslow_query_log=1\nlong_query_time=1\nlog_error\n```\n\n\n\nmysql_slave.cnf配置\n\n```mysql\n[mysqldump]\nuser=root\npassword='root'\n[mysqld]\nmax_allowed_packet=8M\nlower_case_table_names=1\ncharacter_set_server=utf8\nmax_connections=900\nmax_connect_errors=600\n# 比较重要，从服务器的id是2\nserver_id=2\nlog-bin=mysql-bin\n\nslow_query_log=1\nlong_query_time=1\nlog_error\n```\n\n\n\n两个的log-bin配置均采用mysql-bin的方式\n\n\n\n5.后续增加从服务器\n\n```mysql\n# master服务器\nflush tables with read lock;\n\n# 记录日志点\nshow master status;\n\n# 导出\nmysql_dump -R uroot -p database > /tmp/database.sql\nunlock tables;\n\n从服务器的配置方法同上\n创建一个server_id=3的配置文件，一个数据挂载目录\nsource /tmp/database.sql\nchange master to ...\n```\n\n\n\n\n\n\n\n\n","source":"_posts/docker_mysql.md","raw":"---\ntitle: docker实现mysql主从复制\ndate: 2018-05-10\ntags: docker\ncategories: docker\n---\n\n\n\nlinux环境下docker实现mysql主从服务器\n\n\n\n## 思路\n\n启动2个mysql服务器，mysql_master主服务器，mysql_slave从服务器，并实现主从复制功能\n\n另外docker实现的nginx负载均衡在此 [nginx负载均衡](https://github.com/wjhtime/docker_nginx)\n\n\n\n## 目录说明\n\n```\n/root/docker/mysql/conf.d/master.cnf\t主机master配置文件\n/etc/mysql/conf.d/master.cnf\tmaster容器的配置文件\n/root/docker/mysql/master-data\t主机master数据文件\n/var/lib/mysql\t容器中mysql数据文件\n/root/docker/mysql/conf.d/slave.cnf\t主机中slave从服务器配置文件\n/etc/mysql/conf.d/slave.cnf\tslave容器中配置文件\n/root/docker/mysql/slave-data\tslave容器中的数据文件\n```\n\n\n\n## 步骤\n\n1.启动mysql_master主服务器\n\n```shell\n# 拉取mysql镜像\ndocker pull mysql:5.7\n\n# 启动容器，并配置密码为root\ndocker run --name mysql_master -d -p 3307:3306 \\\n-v /root/docker/mysql/conf.d/master.cnf:/etc/mysql/conf.d/master.cnf \\\n-v /root/docker/mysql/master-data:/var/lib/mysql \\\n-e MYSQL_ROOT_PASSWORD=root mysql:5.7\n```\n\n\n\n2.启动mysql_slave从服务器\n\n```shell\ndocker run --name mysql_slave -d -p 3308:3306 \\\n-v /root/docker/mysql/conf.d/slave.cnf:/etc/mysql/conf.d/slave.cnf \\\n-v /root/docker/mysql/slave-data:/var/lib/mysql \\\n-e MYSQL_ROOT_PASSWORD=root --link mysql_master:mysql_master mysql:5.7\n```\n\n\n\n3.创建backup用户，并授权同步\n\n```\ngrant replication slave on *.* to 'backup'@'%' indentified by '111111';\n```\n\n\n\n查看主服务器的状态，记录pos等数据\n\n```\nshow master status;\n```\n\n\n\n4.从服务器中执行\n\n```\nchange master to master_host='mysql_master',master_user='backup',master_password='111111',master_file_log='mysql_bin.000003',master_log_pos=439,master_port=3306;\n```\n\n\n\n```mysql\n# 查看各自的状态\nshow slave status;\nshow master status;\n\n# 启动主从复制\nstart slave;\n```\n\n\n\nmysql_master.cnf配置\n\n```mysql\n[mysqldump]\nuser=root\npassword='root'\n[mysqld]\nmax_allowed_packet=8M\nlower_case_table_names=1\ncharacter_set_server=utf8\nmax_connections=900\nmax_connect_errors=600\n# 比较重要，主服务器的id是1\nserver_id=1\nlog-bin=mysql-bin\n\nslow_query_log=1\nlong_query_time=1\nlog_error\n```\n\n\n\nmysql_slave.cnf配置\n\n```mysql\n[mysqldump]\nuser=root\npassword='root'\n[mysqld]\nmax_allowed_packet=8M\nlower_case_table_names=1\ncharacter_set_server=utf8\nmax_connections=900\nmax_connect_errors=600\n# 比较重要，从服务器的id是2\nserver_id=2\nlog-bin=mysql-bin\n\nslow_query_log=1\nlong_query_time=1\nlog_error\n```\n\n\n\n两个的log-bin配置均采用mysql-bin的方式\n\n\n\n5.后续增加从服务器\n\n```mysql\n# master服务器\nflush tables with read lock;\n\n# 记录日志点\nshow master status;\n\n# 导出\nmysql_dump -R uroot -p database > /tmp/database.sql\nunlock tables;\n\n从服务器的配置方法同上\n创建一个server_id=3的配置文件，一个数据挂载目录\nsource /tmp/database.sql\nchange master to ...\n```\n\n\n\n\n\n\n\n\n","slug":"docker_mysql","published":1,"updated":"2018-08-30T10:00:53.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlhq4qwx000kqkka8lapjxmr","content":"<p>linux环境下docker实现mysql主从服务器</p>\n<h2 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h2><p>启动2个mysql服务器，mysql_master主服务器，mysql_slave从服务器，并实现主从复制功能</p>\n<p>另外docker实现的nginx负载均衡在此 <a href=\"https://github.com/wjhtime/docker_nginx\" target=\"_blank\" rel=\"noopener\">nginx负载均衡</a></p>\n<h2 id=\"目录说明\"><a href=\"#目录说明\" class=\"headerlink\" title=\"目录说明\"></a>目录说明</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/root/docker/mysql/conf.d/master.cnf\t主机master配置文件</span><br><span class=\"line\">/etc/mysql/conf.d/master.cnf\tmaster容器的配置文件</span><br><span class=\"line\">/root/docker/mysql/master-data\t主机master数据文件</span><br><span class=\"line\">/var/lib/mysql\t容器中mysql数据文件</span><br><span class=\"line\">/root/docker/mysql/conf.d/slave.cnf\t主机中slave从服务器配置文件</span><br><span class=\"line\">/etc/mysql/conf.d/slave.cnf\tslave容器中配置文件</span><br><span class=\"line\">/root/docker/mysql/slave-data\tslave容器中的数据文件</span><br></pre></td></tr></table></figure>\n<h2 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h2><p>1.启动mysql_master主服务器</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 拉取mysql镜像</span><br><span class=\"line\">docker pull mysql:5.7</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> 启动容器，并配置密码为root</span><br><span class=\"line\">docker run --name mysql_master -d -p 3307:3306 \\</span><br><span class=\"line\">-v /root/docker/mysql/conf.d/master.cnf:/etc/mysql/conf.d/master.cnf \\</span><br><span class=\"line\">-v /root/docker/mysql/master-data:/var/lib/mysql \\</span><br><span class=\"line\">-e MYSQL_ROOT_PASSWORD=root mysql:5.7</span><br></pre></td></tr></table></figure>\n<p>2.启动mysql_slave从服务器</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --name mysql_slave -d -p 3308:3306 \\</span><br><span class=\"line\">-v /root/docker/mysql/conf.d/slave.cnf:/etc/mysql/conf.d/slave.cnf \\</span><br><span class=\"line\">-v /root/docker/mysql/slave-data:/var/lib/mysql \\</span><br><span class=\"line\">-e MYSQL_ROOT_PASSWORD=root --link mysql_master:mysql_master mysql:5.7</span><br></pre></td></tr></table></figure>\n<p>3.创建backup用户，并授权同步</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grant replication slave on *.* to &apos;backup&apos;@&apos;%&apos; indentified by &apos;111111&apos;;</span><br></pre></td></tr></table></figure>\n<p>查看主服务器的状态，记录pos等数据</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">show master status;</span><br></pre></td></tr></table></figure>\n<p>4.从服务器中执行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">change master to master_host=&apos;mysql_master&apos;,master_user=&apos;backup&apos;,master_password=&apos;111111&apos;,master_file_log=&apos;mysql_bin.000003&apos;,master_log_pos=439,master_port=3306;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 查看各自的状态</span><br><span class=\"line\">show slave status;</span><br><span class=\"line\">show master status;</span><br><span class=\"line\"></span><br><span class=\"line\"># 启动主从复制</span><br><span class=\"line\">start slave;</span><br></pre></td></tr></table></figure>\n<p>mysql_master.cnf配置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mysqldump]</span><br><span class=\"line\">user=root</span><br><span class=\"line\">password=&apos;root&apos;</span><br><span class=\"line\">[mysqld]</span><br><span class=\"line\">max_allowed_packet=8M</span><br><span class=\"line\">lower_case_table_names=1</span><br><span class=\"line\">character_set_server=utf8</span><br><span class=\"line\">max_connections=900</span><br><span class=\"line\">max_connect_errors=600</span><br><span class=\"line\"># 比较重要，主服务器的id是1</span><br><span class=\"line\">server_id=1</span><br><span class=\"line\">log-bin=mysql-bin</span><br><span class=\"line\"></span><br><span class=\"line\">slow_query_log=1</span><br><span class=\"line\">long_query_time=1</span><br><span class=\"line\">log_error</span><br></pre></td></tr></table></figure>\n<p>mysql_slave.cnf配置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mysqldump]</span><br><span class=\"line\">user=root</span><br><span class=\"line\">password=&apos;root&apos;</span><br><span class=\"line\">[mysqld]</span><br><span class=\"line\">max_allowed_packet=8M</span><br><span class=\"line\">lower_case_table_names=1</span><br><span class=\"line\">character_set_server=utf8</span><br><span class=\"line\">max_connections=900</span><br><span class=\"line\">max_connect_errors=600</span><br><span class=\"line\"># 比较重要，从服务器的id是2</span><br><span class=\"line\">server_id=2</span><br><span class=\"line\">log-bin=mysql-bin</span><br><span class=\"line\"></span><br><span class=\"line\">slow_query_log=1</span><br><span class=\"line\">long_query_time=1</span><br><span class=\"line\">log_error</span><br></pre></td></tr></table></figure>\n<p>两个的log-bin配置均采用mysql-bin的方式</p>\n<p>5.后续增加从服务器</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># master服务器</span><br><span class=\"line\">flush tables with read lock;</span><br><span class=\"line\"></span><br><span class=\"line\"># 记录日志点</span><br><span class=\"line\">show master status;</span><br><span class=\"line\"></span><br><span class=\"line\"># 导出</span><br><span class=\"line\">mysql_dump -R uroot -p database &gt; /tmp/database.sql</span><br><span class=\"line\">unlock tables;</span><br><span class=\"line\"></span><br><span class=\"line\">从服务器的配置方法同上</span><br><span class=\"line\">创建一个server_id=3的配置文件，一个数据挂载目录</span><br><span class=\"line\">source /tmp/database.sql</span><br><span class=\"line\">change master to ...</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>linux环境下docker实现mysql主从服务器</p>\n<h2 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h2><p>启动2个mysql服务器，mysql_master主服务器，mysql_slave从服务器，并实现主从复制功能</p>\n<p>另外docker实现的nginx负载均衡在此 <a href=\"https://github.com/wjhtime/docker_nginx\" target=\"_blank\" rel=\"noopener\">nginx负载均衡</a></p>\n<h2 id=\"目录说明\"><a href=\"#目录说明\" class=\"headerlink\" title=\"目录说明\"></a>目录说明</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/root/docker/mysql/conf.d/master.cnf\t主机master配置文件</span><br><span class=\"line\">/etc/mysql/conf.d/master.cnf\tmaster容器的配置文件</span><br><span class=\"line\">/root/docker/mysql/master-data\t主机master数据文件</span><br><span class=\"line\">/var/lib/mysql\t容器中mysql数据文件</span><br><span class=\"line\">/root/docker/mysql/conf.d/slave.cnf\t主机中slave从服务器配置文件</span><br><span class=\"line\">/etc/mysql/conf.d/slave.cnf\tslave容器中配置文件</span><br><span class=\"line\">/root/docker/mysql/slave-data\tslave容器中的数据文件</span><br></pre></td></tr></table></figure>\n<h2 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h2><p>1.启动mysql_master主服务器</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 拉取mysql镜像</span><br><span class=\"line\">docker pull mysql:5.7</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> 启动容器，并配置密码为root</span><br><span class=\"line\">docker run --name mysql_master -d -p 3307:3306 \\</span><br><span class=\"line\">-v /root/docker/mysql/conf.d/master.cnf:/etc/mysql/conf.d/master.cnf \\</span><br><span class=\"line\">-v /root/docker/mysql/master-data:/var/lib/mysql \\</span><br><span class=\"line\">-e MYSQL_ROOT_PASSWORD=root mysql:5.7</span><br></pre></td></tr></table></figure>\n<p>2.启动mysql_slave从服务器</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --name mysql_slave -d -p 3308:3306 \\</span><br><span class=\"line\">-v /root/docker/mysql/conf.d/slave.cnf:/etc/mysql/conf.d/slave.cnf \\</span><br><span class=\"line\">-v /root/docker/mysql/slave-data:/var/lib/mysql \\</span><br><span class=\"line\">-e MYSQL_ROOT_PASSWORD=root --link mysql_master:mysql_master mysql:5.7</span><br></pre></td></tr></table></figure>\n<p>3.创建backup用户，并授权同步</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grant replication slave on *.* to &apos;backup&apos;@&apos;%&apos; indentified by &apos;111111&apos;;</span><br></pre></td></tr></table></figure>\n<p>查看主服务器的状态，记录pos等数据</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">show master status;</span><br></pre></td></tr></table></figure>\n<p>4.从服务器中执行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">change master to master_host=&apos;mysql_master&apos;,master_user=&apos;backup&apos;,master_password=&apos;111111&apos;,master_file_log=&apos;mysql_bin.000003&apos;,master_log_pos=439,master_port=3306;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 查看各自的状态</span><br><span class=\"line\">show slave status;</span><br><span class=\"line\">show master status;</span><br><span class=\"line\"></span><br><span class=\"line\"># 启动主从复制</span><br><span class=\"line\">start slave;</span><br></pre></td></tr></table></figure>\n<p>mysql_master.cnf配置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mysqldump]</span><br><span class=\"line\">user=root</span><br><span class=\"line\">password=&apos;root&apos;</span><br><span class=\"line\">[mysqld]</span><br><span class=\"line\">max_allowed_packet=8M</span><br><span class=\"line\">lower_case_table_names=1</span><br><span class=\"line\">character_set_server=utf8</span><br><span class=\"line\">max_connections=900</span><br><span class=\"line\">max_connect_errors=600</span><br><span class=\"line\"># 比较重要，主服务器的id是1</span><br><span class=\"line\">server_id=1</span><br><span class=\"line\">log-bin=mysql-bin</span><br><span class=\"line\"></span><br><span class=\"line\">slow_query_log=1</span><br><span class=\"line\">long_query_time=1</span><br><span class=\"line\">log_error</span><br></pre></td></tr></table></figure>\n<p>mysql_slave.cnf配置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mysqldump]</span><br><span class=\"line\">user=root</span><br><span class=\"line\">password=&apos;root&apos;</span><br><span class=\"line\">[mysqld]</span><br><span class=\"line\">max_allowed_packet=8M</span><br><span class=\"line\">lower_case_table_names=1</span><br><span class=\"line\">character_set_server=utf8</span><br><span class=\"line\">max_connections=900</span><br><span class=\"line\">max_connect_errors=600</span><br><span class=\"line\"># 比较重要，从服务器的id是2</span><br><span class=\"line\">server_id=2</span><br><span class=\"line\">log-bin=mysql-bin</span><br><span class=\"line\"></span><br><span class=\"line\">slow_query_log=1</span><br><span class=\"line\">long_query_time=1</span><br><span class=\"line\">log_error</span><br></pre></td></tr></table></figure>\n<p>两个的log-bin配置均采用mysql-bin的方式</p>\n<p>5.后续增加从服务器</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># master服务器</span><br><span class=\"line\">flush tables with read lock;</span><br><span class=\"line\"></span><br><span class=\"line\"># 记录日志点</span><br><span class=\"line\">show master status;</span><br><span class=\"line\"></span><br><span class=\"line\"># 导出</span><br><span class=\"line\">mysql_dump -R uroot -p database &gt; /tmp/database.sql</span><br><span class=\"line\">unlock tables;</span><br><span class=\"line\"></span><br><span class=\"line\">从服务器的配置方法同上</span><br><span class=\"line\">创建一个server_id=3的配置文件，一个数据挂载目录</span><br><span class=\"line\">source /tmp/database.sql</span><br><span class=\"line\">change master to ...</span><br></pre></td></tr></table></figure>\n"},{"title":"kibana使用技巧","date":"2018-03-22T16:00:00.000Z","_content":"\n\n### kibana搜索规则\n\n`\"key word\"`\n关键词搜索，加上引号可以查询整个短语\n\n\n\n`status:504`\n按关键词搜索，查找结果中包含504的数据\n\n\n\n`?`匹配单个字符\n`*` 匹配多个字符\n\n\n\n`AND`\n`OR`\n逻辑操作，必须大写\n\n\n\n`+`\t结果中必须有\n`-`\t结果中去掉\n\n\n统计nginx访问日志\n\n状态码是200，不是资源类型的请求\n\n```\nstatus:200 AND NOT request:png AND NOT request:gif AND NOT request:jpg AND NOT request:ico AND NOT request:css AND NOT request:js\n```\n\n","source":"_posts/kibana.md","raw":"---\ntitle: kibana使用技巧\ndate: 2018-03-23\ncategories: 学习笔记\n---\n\n\n### kibana搜索规则\n\n`\"key word\"`\n关键词搜索，加上引号可以查询整个短语\n\n\n\n`status:504`\n按关键词搜索，查找结果中包含504的数据\n\n\n\n`?`匹配单个字符\n`*` 匹配多个字符\n\n\n\n`AND`\n`OR`\n逻辑操作，必须大写\n\n\n\n`+`\t结果中必须有\n`-`\t结果中去掉\n\n\n统计nginx访问日志\n\n状态码是200，不是资源类型的请求\n\n```\nstatus:200 AND NOT request:png AND NOT request:gif AND NOT request:jpg AND NOT request:ico AND NOT request:css AND NOT request:js\n```\n\n","slug":"kibana","published":1,"updated":"2018-08-30T10:00:53.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlhq4qwz000mqkkaheaqv60o","content":"<h3 id=\"kibana搜索规则\"><a href=\"#kibana搜索规则\" class=\"headerlink\" title=\"kibana搜索规则\"></a>kibana搜索规则</h3><p><code>&quot;key word&quot;</code><br>关键词搜索，加上引号可以查询整个短语</p>\n<p><code>status:504</code><br>按关键词搜索，查找结果中包含504的数据</p>\n<p><code>?</code>匹配单个字符<br><code>*</code> 匹配多个字符</p>\n<p><code>AND</code><br><code>OR</code><br>逻辑操作，必须大写</p>\n<p><code>+</code>    结果中必须有<br><code>-</code>    结果中去掉</p>\n<p>统计nginx访问日志</p>\n<p>状态码是200，不是资源类型的请求</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">status:200 AND NOT request:png AND NOT request:gif AND NOT request:jpg AND NOT request:ico AND NOT request:css AND NOT request:js</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"kibana搜索规则\"><a href=\"#kibana搜索规则\" class=\"headerlink\" title=\"kibana搜索规则\"></a>kibana搜索规则</h3><p><code>&quot;key word&quot;</code><br>关键词搜索，加上引号可以查询整个短语</p>\n<p><code>status:504</code><br>按关键词搜索，查找结果中包含504的数据</p>\n<p><code>?</code>匹配单个字符<br><code>*</code> 匹配多个字符</p>\n<p><code>AND</code><br><code>OR</code><br>逻辑操作，必须大写</p>\n<p><code>+</code>    结果中必须有<br><code>-</code>    结果中去掉</p>\n<p>统计nginx访问日志</p>\n<p>状态码是200，不是资源类型的请求</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">status:200 AND NOT request:png AND NOT request:gif AND NOT request:jpg AND NOT request:ico AND NOT request:css AND NOT request:js</span><br></pre></td></tr></table></figure>\n"},{"title":"概率输出字符","date":"2018-08-30T16:00:00.000Z","_content":"\n​\t执行方法输出字符，每次输出字符a,b,c,d中的一个，当量到一定程度，例如循环1000000次之后，统计每个字符的出现次数，满足a：10%,b：20%,c：30%,d：40%\n\n\n\n```php\n//a出现的概率是10%，b是20%，c是30%，d是40%\n$pro = [\n    'a' =>10,\n    'b' =>20,\n    'c' =>30,\n    'd' =>40\n];\n\nfunction gailv($arr){\n    $number = mt_rand(1, array_sum($arr));\n    switch ($number){\n        case $number<=10:\n            return 'a';\n            break;\n        case $number>10 && $number<=30:\n            return 'b';\n            break;\n        case $number>30&&$number<=60:\n            return 'c';\n            break;\n        case $number>60&&$number<=100:\n            return 'd';\n            break;\n    }\n}\n```\n\n\n\n测试方法：\n\n```php\nfor($i=0; $i<1000000; $i++){\n    $r[] = gailv($pro);\n}\nprint_r(array_count_values($r));\n\n//输出结果，基本满足概率\nArray\n(\n    [a] => 99958\n    [d] => 400218\n    [c] => 299746\n    [b] => 200078\n)\n```\n\n遗留问题：\n后期扩展比较麻烦，修改一个字符的概率，要把程序重写一遍\n\n---\n\n上面的方法太蠢了，网上搜到的更好的方法，且易于扩展\n\n```php\nfunction proRand($arr) {\n    $sum = array_sum($arr);\n    foreach ($arr as $k => $v) {\n        $rand = mt_rand(1, $sum);\n        if ($rand <= $v) return $k;\n        else {\n            $sum -= $v;\n        }\n    }\n}\n```\n\n\n\n\n\n","source":"_posts/print_char_probability.md","raw":"---\ntitle: 概率输出字符\ndate: 2018-08-31\ncategories: 算法\ntags: 算法\n---\n\n​\t执行方法输出字符，每次输出字符a,b,c,d中的一个，当量到一定程度，例如循环1000000次之后，统计每个字符的出现次数，满足a：10%,b：20%,c：30%,d：40%\n\n\n\n```php\n//a出现的概率是10%，b是20%，c是30%，d是40%\n$pro = [\n    'a' =>10,\n    'b' =>20,\n    'c' =>30,\n    'd' =>40\n];\n\nfunction gailv($arr){\n    $number = mt_rand(1, array_sum($arr));\n    switch ($number){\n        case $number<=10:\n            return 'a';\n            break;\n        case $number>10 && $number<=30:\n            return 'b';\n            break;\n        case $number>30&&$number<=60:\n            return 'c';\n            break;\n        case $number>60&&$number<=100:\n            return 'd';\n            break;\n    }\n}\n```\n\n\n\n测试方法：\n\n```php\nfor($i=0; $i<1000000; $i++){\n    $r[] = gailv($pro);\n}\nprint_r(array_count_values($r));\n\n//输出结果，基本满足概率\nArray\n(\n    [a] => 99958\n    [d] => 400218\n    [c] => 299746\n    [b] => 200078\n)\n```\n\n遗留问题：\n后期扩展比较麻烦，修改一个字符的概率，要把程序重写一遍\n\n---\n\n上面的方法太蠢了，网上搜到的更好的方法，且易于扩展\n\n```php\nfunction proRand($arr) {\n    $sum = array_sum($arr);\n    foreach ($arr as $k => $v) {\n        $rand = mt_rand(1, $sum);\n        if ($rand <= $v) return $k;\n        else {\n            $sum -= $v;\n        }\n    }\n}\n```\n\n\n\n\n\n","slug":"print_char_probability","published":1,"updated":"2018-08-31T08:14:48.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlhq4qx2000rqkkawpj471ol","content":"<p>​    执行方法输出字符，每次输出字符a,b,c,d中的一个，当量到一定程度，例如循环1000000次之后，统计每个字符的出现次数，满足a：10%,b：20%,c：30%,d：40%</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//a出现的概率是10%，b是20%，c是30%，d是40%</span></span><br><span class=\"line\">$pro = [</span><br><span class=\"line\">    <span class=\"string\">'a'</span> =&gt;<span class=\"number\">10</span>,</span><br><span class=\"line\">    <span class=\"string\">'b'</span> =&gt;<span class=\"number\">20</span>,</span><br><span class=\"line\">    <span class=\"string\">'c'</span> =&gt;<span class=\"number\">30</span>,</span><br><span class=\"line\">    <span class=\"string\">'d'</span> =&gt;<span class=\"number\">40</span></span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">gailv</span><span class=\"params\">($arr)</span></span>&#123;</span><br><span class=\"line\">    $number = mt_rand(<span class=\"number\">1</span>, array_sum($arr));</span><br><span class=\"line\">    <span class=\"keyword\">switch</span> ($number)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> $number&lt;=<span class=\"number\">10</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">'a'</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> $number&gt;<span class=\"number\">10</span> &amp;&amp; $number&lt;=<span class=\"number\">30</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">'b'</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> $number&gt;<span class=\"number\">30</span>&amp;&amp;$number&lt;=<span class=\"number\">60</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">'c'</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> $number&gt;<span class=\"number\">60</span>&amp;&amp;$number&lt;=<span class=\"number\">100</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">'d'</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>测试方法：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>($i=<span class=\"number\">0</span>; $i&lt;<span class=\"number\">1000000</span>; $i++)&#123;</span><br><span class=\"line\">    $r[] = gailv($pro);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">print_r(array_count_values($r));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//输出结果，基本满足概率</span></span><br><span class=\"line\"><span class=\"keyword\">Array</span></span><br><span class=\"line\">(</span><br><span class=\"line\">    [a] =&gt; <span class=\"number\">99958</span></span><br><span class=\"line\">    [d] =&gt; <span class=\"number\">400218</span></span><br><span class=\"line\">    [c] =&gt; <span class=\"number\">299746</span></span><br><span class=\"line\">    [b] =&gt; <span class=\"number\">200078</span></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<p>遗留问题：<br>后期扩展比较麻烦，修改一个字符的概率，要把程序重写一遍</p>\n<hr>\n<p>上面的方法太蠢了，网上搜到的更好的方法，且易于扩展</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">proRand</span><span class=\"params\">($arr)</span> </span>&#123;</span><br><span class=\"line\">    $sum = array_sum($arr);</span><br><span class=\"line\">    <span class=\"keyword\">foreach</span> ($arr <span class=\"keyword\">as</span> $k =&gt; $v) &#123;</span><br><span class=\"line\">        $rand = mt_rand(<span class=\"number\">1</span>, $sum);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ($rand &lt;= $v) <span class=\"keyword\">return</span> $k;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            $sum -= $v;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>​    执行方法输出字符，每次输出字符a,b,c,d中的一个，当量到一定程度，例如循环1000000次之后，统计每个字符的出现次数，满足a：10%,b：20%,c：30%,d：40%</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//a出现的概率是10%，b是20%，c是30%，d是40%</span></span><br><span class=\"line\">$pro = [</span><br><span class=\"line\">    <span class=\"string\">'a'</span> =&gt;<span class=\"number\">10</span>,</span><br><span class=\"line\">    <span class=\"string\">'b'</span> =&gt;<span class=\"number\">20</span>,</span><br><span class=\"line\">    <span class=\"string\">'c'</span> =&gt;<span class=\"number\">30</span>,</span><br><span class=\"line\">    <span class=\"string\">'d'</span> =&gt;<span class=\"number\">40</span></span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">gailv</span><span class=\"params\">($arr)</span></span>&#123;</span><br><span class=\"line\">    $number = mt_rand(<span class=\"number\">1</span>, array_sum($arr));</span><br><span class=\"line\">    <span class=\"keyword\">switch</span> ($number)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> $number&lt;=<span class=\"number\">10</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">'a'</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> $number&gt;<span class=\"number\">10</span> &amp;&amp; $number&lt;=<span class=\"number\">30</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">'b'</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> $number&gt;<span class=\"number\">30</span>&amp;&amp;$number&lt;=<span class=\"number\">60</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">'c'</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> $number&gt;<span class=\"number\">60</span>&amp;&amp;$number&lt;=<span class=\"number\">100</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">'d'</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>测试方法：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>($i=<span class=\"number\">0</span>; $i&lt;<span class=\"number\">1000000</span>; $i++)&#123;</span><br><span class=\"line\">    $r[] = gailv($pro);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">print_r(array_count_values($r));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//输出结果，基本满足概率</span></span><br><span class=\"line\"><span class=\"keyword\">Array</span></span><br><span class=\"line\">(</span><br><span class=\"line\">    [a] =&gt; <span class=\"number\">99958</span></span><br><span class=\"line\">    [d] =&gt; <span class=\"number\">400218</span></span><br><span class=\"line\">    [c] =&gt; <span class=\"number\">299746</span></span><br><span class=\"line\">    [b] =&gt; <span class=\"number\">200078</span></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<p>遗留问题：<br>后期扩展比较麻烦，修改一个字符的概率，要把程序重写一遍</p>\n<hr>\n<p>上面的方法太蠢了，网上搜到的更好的方法，且易于扩展</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">proRand</span><span class=\"params\">($arr)</span> </span>&#123;</span><br><span class=\"line\">    $sum = array_sum($arr);</span><br><span class=\"line\">    <span class=\"keyword\">foreach</span> ($arr <span class=\"keyword\">as</span> $k =&gt; $v) &#123;</span><br><span class=\"line\">        $rand = mt_rand(<span class=\"number\">1</span>, $sum);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ($rand &lt;= $v) <span class=\"keyword\">return</span> $k;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            $sum -= $v;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"计算质数","date":"2018-02-03T16:00:00.000Z","_content":"\n求n以内的质数\n\n#### 思路\n```\n质数是指大于1的正数，只能被1和本身整除\n简洁方法：如果到n/2还没有查找到，则该数为质数\n1. 从2开始，循环小于n的所有数\n2. 嵌套循环，循环小于每个值的二分之一的数\n3. 外层对内层数取余，如果等于0，则不是质数，跳出循环\n4. 内层循环结束，判断值是否超过了i/2，如果是，加入到结果数组\n```\n\n#### 实现\n```php\nfunction find_prime($n) {\n    $result = [];\n    for ($i=2; $i<=$n; $i++){\n        for ($j=2; $j<=$i/2; $j++){\n            if ($i % $j == 0){\n                break;\n            }\n        }\n        if ($j > $i/2){\n            array_push($result, $i);\n        }\n    }\n    return $result;\n}\n```","source":"_posts/prime_number.md","raw":"---\ntitle: 计算质数\ndate: 2018-02-04\ncategories: 算法\ntags: 算法\n---\n\n求n以内的质数\n\n#### 思路\n```\n质数是指大于1的正数，只能被1和本身整除\n简洁方法：如果到n/2还没有查找到，则该数为质数\n1. 从2开始，循环小于n的所有数\n2. 嵌套循环，循环小于每个值的二分之一的数\n3. 外层对内层数取余，如果等于0，则不是质数，跳出循环\n4. 内层循环结束，判断值是否超过了i/2，如果是，加入到结果数组\n```\n\n#### 实现\n```php\nfunction find_prime($n) {\n    $result = [];\n    for ($i=2; $i<=$n; $i++){\n        for ($j=2; $j<=$i/2; $j++){\n            if ($i % $j == 0){\n                break;\n            }\n        }\n        if ($j > $i/2){\n            array_push($result, $i);\n        }\n    }\n    return $result;\n}\n```","slug":"prime_number","published":1,"updated":"2018-08-30T10:00:53.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlhq4qx4000sqkkai1dxssoa","content":"<p>求n以内的质数</p>\n<h4 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">质数是指大于1的正数，只能被1和本身整除</span><br><span class=\"line\">简洁方法：如果到n/2还没有查找到，则该数为质数</span><br><span class=\"line\">1. 从2开始，循环小于n的所有数</span><br><span class=\"line\">2. 嵌套循环，循环小于每个值的二分之一的数</span><br><span class=\"line\">3. 外层对内层数取余，如果等于0，则不是质数，跳出循环</span><br><span class=\"line\">4. 内层循环结束，判断值是否超过了i/2，如果是，加入到结果数组</span><br></pre></td></tr></table></figure>\n<h4 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">find_prime</span><span class=\"params\">($n)</span> </span>&#123;</span><br><span class=\"line\">    $result = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> ($i=<span class=\"number\">2</span>; $i&lt;=$n; $i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> ($j=<span class=\"number\">2</span>; $j&lt;=$i/<span class=\"number\">2</span>; $j++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> ($i % $j == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ($j &gt; $i/<span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">            array_push($result, $i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> $result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>求n以内的质数</p>\n<h4 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">质数是指大于1的正数，只能被1和本身整除</span><br><span class=\"line\">简洁方法：如果到n/2还没有查找到，则该数为质数</span><br><span class=\"line\">1. 从2开始，循环小于n的所有数</span><br><span class=\"line\">2. 嵌套循环，循环小于每个值的二分之一的数</span><br><span class=\"line\">3. 外层对内层数取余，如果等于0，则不是质数，跳出循环</span><br><span class=\"line\">4. 内层循环结束，判断值是否超过了i/2，如果是，加入到结果数组</span><br></pre></td></tr></table></figure>\n<h4 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">find_prime</span><span class=\"params\">($n)</span> </span>&#123;</span><br><span class=\"line\">    $result = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> ($i=<span class=\"number\">2</span>; $i&lt;=$n; $i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> ($j=<span class=\"number\">2</span>; $j&lt;=$i/<span class=\"number\">2</span>; $j++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> ($i % $j == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ($j &gt; $i/<span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">            array_push($result, $i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> $result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"markdown语法","date":"2018-01-31T16:00:00.000Z","_content":"\n\n\n使用markdown已经一段时间了，为了加深理解，熟悉语法，总结一下，提高熟练程度。\n\n\n\n\n```\n1. #\n有几个表示几级标题，一个则表示最顶级标题\n\n2. - \n生成无序列表，相当于·\n\n3. [标题](https://www.baidu.com)\n显示标题，超链接到www.baidu.com这个网址\n\n4. ---    ***    ___\n生成分割线，习惯使用第一种\n\n5. ```php\n生成代码框，里面可以写代码\n在后面加上php，会将代码标记为php\n\n6. 1.\n数字. 这种格式生成有序列表\n\n7. ![title](http://www.baidu.com/logo.png)\n显示http://www.baidu.com/logo.png这个地址的图片，替代文字是title\n\n8. >\n引用，暂时使用的比较少，块文字，表示引用\n\n9. 表格\n|用来分割单元格，-用来分割表头\n|id|标题|\n|--|--|\n|1|标题1|\n|2|标题2|\n\n10. [![图片](http://www.baidu.com/img/bd_logo.png)](http://www.baidu.com)\n嵌套使用，给图片增加链接，使用中括号将代码分组\n```\n\n\n","source":"_posts/markdown.md","raw":"---\ntitle: markdown语法\ndate: 2018-02-01\ncategories: 学习笔记\n---\n\n\n\n使用markdown已经一段时间了，为了加深理解，熟悉语法，总结一下，提高熟练程度。\n\n\n\n\n```\n1. #\n有几个表示几级标题，一个则表示最顶级标题\n\n2. - \n生成无序列表，相当于·\n\n3. [标题](https://www.baidu.com)\n显示标题，超链接到www.baidu.com这个网址\n\n4. ---    ***    ___\n生成分割线，习惯使用第一种\n\n5. ```php\n生成代码框，里面可以写代码\n在后面加上php，会将代码标记为php\n\n6. 1.\n数字. 这种格式生成有序列表\n\n7. ![title](http://www.baidu.com/logo.png)\n显示http://www.baidu.com/logo.png这个地址的图片，替代文字是title\n\n8. >\n引用，暂时使用的比较少，块文字，表示引用\n\n9. 表格\n|用来分割单元格，-用来分割表头\n|id|标题|\n|--|--|\n|1|标题1|\n|2|标题2|\n\n10. [![图片](http://www.baidu.com/img/bd_logo.png)](http://www.baidu.com)\n嵌套使用，给图片增加链接，使用中括号将代码分组\n```\n\n\n","slug":"markdown","published":1,"updated":"2018-08-30T10:00:53.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlhq4qx6000xqkkak2ite51z","content":"<p>使用markdown已经一段时间了，为了加深理解，熟悉语法，总结一下，提高熟练程度。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. #</span><br><span class=\"line\">有几个表示几级标题，一个则表示最顶级标题</span><br><span class=\"line\"></span><br><span class=\"line\">2. - </span><br><span class=\"line\">生成无序列表，相当于·</span><br><span class=\"line\"></span><br><span class=\"line\">3. [标题](https://www.baidu.com)</span><br><span class=\"line\">显示标题，超链接到www.baidu.com这个网址</span><br><span class=\"line\"></span><br><span class=\"line\">4. ---    ***    ___</span><br><span class=\"line\">生成分割线，习惯使用第一种</span><br><span class=\"line\"></span><br><span class=\"line\">5. ```php</span><br><span class=\"line\">生成代码框，里面可以写代码</span><br><span class=\"line\">在后面加上php，会将代码标记为php</span><br><span class=\"line\"></span><br><span class=\"line\">6. 1.</span><br><span class=\"line\">数字. 这种格式生成有序列表</span><br><span class=\"line\"></span><br><span class=\"line\">7. ![title](http://www.baidu.com/logo.png)</span><br><span class=\"line\">显示http://www.baidu.com/logo.png这个地址的图片，替代文字是title</span><br><span class=\"line\"></span><br><span class=\"line\">8. &gt;</span><br><span class=\"line\">引用，暂时使用的比较少，块文字，表示引用</span><br><span class=\"line\"></span><br><span class=\"line\">9. 表格</span><br><span class=\"line\">|用来分割单元格，-用来分割表头</span><br><span class=\"line\">|id|标题|</span><br><span class=\"line\">|--|--|</span><br><span class=\"line\">|1|标题1|</span><br><span class=\"line\">|2|标题2|</span><br><span class=\"line\"></span><br><span class=\"line\">10. [![图片](http://www.baidu.com/img/bd_logo.png)](http://www.baidu.com)</span><br><span class=\"line\">嵌套使用，给图片增加链接，使用中括号将代码分组</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>使用markdown已经一段时间了，为了加深理解，熟悉语法，总结一下，提高熟练程度。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. #</span><br><span class=\"line\">有几个表示几级标题，一个则表示最顶级标题</span><br><span class=\"line\"></span><br><span class=\"line\">2. - </span><br><span class=\"line\">生成无序列表，相当于·</span><br><span class=\"line\"></span><br><span class=\"line\">3. [标题](https://www.baidu.com)</span><br><span class=\"line\">显示标题，超链接到www.baidu.com这个网址</span><br><span class=\"line\"></span><br><span class=\"line\">4. ---    ***    ___</span><br><span class=\"line\">生成分割线，习惯使用第一种</span><br><span class=\"line\"></span><br><span class=\"line\">5. ```php</span><br><span class=\"line\">生成代码框，里面可以写代码</span><br><span class=\"line\">在后面加上php，会将代码标记为php</span><br><span class=\"line\"></span><br><span class=\"line\">6. 1.</span><br><span class=\"line\">数字. 这种格式生成有序列表</span><br><span class=\"line\"></span><br><span class=\"line\">7. ![title](http://www.baidu.com/logo.png)</span><br><span class=\"line\">显示http://www.baidu.com/logo.png这个地址的图片，替代文字是title</span><br><span class=\"line\"></span><br><span class=\"line\">8. &gt;</span><br><span class=\"line\">引用，暂时使用的比较少，块文字，表示引用</span><br><span class=\"line\"></span><br><span class=\"line\">9. 表格</span><br><span class=\"line\">|用来分割单元格，-用来分割表头</span><br><span class=\"line\">|id|标题|</span><br><span class=\"line\">|--|--|</span><br><span class=\"line\">|1|标题1|</span><br><span class=\"line\">|2|标题2|</span><br><span class=\"line\"></span><br><span class=\"line\">10. [![图片](http://www.baidu.com/img/bd_logo.png)](http://www.baidu.com)</span><br><span class=\"line\">嵌套使用，给图片增加链接，使用中括号将代码分组</span><br></pre></td></tr></table></figure>\n"},{"title":"打乱数组","date":"2018-02-03T16:00:00.000Z","_content":"\n相当于shuffle函数\n\n#### 思路\n```\n1. for循环数组的每一个变量\n2. 使用随机数函数取出数组的另外一个随机值\n3. 将两者交换\n```\n\n#### 实现\n```php\nfunction shuffle_array($arr) {\n    $count = count($arr) -1 ;\n    for ($i=0; $i<=$count; $i++){\n        $key = mt_rand(0, $count);\n        if ($arr[$i] != $arr[$key]){\n            $tmp = $arr[$key];\n            $arr[$key] = $arr[$i];\n            $arr[$i] = $tmp;\n        }\n    }\n    return $arr;\n}\n```","source":"_posts/shuffle_array.md","raw":"---\ntitle: 打乱数组\ndate: 2018-02-04\ncategories: 算法\ntags: 算法\n---\n\n相当于shuffle函数\n\n#### 思路\n```\n1. for循环数组的每一个变量\n2. 使用随机数函数取出数组的另外一个随机值\n3. 将两者交换\n```\n\n#### 实现\n```php\nfunction shuffle_array($arr) {\n    $count = count($arr) -1 ;\n    for ($i=0; $i<=$count; $i++){\n        $key = mt_rand(0, $count);\n        if ($arr[$i] != $arr[$key]){\n            $tmp = $arr[$key];\n            $arr[$key] = $arr[$i];\n            $arr[$i] = $tmp;\n        }\n    }\n    return $arr;\n}\n```","slug":"shuffle_array","published":1,"updated":"2018-08-30T10:00:53.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlhq4qx8000zqkka31f9ui3x","content":"<p>相当于shuffle函数</p>\n<h4 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. for循环数组的每一个变量</span><br><span class=\"line\">2. 使用随机数函数取出数组的另外一个随机值</span><br><span class=\"line\">3. 将两者交换</span><br></pre></td></tr></table></figure>\n<h4 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">shuffle_array</span><span class=\"params\">($arr)</span> </span>&#123;</span><br><span class=\"line\">    $count = count($arr) <span class=\"number\">-1</span> ;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> ($i=<span class=\"number\">0</span>; $i&lt;=$count; $i++)&#123;</span><br><span class=\"line\">        $key = mt_rand(<span class=\"number\">0</span>, $count);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ($arr[$i] != $arr[$key])&#123;</span><br><span class=\"line\">            $tmp = $arr[$key];</span><br><span class=\"line\">            $arr[$key] = $arr[$i];</span><br><span class=\"line\">            $arr[$i] = $tmp;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> $arr;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>相当于shuffle函数</p>\n<h4 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. for循环数组的每一个变量</span><br><span class=\"line\">2. 使用随机数函数取出数组的另外一个随机值</span><br><span class=\"line\">3. 将两者交换</span><br></pre></td></tr></table></figure>\n<h4 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">shuffle_array</span><span class=\"params\">($arr)</span> </span>&#123;</span><br><span class=\"line\">    $count = count($arr) <span class=\"number\">-1</span> ;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> ($i=<span class=\"number\">0</span>; $i&lt;=$count; $i++)&#123;</span><br><span class=\"line\">        $key = mt_rand(<span class=\"number\">0</span>, $count);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ($arr[$i] != $arr[$key])&#123;</span><br><span class=\"line\">            $tmp = $arr[$key];</span><br><span class=\"line\">            $arr[$key] = $arr[$i];</span><br><span class=\"line\">            $arr[$i] = $tmp;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> $arr;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"反转数组","date":"2018-02-03T16:00:00.000Z","_content":"反转数组，反转字符串均可，有两种思路\n\n### 第一种\n#### 思路\n```\n1. 使用for循环\n2. 循环到i/2处，将每个值和count-i进行交换\n3. 返回原数组\n```\n\n#### 实现\n```php\nfunction reverge_array($arr){\n    $count = count($arr) - 1;\n    for ($i=0; $i<=$count/2; $i++){\n        $temp = $arr[$i];\n        $arr[$i] = $arr[$count-$i];\n        $arr[$count-$i] = $temp;\n    }\n    return $arr;\n}\n```\n\n### 第二种\n#### 思路\n```\n1. 使用while循环\n2. 设置left和right，分别为第一个和数组最后一个的下标\n3. while判断right大于left，然后将arr[left]和arr[right]的值进行交换\n4. left++，right--\n```\n\n#### 实现\n```php\nfunction reverge_array($arr){\n    $left = 0;\n    $right = count($arr)-1;\n    while ($right > $left){\n        $tmp = $arr[$left];\n        $arr[$left] = $arr[$right];\n        $arr[$right] = $tmp;\n        $right --;\n        $left ++;\n    }\n    return $arr;\n}\n```","source":"_posts/reverge_array.md","raw":"---\ntitle: 反转数组\ndate: 2018-02-04\ncategories: 算法\ntags: 算法\n---\n反转数组，反转字符串均可，有两种思路\n\n### 第一种\n#### 思路\n```\n1. 使用for循环\n2. 循环到i/2处，将每个值和count-i进行交换\n3. 返回原数组\n```\n\n#### 实现\n```php\nfunction reverge_array($arr){\n    $count = count($arr) - 1;\n    for ($i=0; $i<=$count/2; $i++){\n        $temp = $arr[$i];\n        $arr[$i] = $arr[$count-$i];\n        $arr[$count-$i] = $temp;\n    }\n    return $arr;\n}\n```\n\n### 第二种\n#### 思路\n```\n1. 使用while循环\n2. 设置left和right，分别为第一个和数组最后一个的下标\n3. while判断right大于left，然后将arr[left]和arr[right]的值进行交换\n4. left++，right--\n```\n\n#### 实现\n```php\nfunction reverge_array($arr){\n    $left = 0;\n    $right = count($arr)-1;\n    while ($right > $left){\n        $tmp = $arr[$left];\n        $arr[$left] = $arr[$right];\n        $arr[$right] = $tmp;\n        $right --;\n        $left ++;\n    }\n    return $arr;\n}\n```","slug":"reverge_array","published":1,"updated":"2018-08-30T10:00:53.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlhq4qxa0014qkkaa2qkn1xk","content":"<p>反转数组，反转字符串均可，有两种思路</p>\n<h3 id=\"第一种\"><a href=\"#第一种\" class=\"headerlink\" title=\"第一种\"></a>第一种</h3><h4 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 使用for循环</span><br><span class=\"line\">2. 循环到i/2处，将每个值和count-i进行交换</span><br><span class=\"line\">3. 返回原数组</span><br></pre></td></tr></table></figure>\n<h4 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">reverge_array</span><span class=\"params\">($arr)</span></span>&#123;</span><br><span class=\"line\">    $count = count($arr) - <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> ($i=<span class=\"number\">0</span>; $i&lt;=$count/<span class=\"number\">2</span>; $i++)&#123;</span><br><span class=\"line\">        $temp = $arr[$i];</span><br><span class=\"line\">        $arr[$i] = $arr[$count-$i];</span><br><span class=\"line\">        $arr[$count-$i] = $temp;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> $arr;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"第二种\"><a href=\"#第二种\" class=\"headerlink\" title=\"第二种\"></a>第二种</h3><h4 id=\"思路-1\"><a href=\"#思路-1\" class=\"headerlink\" title=\"思路\"></a>思路</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 使用while循环</span><br><span class=\"line\">2. 设置left和right，分别为第一个和数组最后一个的下标</span><br><span class=\"line\">3. while判断right大于left，然后将arr[left]和arr[right]的值进行交换</span><br><span class=\"line\">4. left++，right--</span><br></pre></td></tr></table></figure>\n<h4 id=\"实现-1\"><a href=\"#实现-1\" class=\"headerlink\" title=\"实现\"></a>实现</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">reverge_array</span><span class=\"params\">($arr)</span></span>&#123;</span><br><span class=\"line\">    $left = <span class=\"number\">0</span>;</span><br><span class=\"line\">    $right = count($arr)<span class=\"number\">-1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> ($right &gt; $left)&#123;</span><br><span class=\"line\">        $tmp = $arr[$left];</span><br><span class=\"line\">        $arr[$left] = $arr[$right];</span><br><span class=\"line\">        $arr[$right] = $tmp;</span><br><span class=\"line\">        $right --;</span><br><span class=\"line\">        $left ++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> $arr;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>反转数组，反转字符串均可，有两种思路</p>\n<h3 id=\"第一种\"><a href=\"#第一种\" class=\"headerlink\" title=\"第一种\"></a>第一种</h3><h4 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 使用for循环</span><br><span class=\"line\">2. 循环到i/2处，将每个值和count-i进行交换</span><br><span class=\"line\">3. 返回原数组</span><br></pre></td></tr></table></figure>\n<h4 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">reverge_array</span><span class=\"params\">($arr)</span></span>&#123;</span><br><span class=\"line\">    $count = count($arr) - <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> ($i=<span class=\"number\">0</span>; $i&lt;=$count/<span class=\"number\">2</span>; $i++)&#123;</span><br><span class=\"line\">        $temp = $arr[$i];</span><br><span class=\"line\">        $arr[$i] = $arr[$count-$i];</span><br><span class=\"line\">        $arr[$count-$i] = $temp;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> $arr;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"第二种\"><a href=\"#第二种\" class=\"headerlink\" title=\"第二种\"></a>第二种</h3><h4 id=\"思路-1\"><a href=\"#思路-1\" class=\"headerlink\" title=\"思路\"></a>思路</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 使用while循环</span><br><span class=\"line\">2. 设置left和right，分别为第一个和数组最后一个的下标</span><br><span class=\"line\">3. while判断right大于left，然后将arr[left]和arr[right]的值进行交换</span><br><span class=\"line\">4. left++，right--</span><br></pre></td></tr></table></figure>\n<h4 id=\"实现-1\"><a href=\"#实现-1\" class=\"headerlink\" title=\"实现\"></a>实现</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">reverge_array</span><span class=\"params\">($arr)</span></span>&#123;</span><br><span class=\"line\">    $left = <span class=\"number\">0</span>;</span><br><span class=\"line\">    $right = count($arr)<span class=\"number\">-1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> ($right &gt; $left)&#123;</span><br><span class=\"line\">        $tmp = $arr[$left];</span><br><span class=\"line\">        $arr[$left] = $arr[$right];</span><br><span class=\"line\">        $arr[$right] = $tmp;</span><br><span class=\"line\">        $right --;</span><br><span class=\"line\">        $left ++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> $arr;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"打印符合规则的数组的值","date":"2018-07-28T16:00:00.000Z","_content":"\n\n遍历数组里的值，如果两数之和等于key，则打印这两个数，并且这两个值只能用一次\n\n\n```php\n$arr = range(-100, 100);\n\n$key = 2;\n\nfunction check($arr, $key) {\n    $count = count($arr);\n    for ($i=0; $i<$count; $i++){\n        for($j=$i+1; $j<$count; $j++){\n            if ($arr[$i] + $arr[$j] == $key) {\n                print $arr[$i]. ', '.  $arr[$j]. \"\\n\";\n                $arr[$i] = null;\n                $arr[$j] = null;\n                break;\n            }\n        }\n    }\n}\n\ncheck($arr, $key);\n```\n\n本来用的unset删掉数组的键值，后来发现这种方法不清晰，只会给自己挖坑，所以，改用$arr[$i] = null的方式。","source":"_posts/print_array_value.md","raw":"---\ntitle: 打印符合规则的数组的值\ndate: 2018-7-29\ncategories: 算法\ntags: 算法\n---\n\n\n遍历数组里的值，如果两数之和等于key，则打印这两个数，并且这两个值只能用一次\n\n\n```php\n$arr = range(-100, 100);\n\n$key = 2;\n\nfunction check($arr, $key) {\n    $count = count($arr);\n    for ($i=0; $i<$count; $i++){\n        for($j=$i+1; $j<$count; $j++){\n            if ($arr[$i] + $arr[$j] == $key) {\n                print $arr[$i]. ', '.  $arr[$j]. \"\\n\";\n                $arr[$i] = null;\n                $arr[$j] = null;\n                break;\n            }\n        }\n    }\n}\n\ncheck($arr, $key);\n```\n\n本来用的unset删掉数组的键值，后来发现这种方法不清晰，只会给自己挖坑，所以，改用$arr[$i] = null的方式。","slug":"print_array_value","published":1,"updated":"2018-08-30T10:00:53.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlhq4qxc0017qkkaycst8c46","content":"<p>遍历数组里的值，如果两数之和等于key，则打印这两个数，并且这两个值只能用一次</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$arr = range(<span class=\"number\">-100</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">$key = <span class=\"number\">2</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">check</span><span class=\"params\">($arr, $key)</span> </span>&#123;</span><br><span class=\"line\">    $count = count($arr);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> ($i=<span class=\"number\">0</span>; $i&lt;$count; $i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>($j=$i+<span class=\"number\">1</span>; $j&lt;$count; $j++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> ($arr[$i] + $arr[$j] == $key) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">print</span> $arr[$i]. <span class=\"string\">', '</span>.  $arr[$j]. <span class=\"string\">\"\\n\"</span>;</span><br><span class=\"line\">                $arr[$i] = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">                $arr[$j] = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">check($arr, $key);</span><br></pre></td></tr></table></figure>\n<p>本来用的unset删掉数组的键值，后来发现这种方法不清晰，只会给自己挖坑，所以，改用$arr[$i] = null的方式。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>遍历数组里的值，如果两数之和等于key，则打印这两个数，并且这两个值只能用一次</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$arr = range(<span class=\"number\">-100</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">$key = <span class=\"number\">2</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">check</span><span class=\"params\">($arr, $key)</span> </span>&#123;</span><br><span class=\"line\">    $count = count($arr);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> ($i=<span class=\"number\">0</span>; $i&lt;$count; $i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>($j=$i+<span class=\"number\">1</span>; $j&lt;$count; $j++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> ($arr[$i] + $arr[$j] == $key) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">print</span> $arr[$i]. <span class=\"string\">', '</span>.  $arr[$j]. <span class=\"string\">\"\\n\"</span>;</span><br><span class=\"line\">                $arr[$i] = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">                $arr[$j] = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">check($arr, $key);</span><br></pre></td></tr></table></figure>\n<p>本来用的unset删掉数组的键值，后来发现这种方法不清晰，只会给自己挖坑，所以，改用$arr[$i] = null的方式。</p>\n"},{"title":"随机红包算法","date":"2018-08-29T16:00:00.000Z","_content":"\n\n\n每次生成红包，金额随机，不太大，也不会太小，红包总金额不会超出限额。\n\n\n\n```php\nclass MoneyPackage {\n    public $leftMoney;\n    public $leftSize;\n\n    public function __construct($leftMoney, $leftSize)\n    {\n        $this->leftMoney = $leftMoney * 100;\n        $this->leftSize = $leftSize;\n    }\n}\n\nfunction getRandomMoney(MoneyPackage $package) {\n    if ($package->leftSize <= 0 || $package->leftMoney <= 0) {\n        return '超出限额';\n    }\n    if ($package->leftSize == 1) {\n        $package->leftSize--;\n        $money = $package->leftMoney;\n        $package->leftMoney = 0;\n        return $money/100;\n    }\n\n    $min = 1;\n    $max = $package->leftMoney / $package->leftSize * 2;\n    $rand = mt_rand()/mt_getrandmax();\n    $money = floor($rand * $max);\n    $money = $money >= $min ? $money : 1;\n    $package->leftSize--;\n    $package->leftMoney -= $money;\n    return $money/100;\n}\n\n$n = 10;\n$r = [];\n$package = new MoneyPackage(10, $n);\nfor ($i=0; $i<$n; $i++) {\n    $r[] = getRandomMoney($package);\n}\n\nprint_r($r);\nprint_r(array_sum($r));\n```\n\n\n\n不预先生成所有的红包，每次实时计算红包金额 \n\n红包算法： \n\n```\n红包金额=当前余额/剩余个数*2*(0-1之间随机数)\n如果所得金额小于0.01，则将金额置为0.01 \n```\n\n\n","source":"_posts/shuffle_red_package.md","raw":"---\ntitle: 随机红包算法\ndate: 2018-8-30\ncategories: 算法\ntags: 算法\n---\n\n\n\n每次生成红包，金额随机，不太大，也不会太小，红包总金额不会超出限额。\n\n\n\n```php\nclass MoneyPackage {\n    public $leftMoney;\n    public $leftSize;\n\n    public function __construct($leftMoney, $leftSize)\n    {\n        $this->leftMoney = $leftMoney * 100;\n        $this->leftSize = $leftSize;\n    }\n}\n\nfunction getRandomMoney(MoneyPackage $package) {\n    if ($package->leftSize <= 0 || $package->leftMoney <= 0) {\n        return '超出限额';\n    }\n    if ($package->leftSize == 1) {\n        $package->leftSize--;\n        $money = $package->leftMoney;\n        $package->leftMoney = 0;\n        return $money/100;\n    }\n\n    $min = 1;\n    $max = $package->leftMoney / $package->leftSize * 2;\n    $rand = mt_rand()/mt_getrandmax();\n    $money = floor($rand * $max);\n    $money = $money >= $min ? $money : 1;\n    $package->leftSize--;\n    $package->leftMoney -= $money;\n    return $money/100;\n}\n\n$n = 10;\n$r = [];\n$package = new MoneyPackage(10, $n);\nfor ($i=0; $i<$n; $i++) {\n    $r[] = getRandomMoney($package);\n}\n\nprint_r($r);\nprint_r(array_sum($r));\n```\n\n\n\n不预先生成所有的红包，每次实时计算红包金额 \n\n红包算法： \n\n```\n红包金额=当前余额/剩余个数*2*(0-1之间随机数)\n如果所得金额小于0.01，则将金额置为0.01 \n```\n\n\n","slug":"shuffle_red_package","published":1,"updated":"2018-08-30T10:00:53.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlhq4qxe001cqkka59lsn02u","content":"<p>每次生成红包，金额随机，不太大，也不会太小，红包总金额不会超出限额。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MoneyPackage</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $leftMoney;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $leftSize;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">($leftMoney, $leftSize)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;leftMoney = $leftMoney * <span class=\"number\">100</span>;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;leftSize = $leftSize;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getRandomMoney</span><span class=\"params\">(MoneyPackage $package)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($package-&gt;leftSize &lt;= <span class=\"number\">0</span> || $package-&gt;leftMoney &lt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'超出限额'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($package-&gt;leftSize == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        $package-&gt;leftSize--;</span><br><span class=\"line\">        $money = $package-&gt;leftMoney;</span><br><span class=\"line\">        $package-&gt;leftMoney = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> $money/<span class=\"number\">100</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    $min = <span class=\"number\">1</span>;</span><br><span class=\"line\">    $max = $package-&gt;leftMoney / $package-&gt;leftSize * <span class=\"number\">2</span>;</span><br><span class=\"line\">    $rand = mt_rand()/mt_getrandmax();</span><br><span class=\"line\">    $money = floor($rand * $max);</span><br><span class=\"line\">    $money = $money &gt;= $min ? $money : <span class=\"number\">1</span>;</span><br><span class=\"line\">    $package-&gt;leftSize--;</span><br><span class=\"line\">    $package-&gt;leftMoney -= $money;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> $money/<span class=\"number\">100</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$n = <span class=\"number\">10</span>;</span><br><span class=\"line\">$r = [];</span><br><span class=\"line\">$package = <span class=\"keyword\">new</span> MoneyPackage(<span class=\"number\">10</span>, $n);</span><br><span class=\"line\"><span class=\"keyword\">for</span> ($i=<span class=\"number\">0</span>; $i&lt;$n; $i++) &#123;</span><br><span class=\"line\">    $r[] = getRandomMoney($package);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">print_r($r);</span><br><span class=\"line\">print_r(array_sum($r));</span><br></pre></td></tr></table></figure>\n<p>不预先生成所有的红包，每次实时计算红包金额 </p>\n<p>红包算法： </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">红包金额=当前余额/剩余个数*2*(0-1之间随机数)</span><br><span class=\"line\">如果所得金额小于0.01，则将金额置为0.01</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>每次生成红包，金额随机，不太大，也不会太小，红包总金额不会超出限额。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MoneyPackage</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $leftMoney;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $leftSize;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">($leftMoney, $leftSize)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;leftMoney = $leftMoney * <span class=\"number\">100</span>;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;leftSize = $leftSize;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getRandomMoney</span><span class=\"params\">(MoneyPackage $package)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($package-&gt;leftSize &lt;= <span class=\"number\">0</span> || $package-&gt;leftMoney &lt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'超出限额'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($package-&gt;leftSize == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        $package-&gt;leftSize--;</span><br><span class=\"line\">        $money = $package-&gt;leftMoney;</span><br><span class=\"line\">        $package-&gt;leftMoney = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> $money/<span class=\"number\">100</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    $min = <span class=\"number\">1</span>;</span><br><span class=\"line\">    $max = $package-&gt;leftMoney / $package-&gt;leftSize * <span class=\"number\">2</span>;</span><br><span class=\"line\">    $rand = mt_rand()/mt_getrandmax();</span><br><span class=\"line\">    $money = floor($rand * $max);</span><br><span class=\"line\">    $money = $money &gt;= $min ? $money : <span class=\"number\">1</span>;</span><br><span class=\"line\">    $package-&gt;leftSize--;</span><br><span class=\"line\">    $package-&gt;leftMoney -= $money;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> $money/<span class=\"number\">100</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$n = <span class=\"number\">10</span>;</span><br><span class=\"line\">$r = [];</span><br><span class=\"line\">$package = <span class=\"keyword\">new</span> MoneyPackage(<span class=\"number\">10</span>, $n);</span><br><span class=\"line\"><span class=\"keyword\">for</span> ($i=<span class=\"number\">0</span>; $i&lt;$n; $i++) &#123;</span><br><span class=\"line\">    $r[] = getRandomMoney($package);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">print_r($r);</span><br><span class=\"line\">print_r(array_sum($r));</span><br></pre></td></tr></table></figure>\n<p>不预先生成所有的红包，每次实时计算红包金额 </p>\n<p>红包算法： </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">红包金额=当前余额/剩余个数*2*(0-1之间随机数)</span><br><span class=\"line\">如果所得金额小于0.01，则将金额置为0.01</span><br></pre></td></tr></table></figure>\n"},{"title":"swoole扩展安装","date":"2018-08-12T16:00:00.000Z","_content":"\n\n\ngithub上下载swoole的release包\n\n\n\n```shell\n1. tar -zxvf swoole-src-4.0.3.tar.gz\n解压包\n\n2. cd swoole-src-4.0.3\n进入目录\n\n3. phpize\n生成编译检测脚本\n\n4. ./configure --with-php-config=/usr/bin/php-config\n编译配置检测\n\n5. make\n编译\n\n6. make install\n安装，之后会打印扩展位置\n\nInstalling shared extensions:     /usr/local/Cellar/php@7.0/7.0.29_1/pecl/20151012/\nInstalling header files:           /usr/local/Cellar/php@7.0/7.0.29_1/include/php/\n\n7. 修改php.ini，也可以在conf.d目录下创建扩展文件\n[swoole]\nextension=\"/usr/local/Cellar/php@7.0/7.0.29_1/pecl/20151012/swoole.so\"\n```\n\n\n\n相关工具： \n\n```\nphpize    编译安装扩展工具 \n\nphp-config    获取php的配置信息\n```\n\n","source":"_posts/swoole_install.md","raw":"---\ntitle: swoole扩展安装\ndate: 2018-8-13\ncategories: php\ntags: php\n---\n\n\n\ngithub上下载swoole的release包\n\n\n\n```shell\n1. tar -zxvf swoole-src-4.0.3.tar.gz\n解压包\n\n2. cd swoole-src-4.0.3\n进入目录\n\n3. phpize\n生成编译检测脚本\n\n4. ./configure --with-php-config=/usr/bin/php-config\n编译配置检测\n\n5. make\n编译\n\n6. make install\n安装，之后会打印扩展位置\n\nInstalling shared extensions:     /usr/local/Cellar/php@7.0/7.0.29_1/pecl/20151012/\nInstalling header files:           /usr/local/Cellar/php@7.0/7.0.29_1/include/php/\n\n7. 修改php.ini，也可以在conf.d目录下创建扩展文件\n[swoole]\nextension=\"/usr/local/Cellar/php@7.0/7.0.29_1/pecl/20151012/swoole.so\"\n```\n\n\n\n相关工具： \n\n```\nphpize    编译安装扩展工具 \n\nphp-config    获取php的配置信息\n```\n\n","slug":"swoole_install","published":1,"updated":"2018-08-30T10:00:53.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlhq4qxg001fqkka8ufquhth","content":"<p>github上下载swoole的release包</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. tar -zxvf swoole-src-4.0.3.tar.gz</span><br><span class=\"line\">解压包</span><br><span class=\"line\"></span><br><span class=\"line\">2. cd swoole-src-4.0.3</span><br><span class=\"line\">进入目录</span><br><span class=\"line\"></span><br><span class=\"line\">3. phpize</span><br><span class=\"line\">生成编译检测脚本</span><br><span class=\"line\"></span><br><span class=\"line\">4. ./configure --with-php-config=/usr/bin/php-config</span><br><span class=\"line\">编译配置检测</span><br><span class=\"line\"></span><br><span class=\"line\">5. make</span><br><span class=\"line\">编译</span><br><span class=\"line\"></span><br><span class=\"line\">6. make install</span><br><span class=\"line\">安装，之后会打印扩展位置</span><br><span class=\"line\"></span><br><span class=\"line\">Installing shared extensions:     /usr/local/Cellar/php@7.0/7.0.29_1/pecl/20151012/</span><br><span class=\"line\">Installing header files:           /usr/local/Cellar/php@7.0/7.0.29_1/include/php/</span><br><span class=\"line\"></span><br><span class=\"line\">7. 修改php.ini，也可以在conf.d目录下创建扩展文件</span><br><span class=\"line\">[swoole]</span><br><span class=\"line\">extension=\"/usr/local/Cellar/php@7.0/7.0.29_1/pecl/20151012/swoole.so\"</span><br></pre></td></tr></table></figure>\n<p>相关工具： </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">phpize    编译安装扩展工具 </span><br><span class=\"line\"></span><br><span class=\"line\">php-config    获取php的配置信息</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>github上下载swoole的release包</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. tar -zxvf swoole-src-4.0.3.tar.gz</span><br><span class=\"line\">解压包</span><br><span class=\"line\"></span><br><span class=\"line\">2. cd swoole-src-4.0.3</span><br><span class=\"line\">进入目录</span><br><span class=\"line\"></span><br><span class=\"line\">3. phpize</span><br><span class=\"line\">生成编译检测脚本</span><br><span class=\"line\"></span><br><span class=\"line\">4. ./configure --with-php-config=/usr/bin/php-config</span><br><span class=\"line\">编译配置检测</span><br><span class=\"line\"></span><br><span class=\"line\">5. make</span><br><span class=\"line\">编译</span><br><span class=\"line\"></span><br><span class=\"line\">6. make install</span><br><span class=\"line\">安装，之后会打印扩展位置</span><br><span class=\"line\"></span><br><span class=\"line\">Installing shared extensions:     /usr/local/Cellar/php@7.0/7.0.29_1/pecl/20151012/</span><br><span class=\"line\">Installing header files:           /usr/local/Cellar/php@7.0/7.0.29_1/include/php/</span><br><span class=\"line\"></span><br><span class=\"line\">7. 修改php.ini，也可以在conf.d目录下创建扩展文件</span><br><span class=\"line\">[swoole]</span><br><span class=\"line\">extension=\"/usr/local/Cellar/php@7.0/7.0.29_1/pecl/20151012/swoole.so\"</span><br></pre></td></tr></table></figure>\n<p>相关工具： </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">phpize    编译安装扩展工具 </span><br><span class=\"line\"></span><br><span class=\"line\">php-config    获取php的配置信息</span><br></pre></td></tr></table></figure>\n"},{"title":"将字符串和数字分组","date":"2018-02-03T16:00:00.000Z","_content":"\n分组格式化字符串\n1a3bb44a2ac => 1:a 3:bb 44:a 2:ac\n\n#### 思路\n```\n1. 前提是两者匹配出现，不会在最后面有多余\n2. 使用preg_split函数，根据\\d和[a-zA-Z]进行分隔\n3. 循环数组，根据key进行字符串拼接\n4. implode(' ')，将数组合并\n```\n\n#### 实现\n```php\nfunction number_alphabet($str){\n    $result = [];\n    //注意？防止使用贪婪匹配，否则不会截断字符串\n    $number = preg_replace(\"/[0-9]+?/\", $str, PREG_SPLIT_NO_EMPTY);\n    $alphabet = preg_replace(\"/[a-zA-Z]+?/\", $str, PREG_SPLIT_NO_EMPTY);\n    foreach ($number as $key=>$vaule){\n        array_push($result, $value.\":\".$alphabet[$key]);\n    }\n    return array_implode(\" \", $result);\n}\n```","source":"_posts/split_numbers_and_alphabet.md","raw":"---\ntitle: 将字符串和数字分组\ndate: 2018-02-04\ncategories: 算法\ntags: 算法\n---\n\n分组格式化字符串\n1a3bb44a2ac => 1:a 3:bb 44:a 2:ac\n\n#### 思路\n```\n1. 前提是两者匹配出现，不会在最后面有多余\n2. 使用preg_split函数，根据\\d和[a-zA-Z]进行分隔\n3. 循环数组，根据key进行字符串拼接\n4. implode(' ')，将数组合并\n```\n\n#### 实现\n```php\nfunction number_alphabet($str){\n    $result = [];\n    //注意？防止使用贪婪匹配，否则不会截断字符串\n    $number = preg_replace(\"/[0-9]+?/\", $str, PREG_SPLIT_NO_EMPTY);\n    $alphabet = preg_replace(\"/[a-zA-Z]+?/\", $str, PREG_SPLIT_NO_EMPTY);\n    foreach ($number as $key=>$vaule){\n        array_push($result, $value.\":\".$alphabet[$key]);\n    }\n    return array_implode(\" \", $result);\n}\n```","slug":"split_numbers_and_alphabet","published":1,"updated":"2018-08-30T10:00:53.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlhq4qxi001jqkkadpalhknj","content":"<p>分组格式化字符串<br>1a3bb44a2ac =&gt; 1:a 3:bb 44:a 2:ac</p>\n<h4 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 前提是两者匹配出现，不会在最后面有多余</span><br><span class=\"line\">2. 使用preg_split函数，根据\\d和[a-zA-Z]进行分隔</span><br><span class=\"line\">3. 循环数组，根据key进行字符串拼接</span><br><span class=\"line\">4. implode(&apos; &apos;)，将数组合并</span><br></pre></td></tr></table></figure>\n<h4 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">number_alphabet</span><span class=\"params\">($str)</span></span>&#123;</span><br><span class=\"line\">    $result = [];</span><br><span class=\"line\">    <span class=\"comment\">//注意？防止使用贪婪匹配，否则不会截断字符串</span></span><br><span class=\"line\">    $number = preg_replace(<span class=\"string\">\"/[0-9]+?/\"</span>, $str, PREG_SPLIT_NO_EMPTY);</span><br><span class=\"line\">    $alphabet = preg_replace(<span class=\"string\">\"/[a-zA-Z]+?/\"</span>, $str, PREG_SPLIT_NO_EMPTY);</span><br><span class=\"line\">    <span class=\"keyword\">foreach</span> ($number <span class=\"keyword\">as</span> $key=&gt;$vaule)&#123;</span><br><span class=\"line\">        array_push($result, $value.<span class=\"string\">\":\"</span>.$alphabet[$key]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> array_implode(<span class=\"string\">\" \"</span>, $result);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>分组格式化字符串<br>1a3bb44a2ac =&gt; 1:a 3:bb 44:a 2:ac</p>\n<h4 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 前提是两者匹配出现，不会在最后面有多余</span><br><span class=\"line\">2. 使用preg_split函数，根据\\d和[a-zA-Z]进行分隔</span><br><span class=\"line\">3. 循环数组，根据key进行字符串拼接</span><br><span class=\"line\">4. implode(&apos; &apos;)，将数组合并</span><br></pre></td></tr></table></figure>\n<h4 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">number_alphabet</span><span class=\"params\">($str)</span></span>&#123;</span><br><span class=\"line\">    $result = [];</span><br><span class=\"line\">    <span class=\"comment\">//注意？防止使用贪婪匹配，否则不会截断字符串</span></span><br><span class=\"line\">    $number = preg_replace(<span class=\"string\">\"/[0-9]+?/\"</span>, $str, PREG_SPLIT_NO_EMPTY);</span><br><span class=\"line\">    $alphabet = preg_replace(<span class=\"string\">\"/[a-zA-Z]+?/\"</span>, $str, PREG_SPLIT_NO_EMPTY);</span><br><span class=\"line\">    <span class=\"keyword\">foreach</span> ($number <span class=\"keyword\">as</span> $key=&gt;$vaule)&#123;</span><br><span class=\"line\">        array_push($result, $value.<span class=\"string\">\":\"</span>.$alphabet[$key]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> array_implode(<span class=\"string\">\" \"</span>, $result);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"排序算法","date":"2018-02-03T16:00:00.000Z","_content":"\n### 冒泡排序\n#### 思路\n```\n1. 设计算法复杂度为n方的嵌套循环\n2. i和j都从0开始，i<count，j<count-i-1\n3. 比较arr[j]和arr[j+1]，如果arr[j]大于arr[j+1]，则交换顺序\n```\n\n#### 实现\n```php\nfunction bubble_sort($arr) {\n    $count = count($arr);\n    for ($i=0; $i<$count; $i++) {\n        for ($j=0; $j<$count-$i-1; $j++) {\n            if ($arr[$j] > $arr[$j+1]){\n                $tmp = $arr[$j];\n                $arr[$j] = $arr[$j+1];\n                $arr[$j+1] = $tmp;\n            }\n        }\n    }\n    return $arr;\n}\n```\n\n### 快速排序\n#### 思路\n```\n1. 取数组第一个值为标准值\n2. 设置比标准值大的数组为right，比标准值小的数组为left\n3. for循环数组所有变量，如果比标准值大则放到right，反之，放到left\n4. 分别对left和right使用递归，最后分别赋值给left和right\n5. 返回合并数组，顺序是left, [key], right\n```\n\n### 实现\n```php\nfunction quick_sort($arr) {\n    $count = count($arr);\n    if ($count <= 1) return $arr;\n    $key = $arr[0];\n    $left = [];\n    $right = [];\n    for ($i=1; $i<$count; $i++) {\n        if ($arr[$i] > $key){\n            array_push($right, $arr[$i]);\n        }else {\n            array_push($left, $arr[$i]);\n        }\n    }\n    $left = quick_sort($left);\n    $right = quick_sort($right);\n    return array_merge($left, [$key], $right);\n}\n```\n\n\n","source":"_posts/sort_algorithm.md","raw":"---\ntitle: 排序算法\ndate: 2018-02-04\ncategories: 算法\ntags: 算法\n---\n\n### 冒泡排序\n#### 思路\n```\n1. 设计算法复杂度为n方的嵌套循环\n2. i和j都从0开始，i<count，j<count-i-1\n3. 比较arr[j]和arr[j+1]，如果arr[j]大于arr[j+1]，则交换顺序\n```\n\n#### 实现\n```php\nfunction bubble_sort($arr) {\n    $count = count($arr);\n    for ($i=0; $i<$count; $i++) {\n        for ($j=0; $j<$count-$i-1; $j++) {\n            if ($arr[$j] > $arr[$j+1]){\n                $tmp = $arr[$j];\n                $arr[$j] = $arr[$j+1];\n                $arr[$j+1] = $tmp;\n            }\n        }\n    }\n    return $arr;\n}\n```\n\n### 快速排序\n#### 思路\n```\n1. 取数组第一个值为标准值\n2. 设置比标准值大的数组为right，比标准值小的数组为left\n3. for循环数组所有变量，如果比标准值大则放到right，反之，放到left\n4. 分别对left和right使用递归，最后分别赋值给left和right\n5. 返回合并数组，顺序是left, [key], right\n```\n\n### 实现\n```php\nfunction quick_sort($arr) {\n    $count = count($arr);\n    if ($count <= 1) return $arr;\n    $key = $arr[0];\n    $left = [];\n    $right = [];\n    for ($i=1; $i<$count; $i++) {\n        if ($arr[$i] > $key){\n            array_push($right, $arr[$i]);\n        }else {\n            array_push($left, $arr[$i]);\n        }\n    }\n    $left = quick_sort($left);\n    $right = quick_sort($right);\n    return array_merge($left, [$key], $right);\n}\n```\n\n\n","slug":"sort_algorithm","published":1,"updated":"2018-08-30T10:00:53.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlhq4qxk001nqkkazda4be2e","content":"<h3 id=\"冒泡排序\"><a href=\"#冒泡排序\" class=\"headerlink\" title=\"冒泡排序\"></a>冒泡排序</h3><h4 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 设计算法复杂度为n方的嵌套循环</span><br><span class=\"line\">2. i和j都从0开始，i&lt;count，j&lt;count-i-1</span><br><span class=\"line\">3. 比较arr[j]和arr[j+1]，如果arr[j]大于arr[j+1]，则交换顺序</span><br></pre></td></tr></table></figure>\n<h4 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bubble_sort</span><span class=\"params\">($arr)</span> </span>&#123;</span><br><span class=\"line\">    $count = count($arr);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> ($i=<span class=\"number\">0</span>; $i&lt;$count; $i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> ($j=<span class=\"number\">0</span>; $j&lt;$count-$i<span class=\"number\">-1</span>; $j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> ($arr[$j] &gt; $arr[$j+<span class=\"number\">1</span>])&#123;</span><br><span class=\"line\">                $tmp = $arr[$j];</span><br><span class=\"line\">                $arr[$j] = $arr[$j+<span class=\"number\">1</span>];</span><br><span class=\"line\">                $arr[$j+<span class=\"number\">1</span>] = $tmp;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> $arr;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"快速排序\"><a href=\"#快速排序\" class=\"headerlink\" title=\"快速排序\"></a>快速排序</h3><h4 id=\"思路-1\"><a href=\"#思路-1\" class=\"headerlink\" title=\"思路\"></a>思路</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 取数组第一个值为标准值</span><br><span class=\"line\">2. 设置比标准值大的数组为right，比标准值小的数组为left</span><br><span class=\"line\">3. for循环数组所有变量，如果比标准值大则放到right，反之，放到left</span><br><span class=\"line\">4. 分别对left和right使用递归，最后分别赋值给left和right</span><br><span class=\"line\">5. 返回合并数组，顺序是left, [key], right</span><br></pre></td></tr></table></figure>\n<h3 id=\"实现-1\"><a href=\"#实现-1\" class=\"headerlink\" title=\"实现\"></a>实现</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">quick_sort</span><span class=\"params\">($arr)</span> </span>&#123;</span><br><span class=\"line\">    $count = count($arr);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($count &lt;= <span class=\"number\">1</span>) <span class=\"keyword\">return</span> $arr;</span><br><span class=\"line\">    $key = $arr[<span class=\"number\">0</span>];</span><br><span class=\"line\">    $left = [];</span><br><span class=\"line\">    $right = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> ($i=<span class=\"number\">1</span>; $i&lt;$count; $i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ($arr[$i] &gt; $key)&#123;</span><br><span class=\"line\">            array_push($right, $arr[$i]);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            array_push($left, $arr[$i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    $left = quick_sort($left);</span><br><span class=\"line\">    $right = quick_sort($right);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> array_merge($left, [$key], $right);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"冒泡排序\"><a href=\"#冒泡排序\" class=\"headerlink\" title=\"冒泡排序\"></a>冒泡排序</h3><h4 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 设计算法复杂度为n方的嵌套循环</span><br><span class=\"line\">2. i和j都从0开始，i&lt;count，j&lt;count-i-1</span><br><span class=\"line\">3. 比较arr[j]和arr[j+1]，如果arr[j]大于arr[j+1]，则交换顺序</span><br></pre></td></tr></table></figure>\n<h4 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bubble_sort</span><span class=\"params\">($arr)</span> </span>&#123;</span><br><span class=\"line\">    $count = count($arr);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> ($i=<span class=\"number\">0</span>; $i&lt;$count; $i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> ($j=<span class=\"number\">0</span>; $j&lt;$count-$i<span class=\"number\">-1</span>; $j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> ($arr[$j] &gt; $arr[$j+<span class=\"number\">1</span>])&#123;</span><br><span class=\"line\">                $tmp = $arr[$j];</span><br><span class=\"line\">                $arr[$j] = $arr[$j+<span class=\"number\">1</span>];</span><br><span class=\"line\">                $arr[$j+<span class=\"number\">1</span>] = $tmp;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> $arr;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"快速排序\"><a href=\"#快速排序\" class=\"headerlink\" title=\"快速排序\"></a>快速排序</h3><h4 id=\"思路-1\"><a href=\"#思路-1\" class=\"headerlink\" title=\"思路\"></a>思路</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 取数组第一个值为标准值</span><br><span class=\"line\">2. 设置比标准值大的数组为right，比标准值小的数组为left</span><br><span class=\"line\">3. for循环数组所有变量，如果比标准值大则放到right，反之，放到left</span><br><span class=\"line\">4. 分别对left和right使用递归，最后分别赋值给left和right</span><br><span class=\"line\">5. 返回合并数组，顺序是left, [key], right</span><br></pre></td></tr></table></figure>\n<h3 id=\"实现-1\"><a href=\"#实现-1\" class=\"headerlink\" title=\"实现\"></a>实现</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">quick_sort</span><span class=\"params\">($arr)</span> </span>&#123;</span><br><span class=\"line\">    $count = count($arr);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($count &lt;= <span class=\"number\">1</span>) <span class=\"keyword\">return</span> $arr;</span><br><span class=\"line\">    $key = $arr[<span class=\"number\">0</span>];</span><br><span class=\"line\">    $left = [];</span><br><span class=\"line\">    $right = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> ($i=<span class=\"number\">1</span>; $i&lt;$count; $i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ($arr[$i] &gt; $key)&#123;</span><br><span class=\"line\">            array_push($right, $arr[$i]);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            array_push($left, $arr[$i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    $left = quick_sort($left);</span><br><span class=\"line\">    $right = quick_sort($right);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> array_merge($left, [$key], $right);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"vi简单使用","date":"2018-03-06T16:00:00.000Z","_content":"\n\n\n强大的linux编辑器，分为命令模式和编辑模式，从编辑模式切换到命令模式使用esc键，从命令模式切换到编辑模式使用a A o O i I键\n\n参考资料：https://coolshell.cn/articles/5426.html\n\n### 行内移动\n```\nw    移到下一个单词头\ne    移到下一个单词尾\n^    移到非空行首\ng_    移到非空行尾\nfa    找当前行的a\nt;    调到;前的字符\n```\n\n### 全文移动\n```\n*    搜索当前的字符串\n#    搜索当前的字符串\n\n%    查找相匹配的括号\n\nctrl+u    向前翻半页\n\nctrl+d    向后翻半页\n```\n\n\n\n### 保存\n```\n:saveas /path/to/file\n另存为\n```\n\n### 插入字符\n```\na    当前字符后插入\nA    行尾插入\no    在下一行插入空行\nO    在前一行插入空行\ni    当前字符前插入\nI    行首插入\n```\n\n### 删除\n```\nD     删除当前行，当前位置之后的内容\ncw    删除光标所在位置到单词结尾的字符\ndt;    一直删除到;截止\n```\n\n### 粘贴\n```\np    在之后粘贴\nP    在之前粘贴\n```\n\n### 替换\n```\nr    单个字符\nR    当前行字符\n```\n\n### 撤销回退\n```\nctrl+r    回退\n```\n\n### 选择\n```\n<action><object>\n\naction: d y v\n\nve\n选择当前单词，同理ye粘贴当前单词，de删除当前单词\n```\n\n### 代码提示\n```\n在编辑模式下\nctrl+p\nctrl+n\n```\n\n### 批量注释\n```\n1. ctrl + v  //块选择\n2. shift + i //插入#\n3. 按esc键(两次)\n```\n\n### 自动缩进\n```\n==\n```\n\n## 高级用法\n\n### 打开缓存文件\n```\n命令模式:ls\n列出打开过的文件\n%表示当前打开的文件\n\n:buffer 2\n选择要打开那个缓存文件\n```\n\n### 标签浏览文件\n```\n:Te    按标签浏览文件\n\ngt    移到下一个标签文件\ngT    移到前一个标签文件\n\n:tabs    列出所有标签\n\n:tabfirst\n:tablast\n打开指定的标签文件\n\n:qa    退出所有标签\n```\n\n### 分屏浏览\n```\n:He    上下分屏\n:Ve    左右分屏\n\n:split\n:vsplit\n分屏，打开相同的文件\n\nctrl+w+h/j/k/l\n切换分屏\n\n\n:set scb 在各个分屏内输入\n分屏同步移动\n\n:set scb!\n解锁同步移动\n```\n\n### 多文件\n```\n:e /path/to/file\n\n文件移动\n:bn\n:bp\n```\n\n### 保存会话\n```\n:mksession\n保存会话\n\nvi -S Session.vim\n恢复会话\n```\n\n### 大小写转换\n```\n选定字符 + u\n转换为小写\n\n选定字符 + U\n转换为大写\n\ngu    当前行转换为小写\ngU    当前行转换为大写\n```\n\n### 光标移动\n```\nctrl + o    回退光标\nctrl + i    前进光标\n```\n\n### 运行命令并插入到vi中\n```\n:r!date \n:r!ls\n```\n\n\n\n\n\n\n\n\n","source":"_posts/vi.md","raw":"---\ntitle: vi简单使用\ndate: 2018-03-07\ntags: vi\ncategories: linux\n---\n\n\n\n强大的linux编辑器，分为命令模式和编辑模式，从编辑模式切换到命令模式使用esc键，从命令模式切换到编辑模式使用a A o O i I键\n\n参考资料：https://coolshell.cn/articles/5426.html\n\n### 行内移动\n```\nw    移到下一个单词头\ne    移到下一个单词尾\n^    移到非空行首\ng_    移到非空行尾\nfa    找当前行的a\nt;    调到;前的字符\n```\n\n### 全文移动\n```\n*    搜索当前的字符串\n#    搜索当前的字符串\n\n%    查找相匹配的括号\n\nctrl+u    向前翻半页\n\nctrl+d    向后翻半页\n```\n\n\n\n### 保存\n```\n:saveas /path/to/file\n另存为\n```\n\n### 插入字符\n```\na    当前字符后插入\nA    行尾插入\no    在下一行插入空行\nO    在前一行插入空行\ni    当前字符前插入\nI    行首插入\n```\n\n### 删除\n```\nD     删除当前行，当前位置之后的内容\ncw    删除光标所在位置到单词结尾的字符\ndt;    一直删除到;截止\n```\n\n### 粘贴\n```\np    在之后粘贴\nP    在之前粘贴\n```\n\n### 替换\n```\nr    单个字符\nR    当前行字符\n```\n\n### 撤销回退\n```\nctrl+r    回退\n```\n\n### 选择\n```\n<action><object>\n\naction: d y v\n\nve\n选择当前单词，同理ye粘贴当前单词，de删除当前单词\n```\n\n### 代码提示\n```\n在编辑模式下\nctrl+p\nctrl+n\n```\n\n### 批量注释\n```\n1. ctrl + v  //块选择\n2. shift + i //插入#\n3. 按esc键(两次)\n```\n\n### 自动缩进\n```\n==\n```\n\n## 高级用法\n\n### 打开缓存文件\n```\n命令模式:ls\n列出打开过的文件\n%表示当前打开的文件\n\n:buffer 2\n选择要打开那个缓存文件\n```\n\n### 标签浏览文件\n```\n:Te    按标签浏览文件\n\ngt    移到下一个标签文件\ngT    移到前一个标签文件\n\n:tabs    列出所有标签\n\n:tabfirst\n:tablast\n打开指定的标签文件\n\n:qa    退出所有标签\n```\n\n### 分屏浏览\n```\n:He    上下分屏\n:Ve    左右分屏\n\n:split\n:vsplit\n分屏，打开相同的文件\n\nctrl+w+h/j/k/l\n切换分屏\n\n\n:set scb 在各个分屏内输入\n分屏同步移动\n\n:set scb!\n解锁同步移动\n```\n\n### 多文件\n```\n:e /path/to/file\n\n文件移动\n:bn\n:bp\n```\n\n### 保存会话\n```\n:mksession\n保存会话\n\nvi -S Session.vim\n恢复会话\n```\n\n### 大小写转换\n```\n选定字符 + u\n转换为小写\n\n选定字符 + U\n转换为大写\n\ngu    当前行转换为小写\ngU    当前行转换为大写\n```\n\n### 光标移动\n```\nctrl + o    回退光标\nctrl + i    前进光标\n```\n\n### 运行命令并插入到vi中\n```\n:r!date \n:r!ls\n```\n\n\n\n\n\n\n\n\n","slug":"vi","published":1,"updated":"2018-08-30T10:00:53.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlhq4qxl001qqkkak11est41","content":"<p>强大的linux编辑器，分为命令模式和编辑模式，从编辑模式切换到命令模式使用esc键，从命令模式切换到编辑模式使用a A o O i I键</p>\n<p>参考资料：<a href=\"https://coolshell.cn/articles/5426.html\" target=\"_blank\" rel=\"noopener\">https://coolshell.cn/articles/5426.html</a></p>\n<h3 id=\"行内移动\"><a href=\"#行内移动\" class=\"headerlink\" title=\"行内移动\"></a>行内移动</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">w    移到下一个单词头</span><br><span class=\"line\">e    移到下一个单词尾</span><br><span class=\"line\">^    移到非空行首</span><br><span class=\"line\">g_    移到非空行尾</span><br><span class=\"line\">fa    找当前行的a</span><br><span class=\"line\">t;    调到;前的字符</span><br></pre></td></tr></table></figure>\n<h3 id=\"全文移动\"><a href=\"#全文移动\" class=\"headerlink\" title=\"全文移动\"></a>全文移动</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*    搜索当前的字符串</span><br><span class=\"line\">#    搜索当前的字符串</span><br><span class=\"line\"></span><br><span class=\"line\">%    查找相匹配的括号</span><br><span class=\"line\"></span><br><span class=\"line\">ctrl+u    向前翻半页</span><br><span class=\"line\"></span><br><span class=\"line\">ctrl+d    向后翻半页</span><br></pre></td></tr></table></figure>\n<h3 id=\"保存\"><a href=\"#保存\" class=\"headerlink\" title=\"保存\"></a>保存</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:saveas /path/to/file</span><br><span class=\"line\">另存为</span><br></pre></td></tr></table></figure>\n<h3 id=\"插入字符\"><a href=\"#插入字符\" class=\"headerlink\" title=\"插入字符\"></a>插入字符</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a    当前字符后插入</span><br><span class=\"line\">A    行尾插入</span><br><span class=\"line\">o    在下一行插入空行</span><br><span class=\"line\">O    在前一行插入空行</span><br><span class=\"line\">i    当前字符前插入</span><br><span class=\"line\">I    行首插入</span><br></pre></td></tr></table></figure>\n<h3 id=\"删除\"><a href=\"#删除\" class=\"headerlink\" title=\"删除\"></a>删除</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">D     删除当前行，当前位置之后的内容</span><br><span class=\"line\">cw    删除光标所在位置到单词结尾的字符</span><br><span class=\"line\">dt;    一直删除到;截止</span><br></pre></td></tr></table></figure>\n<h3 id=\"粘贴\"><a href=\"#粘贴\" class=\"headerlink\" title=\"粘贴\"></a>粘贴</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p    在之后粘贴</span><br><span class=\"line\">P    在之前粘贴</span><br></pre></td></tr></table></figure>\n<h3 id=\"替换\"><a href=\"#替换\" class=\"headerlink\" title=\"替换\"></a>替换</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">r    单个字符</span><br><span class=\"line\">R    当前行字符</span><br></pre></td></tr></table></figure>\n<h3 id=\"撤销回退\"><a href=\"#撤销回退\" class=\"headerlink\" title=\"撤销回退\"></a>撤销回退</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ctrl+r    回退</span><br></pre></td></tr></table></figure>\n<h3 id=\"选择\"><a href=\"#选择\" class=\"headerlink\" title=\"选择\"></a>选择</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;action&gt;&lt;object&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">action: d y v</span><br><span class=\"line\"></span><br><span class=\"line\">ve</span><br><span class=\"line\">选择当前单词，同理ye粘贴当前单词，de删除当前单词</span><br></pre></td></tr></table></figure>\n<h3 id=\"代码提示\"><a href=\"#代码提示\" class=\"headerlink\" title=\"代码提示\"></a>代码提示</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在编辑模式下</span><br><span class=\"line\">ctrl+p</span><br><span class=\"line\">ctrl+n</span><br></pre></td></tr></table></figure>\n<h3 id=\"批量注释\"><a href=\"#批量注释\" class=\"headerlink\" title=\"批量注释\"></a>批量注释</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. ctrl + v  //块选择</span><br><span class=\"line\">2. shift + i //插入#</span><br><span class=\"line\">3. 按esc键(两次)</span><br></pre></td></tr></table></figure>\n<h3 id=\"自动缩进\"><a href=\"#自动缩进\" class=\"headerlink\" title=\"自动缩进\"></a>自动缩进</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">==</span><br></pre></td></tr></table></figure>\n<h2 id=\"高级用法\"><a href=\"#高级用法\" class=\"headerlink\" title=\"高级用法\"></a>高级用法</h2><h3 id=\"打开缓存文件\"><a href=\"#打开缓存文件\" class=\"headerlink\" title=\"打开缓存文件\"></a>打开缓存文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">命令模式:ls</span><br><span class=\"line\">列出打开过的文件</span><br><span class=\"line\">%表示当前打开的文件</span><br><span class=\"line\"></span><br><span class=\"line\">:buffer 2</span><br><span class=\"line\">选择要打开那个缓存文件</span><br></pre></td></tr></table></figure>\n<h3 id=\"标签浏览文件\"><a href=\"#标签浏览文件\" class=\"headerlink\" title=\"标签浏览文件\"></a>标签浏览文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:Te    按标签浏览文件</span><br><span class=\"line\"></span><br><span class=\"line\">gt    移到下一个标签文件</span><br><span class=\"line\">gT    移到前一个标签文件</span><br><span class=\"line\"></span><br><span class=\"line\">:tabs    列出所有标签</span><br><span class=\"line\"></span><br><span class=\"line\">:tabfirst</span><br><span class=\"line\">:tablast</span><br><span class=\"line\">打开指定的标签文件</span><br><span class=\"line\"></span><br><span class=\"line\">:qa    退出所有标签</span><br></pre></td></tr></table></figure>\n<h3 id=\"分屏浏览\"><a href=\"#分屏浏览\" class=\"headerlink\" title=\"分屏浏览\"></a>分屏浏览</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:He    上下分屏</span><br><span class=\"line\">:Ve    左右分屏</span><br><span class=\"line\"></span><br><span class=\"line\">:split</span><br><span class=\"line\">:vsplit</span><br><span class=\"line\">分屏，打开相同的文件</span><br><span class=\"line\"></span><br><span class=\"line\">ctrl+w+h/j/k/l</span><br><span class=\"line\">切换分屏</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">:set scb 在各个分屏内输入</span><br><span class=\"line\">分屏同步移动</span><br><span class=\"line\"></span><br><span class=\"line\">:set scb!</span><br><span class=\"line\">解锁同步移动</span><br></pre></td></tr></table></figure>\n<h3 id=\"多文件\"><a href=\"#多文件\" class=\"headerlink\" title=\"多文件\"></a>多文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:e /path/to/file</span><br><span class=\"line\"></span><br><span class=\"line\">文件移动</span><br><span class=\"line\">:bn</span><br><span class=\"line\">:bp</span><br></pre></td></tr></table></figure>\n<h3 id=\"保存会话\"><a href=\"#保存会话\" class=\"headerlink\" title=\"保存会话\"></a>保存会话</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:mksession</span><br><span class=\"line\">保存会话</span><br><span class=\"line\"></span><br><span class=\"line\">vi -S Session.vim</span><br><span class=\"line\">恢复会话</span><br></pre></td></tr></table></figure>\n<h3 id=\"大小写转换\"><a href=\"#大小写转换\" class=\"headerlink\" title=\"大小写转换\"></a>大小写转换</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">选定字符 + u</span><br><span class=\"line\">转换为小写</span><br><span class=\"line\"></span><br><span class=\"line\">选定字符 + U</span><br><span class=\"line\">转换为大写</span><br><span class=\"line\"></span><br><span class=\"line\">gu    当前行转换为小写</span><br><span class=\"line\">gU    当前行转换为大写</span><br></pre></td></tr></table></figure>\n<h3 id=\"光标移动\"><a href=\"#光标移动\" class=\"headerlink\" title=\"光标移动\"></a>光标移动</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ctrl + o    回退光标</span><br><span class=\"line\">ctrl + i    前进光标</span><br></pre></td></tr></table></figure>\n<h3 id=\"运行命令并插入到vi中\"><a href=\"#运行命令并插入到vi中\" class=\"headerlink\" title=\"运行命令并插入到vi中\"></a>运行命令并插入到vi中</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:r!date </span><br><span class=\"line\">:r!ls</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>强大的linux编辑器，分为命令模式和编辑模式，从编辑模式切换到命令模式使用esc键，从命令模式切换到编辑模式使用a A o O i I键</p>\n<p>参考资料：<a href=\"https://coolshell.cn/articles/5426.html\" target=\"_blank\" rel=\"noopener\">https://coolshell.cn/articles/5426.html</a></p>\n<h3 id=\"行内移动\"><a href=\"#行内移动\" class=\"headerlink\" title=\"行内移动\"></a>行内移动</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">w    移到下一个单词头</span><br><span class=\"line\">e    移到下一个单词尾</span><br><span class=\"line\">^    移到非空行首</span><br><span class=\"line\">g_    移到非空行尾</span><br><span class=\"line\">fa    找当前行的a</span><br><span class=\"line\">t;    调到;前的字符</span><br></pre></td></tr></table></figure>\n<h3 id=\"全文移动\"><a href=\"#全文移动\" class=\"headerlink\" title=\"全文移动\"></a>全文移动</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*    搜索当前的字符串</span><br><span class=\"line\">#    搜索当前的字符串</span><br><span class=\"line\"></span><br><span class=\"line\">%    查找相匹配的括号</span><br><span class=\"line\"></span><br><span class=\"line\">ctrl+u    向前翻半页</span><br><span class=\"line\"></span><br><span class=\"line\">ctrl+d    向后翻半页</span><br></pre></td></tr></table></figure>\n<h3 id=\"保存\"><a href=\"#保存\" class=\"headerlink\" title=\"保存\"></a>保存</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:saveas /path/to/file</span><br><span class=\"line\">另存为</span><br></pre></td></tr></table></figure>\n<h3 id=\"插入字符\"><a href=\"#插入字符\" class=\"headerlink\" title=\"插入字符\"></a>插入字符</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a    当前字符后插入</span><br><span class=\"line\">A    行尾插入</span><br><span class=\"line\">o    在下一行插入空行</span><br><span class=\"line\">O    在前一行插入空行</span><br><span class=\"line\">i    当前字符前插入</span><br><span class=\"line\">I    行首插入</span><br></pre></td></tr></table></figure>\n<h3 id=\"删除\"><a href=\"#删除\" class=\"headerlink\" title=\"删除\"></a>删除</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">D     删除当前行，当前位置之后的内容</span><br><span class=\"line\">cw    删除光标所在位置到单词结尾的字符</span><br><span class=\"line\">dt;    一直删除到;截止</span><br></pre></td></tr></table></figure>\n<h3 id=\"粘贴\"><a href=\"#粘贴\" class=\"headerlink\" title=\"粘贴\"></a>粘贴</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p    在之后粘贴</span><br><span class=\"line\">P    在之前粘贴</span><br></pre></td></tr></table></figure>\n<h3 id=\"替换\"><a href=\"#替换\" class=\"headerlink\" title=\"替换\"></a>替换</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">r    单个字符</span><br><span class=\"line\">R    当前行字符</span><br></pre></td></tr></table></figure>\n<h3 id=\"撤销回退\"><a href=\"#撤销回退\" class=\"headerlink\" title=\"撤销回退\"></a>撤销回退</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ctrl+r    回退</span><br></pre></td></tr></table></figure>\n<h3 id=\"选择\"><a href=\"#选择\" class=\"headerlink\" title=\"选择\"></a>选择</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;action&gt;&lt;object&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">action: d y v</span><br><span class=\"line\"></span><br><span class=\"line\">ve</span><br><span class=\"line\">选择当前单词，同理ye粘贴当前单词，de删除当前单词</span><br></pre></td></tr></table></figure>\n<h3 id=\"代码提示\"><a href=\"#代码提示\" class=\"headerlink\" title=\"代码提示\"></a>代码提示</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在编辑模式下</span><br><span class=\"line\">ctrl+p</span><br><span class=\"line\">ctrl+n</span><br></pre></td></tr></table></figure>\n<h3 id=\"批量注释\"><a href=\"#批量注释\" class=\"headerlink\" title=\"批量注释\"></a>批量注释</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. ctrl + v  //块选择</span><br><span class=\"line\">2. shift + i //插入#</span><br><span class=\"line\">3. 按esc键(两次)</span><br></pre></td></tr></table></figure>\n<h3 id=\"自动缩进\"><a href=\"#自动缩进\" class=\"headerlink\" title=\"自动缩进\"></a>自动缩进</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">==</span><br></pre></td></tr></table></figure>\n<h2 id=\"高级用法\"><a href=\"#高级用法\" class=\"headerlink\" title=\"高级用法\"></a>高级用法</h2><h3 id=\"打开缓存文件\"><a href=\"#打开缓存文件\" class=\"headerlink\" title=\"打开缓存文件\"></a>打开缓存文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">命令模式:ls</span><br><span class=\"line\">列出打开过的文件</span><br><span class=\"line\">%表示当前打开的文件</span><br><span class=\"line\"></span><br><span class=\"line\">:buffer 2</span><br><span class=\"line\">选择要打开那个缓存文件</span><br></pre></td></tr></table></figure>\n<h3 id=\"标签浏览文件\"><a href=\"#标签浏览文件\" class=\"headerlink\" title=\"标签浏览文件\"></a>标签浏览文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:Te    按标签浏览文件</span><br><span class=\"line\"></span><br><span class=\"line\">gt    移到下一个标签文件</span><br><span class=\"line\">gT    移到前一个标签文件</span><br><span class=\"line\"></span><br><span class=\"line\">:tabs    列出所有标签</span><br><span class=\"line\"></span><br><span class=\"line\">:tabfirst</span><br><span class=\"line\">:tablast</span><br><span class=\"line\">打开指定的标签文件</span><br><span class=\"line\"></span><br><span class=\"line\">:qa    退出所有标签</span><br></pre></td></tr></table></figure>\n<h3 id=\"分屏浏览\"><a href=\"#分屏浏览\" class=\"headerlink\" title=\"分屏浏览\"></a>分屏浏览</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:He    上下分屏</span><br><span class=\"line\">:Ve    左右分屏</span><br><span class=\"line\"></span><br><span class=\"line\">:split</span><br><span class=\"line\">:vsplit</span><br><span class=\"line\">分屏，打开相同的文件</span><br><span class=\"line\"></span><br><span class=\"line\">ctrl+w+h/j/k/l</span><br><span class=\"line\">切换分屏</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">:set scb 在各个分屏内输入</span><br><span class=\"line\">分屏同步移动</span><br><span class=\"line\"></span><br><span class=\"line\">:set scb!</span><br><span class=\"line\">解锁同步移动</span><br></pre></td></tr></table></figure>\n<h3 id=\"多文件\"><a href=\"#多文件\" class=\"headerlink\" title=\"多文件\"></a>多文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:e /path/to/file</span><br><span class=\"line\"></span><br><span class=\"line\">文件移动</span><br><span class=\"line\">:bn</span><br><span class=\"line\">:bp</span><br></pre></td></tr></table></figure>\n<h3 id=\"保存会话\"><a href=\"#保存会话\" class=\"headerlink\" title=\"保存会话\"></a>保存会话</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:mksession</span><br><span class=\"line\">保存会话</span><br><span class=\"line\"></span><br><span class=\"line\">vi -S Session.vim</span><br><span class=\"line\">恢复会话</span><br></pre></td></tr></table></figure>\n<h3 id=\"大小写转换\"><a href=\"#大小写转换\" class=\"headerlink\" title=\"大小写转换\"></a>大小写转换</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">选定字符 + u</span><br><span class=\"line\">转换为小写</span><br><span class=\"line\"></span><br><span class=\"line\">选定字符 + U</span><br><span class=\"line\">转换为大写</span><br><span class=\"line\"></span><br><span class=\"line\">gu    当前行转换为小写</span><br><span class=\"line\">gU    当前行转换为大写</span><br></pre></td></tr></table></figure>\n<h3 id=\"光标移动\"><a href=\"#光标移动\" class=\"headerlink\" title=\"光标移动\"></a>光标移动</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ctrl + o    回退光标</span><br><span class=\"line\">ctrl + i    前进光标</span><br></pre></td></tr></table></figure>\n<h3 id=\"运行命令并插入到vi中\"><a href=\"#运行命令并插入到vi中\" class=\"headerlink\" title=\"运行命令并插入到vi中\"></a>运行命令并插入到vi中</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:r!date </span><br><span class=\"line\">:r!ls</span><br></pre></td></tr></table></figure>\n"},{"title":"laravel队列源码分析","date":"2017-12-20T16:00:00.000Z","_content":"\nphp artisan queue:listen该命令通过php artisan queue:work来实现队列监听，源码中采用proc_open等相关函数实现多进程启动队列，每次启动均重启框架，所以性能上不是很高，占用的内存过大。但是在代码调试过程中可使用，每次更新队列文件的代码之后不需重新启动队列监听，即可实现队列文件的修改。\n\n### php artisan queue:listen\n```php\n//获取相关参数，之后调用queue Listener类，实现队列监听\npublic function fire()\n{\n    $this->setListenerOptions();\n\n    $delay = $this->input->getOption('delay');\n\n    // The memory limit is the amount of memory we will allow the script to occupy\n    // before killing it and letting a process manager restart it for us, which\n    // is to protect us against any memory leaks that will be in the scripts.\n    $memory = $this->input->getOption('memory');\n\n    $connection = $this->input->getArgument('connection');\n\n    $timeout = $this->input->getOption('timeout');\n\n    // We need to get the right queue for the connection which is set in the queue\n    // configuration file for the application. We will pull it based on the set\n    // connection being run for the queue operation currently being executed.\n    $queue = $this->getQueue($connection);\n\n    $this->listener->listen(\n        $connection, $queue, $delay, $memory, $timeout\n    );\n}\n```\n\n```php\n//创建进程，并通过无限循环调用进程\npublic function listen($connection, $queue, $delay, $memory, $timeout = 60)\n{\n    $process = $this->makeProcess($connection, $queue, $delay, $memory, $timeout);\n\n    while (true) {\n        $this->runProcess($process, $memory);\n    }\n}\n```\n\n```php\n//运行进程，回调函数表示可执行运行时输出，并且每次执行时验证是否超过内存限制\npublic function runProcess(Process $process, $memory)\n{\n    $process->run(function ($type, $line) {\n        $this->handleWorkerOutput($type, $line);\n    });\n\n    // Once we have run the job we'll go check if the memory limit has been\n    // exceeded for the script. If it has, we will kill this script so a\n    // process manager will restart this with a clean slate of memory.\n    if ($this->memoryExceeded($memory)) {\n        $this->stop();\n    }\n}\n```\n\n```php\n//队列实际运行的过程\npublic function run($callback = null)\n{\n    $this->start($callback);\n\n    return $this->wait();\n}\n```\n\n### php artisan queue:work\n省略获取参数相关的代码\n\n#### 第一步：获取任务前的处理\n```php\n如果有$daemon参数，则运行监听事件，否则只取出位于队首的元素执行\nWorkCommand.php\nprotected function runWorker($connection, $queue, $delay, $memory, $daemon = false)\n{\n    $this->worker->setDaemonExceptionHandler(\n        $this->laravel['Illuminate\\Contracts\\Debug\\ExceptionHandler']\n    );\n\n    if ($daemon) {\n        $this->worker->setCache($this->laravel['cache']->driver());\n\n        return $this->worker->daemon(\n            $connection, $queue, $delay, $memory,\n            $this->option('sleep'), $this->option('tries')\n        );\n    }\n\n    return $this->worker->pop(\n        $connection, $queue, $delay,\n        $this->option('sleep'), $this->option('tries')\n    );\n}\n```\n\n```php\nworkr pop方法的代码，取出下一个元素之后运行，完成之后调用sleep方法\nWork.php\npublic function pop($connectionName, $queue = null, $delay = 0, $sleep = 3, $maxTries = 0)\n{\n    try {\n        $connection = $this->manager->connection($connectionName);\n\n        $job = $this->getNextJob($connection, $queue);\n\n        // If we're able to pull a job off of the stack, we will process it and\n        // then immediately return back out. If there is no job on the queue\n        // we will \"sleep\" the worker for the specified number of seconds.\n        if (! is_null($job)) {\n            return $this->process(\n                $this->manager->getName($connectionName), $job, $maxTries, $delay\n            );\n        }\n    } catch (Exception $e) {\n        if ($this->exceptions) {\n            $this->exceptions->report($e);\n        }\n    } catch (Throwable $e) {\n        if ($this->exceptions) {\n            $this->exceptions->report(new FatalThrowableError($e));\n        }\n    }\n\n    $this->sleep($sleep);\n\n    return ['job' => null, 'failed' => false];\n}\n```\n\n```php\n队列容器采用redis时，$connection使用redis连接\n没有指定queue名称时，取默认的连接default\n如果指定队列名称，则用逗号分隔，按顺序取出所有数据\nWorker.php\nprotected function getNextJob($connection, $queue)\n{\n    if (is_null($queue)) {\n        return $connection->pop();\n    }\n\n    foreach (explode(',', $queue) as $queue) {\n        if (! is_null($job = $connection->pop($queue))) {\n            return $job;\n        }\n    }\n}\n```\n\n```php\n从redis中取出队列数据\n1.首先将队列每次执行时检查所有的过期或执行中的任务，将其从有序集合中删除，同时重新推入到队列的末尾\n2.再取出队列头部的数据，并从redis中删除，之后添加到名称为$queue:reserved的有序集合中，表示该条数据正在处理中，过期时间为当前时间+redis的过期时间\n(每次检查时比较当前时间和这条数据的分值来判断是否过期，如果大于该分值，则表示已经过期，会进行过期处理，重新调回1步骤)\nRedisQueue.php\npublic function pop($queue = null)\n{\n    $original = $queue ?: $this->default;\n\n    $queue = $this->getQueue($queue);\n\n    if (! is_null($this->expire)) {\n        $this->migrateAllExpiredJobs($queue);\n    }\n\n    $job = $this->getConnection()->lpop($queue);\n\n    if (! is_null($job)) {\n        $this->getConnection()->zadd($queue.':reserved', $this->getTime() + $this->expire, $job);\n\n        return new RedisJob($this->container, $this, $job, $original);\n    }\n}\n```\n\n处理异常数据\n```php\n移除redis键为$queue:delayed和$queue:reserved名称的数据\nRedisQueue.php\nprotected function migrateAllExpiredJobs($queue)\n{\n    $this->migrateExpiredJobs($queue.':delayed', $queue);\n\n    $this->migrateExpiredJobs($queue.':reserved', $queue);\n}\n\n取出所有过期的任务，如果数量大于0，则去掉，然后将任务推入到新的队列\n$this->getConnection()为Predis\\Client类，通过他启动事务，同时对redis的键为$queue:reserved进行监听，取出所有超时任务进行删除，并将这些任务推入到队列尾部\n\npublic function migrateExpiredJobs($from, $to)\n{\n    $options = ['cas' => true, 'watch' => $from, 'retry' => 10];\n\n    $this->getConnection()->transaction($options, function ($transaction) use ($from, $to) {\n        // First we need to get all of jobs that have expired based on the current time\n        // so that we can push them onto the main queue. After we get them we simply\n        // remove them from this \"delay\" queues. All of this within a transaction.\n        $jobs = $this->getExpiredJobs(\n            $transaction, $from, $time = $this->getTime()\n        );\n\n        // If we actually found any jobs, we will remove them from the old queue and we\n        // will insert them onto the new (ready) \"queue\". This means they will stand\n        // ready to be processed by the queue worker whenever their turn comes up.\n        if (count($jobs) > 0) {\n            $this->removeExpiredJobs($transaction, $from, $time);\n\n            $this->pushExpiredJobsOntoNewQueue($transaction, $to, $jobs);\n        }\n    });\n}\n\n$from为队列的键，$time是当前时间，取出有序集合中分数最小值到分数为当前时间的所有数据\n\nprotected function getExpiredJobs($transaction, $from, $time)\n{\n    return $transaction->zrangebyscore($from, '-inf', $time);\n}\nprotected function removeExpiredJobs($transaction, $from, $time)\n{\n    $transaction->multi();\n\n    $transaction->zremrangebyscore($from, '-inf', $time);\n}\n\nprotected function pushExpiredJobsOntoNewQueue($transaction, $to, $jobs)\n{\n    call_user_func_array([$transaction, 'rpush'], array_merge([$to], $jobs));\n```\n\n#### 第二步：处理任务\n```php\n回到取出队列数据后运行的代码\n先验证是否设置了最大尝试次数，如果任务记录的尝试次数大于最大尝试次数，则\nWork.php\npublic function process($connection, Job $job, $maxTries = 0, $delay = 0)\n{\n    if ($maxTries > 0 && $job->attempts() > $maxTries) {\n        return $this->logFailedJob($connection, $job);\n    }\n\n    try {\n        // First we will fire off the job. Once it is done we will see if it will\n        // be auto-deleted after processing and if so we will go ahead and run\n        // the delete method on the job. Otherwise we will just keep moving.\n        $job->fire();\n\n        $this->raiseAfterJobEvent($connection, $job);\n\n        return ['job' => $job, 'failed' => false];\n    } catch (Exception $e) {\n        // If we catch an exception, we will attempt to release the job back onto\n        // the queue so it is not lost. This will let is be retried at a later\n        // time by another listener (or the same one). We will do that here.\n        if (! $job->isDeleted()) {\n            $job->release($delay);\n        }\n\n        throw $e;\n    } catch (Throwable $e) {\n        if (! $job->isDeleted()) {\n            $job->release($delay);\n        }\n\n        throw $e;\n    }\n}\n```\n\n尝试次数过多处理\n\n```php\n记录失败日志，如果设置了failer处理器，则失败日志\nWork.php\nprotected function logFailedJob($connection, Job $job)\n{\n    if ($this->failer) {\n        $this->failer->log($connection, $job->getQueue(), $job->getRawBody());\n\n        $job->delete();\n\n        $job->failed();\n\n        $this->raiseFailedJobEvent($connection, $job);\n    }\n\n    return ['job' => $job, 'failed' => true];\n}\n\n插入当前时间的一条失败记录，payload为任务体，记录名称、连接等信息\nDatabaseFailedJobProvider.php\n\npublic function log($connection, $queue, $payload)\n{\n    $failed_at = Carbon::now();\n\n    $this->getTable()->insert(compact('connection', 'queue', 'payload', 'failed_at'));\n}\n\nRedisJob.php\npublic function delete()\n{\n    parent::delete();\n\n    $this->redis->deleteReserved($this->queue, $this->job);\n}\n\n\n由于上一步把每次处理的数据都从$queue中取出，放入$queue:reserved中，所以此处将该值从$queue:reserved中删除\nRedisQueue\n\npublic function deleteReserved($queue, $job)\n{\n    $this->getConnection()->zrem($this->getQueue($queue).':reserved', $job);\n}\n取出job，转换成对象CallQueuedHandler，调用failed方法，传入的值为任务的实体(也就是自己写的队列类)\nJob.php\npublic function failed()\n{\n    $payload = json_decode($this->getRawBody(), true);\n\n    list($class, $method) = $this->parseJob($payload['job']);\n\n    $this->instance = $this->resolve($class);\n\n    if (method_exists($this->instance, 'failed')) {\n        $this->instance->failed($this->resolveQueueableEntities($payload['data']));\n    }\n}\n\n调用任务类的failed方法\nCallQueuedHandler.php\npublic function failed(array $data)\n{\n    $handler = $this->dispatcher->resolveHandler($command = unserialize($data['command']));\n\n    if (method_exists($handler, 'failed')) {\n        call_user_func([$handler, 'failed'], $command);\n    }\n}\n```\n\n任务处理\n\n```php\n队列数据例如：\n{\n    \"job\": \"Illuminate\\\\Queue\\\\CallQueuedHandler@call\",\n    \"data\": {\n        \"command\": \"O:24:\\\"App\\\\Commands\\\\TestCommand\\\":1:{s:12:\\\"\\u0000*\\u0000requestNo\\\";i:18;}\"\n    },\n    \"id\": \"P5nKwZs2LNSjOFBlVCPyvdK7jAAHCi3U\",\n    \"attempts\": 1\n}\njob为队列处理的程序，data为要处理的数据(自己写的队列文件)，attempts为处理次数，推入队列时即为1\n```\n\n```php\n回到队列处理的process方法中，该方法调用fire()方法\nRedisJob.php\npublic function fire()\n{\n    $this->resolveAndFire(json_decode($this->getRawBody(), true));\n}\n\nprotected function resolveAndFire(array $payload)\n{\n    list($class, $method) = $this->parseJob($payload['job']);\n\n    $this->instance = $this->resolve($class);\n\n    $this->instance->{$method}($this, $this->resolveQueueableEntities($payload['data']));\n}\n\n通过@分割类和方法，调用CallQueuedHandler的call方法处理队列\nprotected function parseJob($job)\n{\n    $segments = explode('@', $job);\n\n    return count($segments) > 1 ? $segments : [$segments[0], 'fire'];\n}\n\n调用call方法，取出队列任务$command，调用Dispatch类的dispatchNow方法处理任务\nCallQueuedHandler.php\npublic function call(Job $job, array $data)\n{\n    $command = $this->setJobInstanceIfNecessary(\n        $job, unserialize($data['command'])\n    );\n\n    $this->dispatcher->dispatchNow($command, function ($handler) use ($job) {\n        $this->setJobInstanceIfNecessary($job, $handler);\n    });\n\n    if (! $job->isDeletedOrReleased()) {\n        $job->delete();\n    }\n}\n\n队列类继承了SelfHandling接口，可以直接执行handle方法，afterResolving匿名函数貌似没有执行\nDispatch.php\n\npublic function dispatchNow($command, Closure $afterResolving = null)\n{\n    return $this->pipeline->send($command)->through($this->pipes)->then(function ($command) use ($afterResolving) {\n        if ($command instanceof SelfHandling) {\n            return $this->container->call([$command, 'handle']);\n        }\n\n        $handler = $this->resolveHandler($command);\n\n        if ($afterResolving) {\n            call_user_func($afterResolving, $handler);\n        }\n\n        return call_user_func(\n            [$handler, $this->getHandlerMethod($command)], $command\n        );\n    });\n}\n进入Container类的call方法，执行getMethodDependencies方法获取类的所有依赖，然后通过call_user_func_array函数调用[$command, 'handle']方法，参数为获取到的依赖对象\nContainer.php\n\npublic function call($callback, array $parameters = [], $defaultMethod = null)\n{\n    if ($this->isCallableWithAtSign($callback) || $defaultMethod) {\n        return $this->callClass($callback, $parameters, $defaultMethod);\n    }\n\n    $dependencies = $this->getMethodDependencies($callback, $parameters);\n\n    return call_user_func_array($callback, $dependencies);\n}\n\n通过反射获取匿名函数的所有依赖\nContainer.php\nprotected function getMethodDependencies($callback, array $parameters = [])\n{\n    $dependencies = [];\n\n    foreach ($this->getCallReflector($callback)->getParameters() as $key => $parameter) {\n        $this->addDependencyForCallParameter($parameter, $parameters, $dependencies);\n    }\n\n    return array_merge($dependencies, $parameters);\n}\n```\n\n执行完成后删除\n\n```php\n回到$job->isDeletedOrReleased(),此处将队列任务删除\n\nRedisJob.php\npublic function isDeletedOrReleased()\n{\n    return $this->isDeleted() || $this->isReleased();\n}\n\nRedisJob.php\n\npublic function delete()\n{\n    parent::delete();\n\n    $this->redis->deleteReserved($this->queue, $this->job);\n}\n将任务从redis为$queue:reserved的列表中删除，此处队列正常处理即为完成\nRedisQueue.php\n\npublic function deleteReserved($queue, $job)\n{\n    $this->getConnection()->zrem($this->getQueue($queue).':reserved', $job);\n}\n```\n\n触发处理后的事件illuminate.queue.after\n```php\n激活illuminate.queue.after事件，参数为redis连接，任务，还有任务类\nprotected function raiseAfterJobEvent($connection, Job $job)\n{\n    if ($this->events) {\n        $data = json_decode($job->getRawBody(), true);\n\n        $this->events->fire('illuminate.queue.after', [$connection, $job, $data]);\n    }\n}\n\n在AppServiceProvider.php中注册illuminate.queue.after事件\nQueue::after(function ($connection, $job, $data) {\n    // 写日志\n});\n```\n\n#### 异常处理\n```php\n首先看process方法的异常，抛出异常后执行$job->release($delay)方法，RedisJob::delete()方法为上面分析的删除方法，此处会把$queue:reserved的值删除。也就是说队列会把正在处理的任务放到delayed队列中。\n设置延迟时间为参数中的--delay参数，\nRedisJob.php\npublic function release($delay = 0)\n{\n    parent::release($delay);\n\n    $this->delete();\n\n    $this->redis->release($this->queue, $this->job, $delay, $this->attempts() + 1);\n}\n\n设置当前任务的的attempts次数+1，同时添加到$queue:delayed的队列中，超时时间为当前时间+延迟秒数\nRedisQueue.php\npublic function release($queue, $payload, $delay, $attempts)\n{\n    $payload = $this->setMeta($payload, 'attempts', $attempts);\n\n    $this->getConnection()->zadd($this->getQueue($queue).':delayed', $this->getTime() + $delay, $payload);\n}\n\npop方法的异常处理，发送消息通知\n$this->exceptions->report($e);\n```\n\n疑问点：\n如果redis处理过程中down掉，存在reserved中数据不会清掉","source":"_posts/laravel_queue.md","raw":"---\ntitle: laravel队列源码分析\ndate: 2017-12-21\ncategories: laravel\ntags: laravel\n---\n\nphp artisan queue:listen该命令通过php artisan queue:work来实现队列监听，源码中采用proc_open等相关函数实现多进程启动队列，每次启动均重启框架，所以性能上不是很高，占用的内存过大。但是在代码调试过程中可使用，每次更新队列文件的代码之后不需重新启动队列监听，即可实现队列文件的修改。\n\n### php artisan queue:listen\n```php\n//获取相关参数，之后调用queue Listener类，实现队列监听\npublic function fire()\n{\n    $this->setListenerOptions();\n\n    $delay = $this->input->getOption('delay');\n\n    // The memory limit is the amount of memory we will allow the script to occupy\n    // before killing it and letting a process manager restart it for us, which\n    // is to protect us against any memory leaks that will be in the scripts.\n    $memory = $this->input->getOption('memory');\n\n    $connection = $this->input->getArgument('connection');\n\n    $timeout = $this->input->getOption('timeout');\n\n    // We need to get the right queue for the connection which is set in the queue\n    // configuration file for the application. We will pull it based on the set\n    // connection being run for the queue operation currently being executed.\n    $queue = $this->getQueue($connection);\n\n    $this->listener->listen(\n        $connection, $queue, $delay, $memory, $timeout\n    );\n}\n```\n\n```php\n//创建进程，并通过无限循环调用进程\npublic function listen($connection, $queue, $delay, $memory, $timeout = 60)\n{\n    $process = $this->makeProcess($connection, $queue, $delay, $memory, $timeout);\n\n    while (true) {\n        $this->runProcess($process, $memory);\n    }\n}\n```\n\n```php\n//运行进程，回调函数表示可执行运行时输出，并且每次执行时验证是否超过内存限制\npublic function runProcess(Process $process, $memory)\n{\n    $process->run(function ($type, $line) {\n        $this->handleWorkerOutput($type, $line);\n    });\n\n    // Once we have run the job we'll go check if the memory limit has been\n    // exceeded for the script. If it has, we will kill this script so a\n    // process manager will restart this with a clean slate of memory.\n    if ($this->memoryExceeded($memory)) {\n        $this->stop();\n    }\n}\n```\n\n```php\n//队列实际运行的过程\npublic function run($callback = null)\n{\n    $this->start($callback);\n\n    return $this->wait();\n}\n```\n\n### php artisan queue:work\n省略获取参数相关的代码\n\n#### 第一步：获取任务前的处理\n```php\n如果有$daemon参数，则运行监听事件，否则只取出位于队首的元素执行\nWorkCommand.php\nprotected function runWorker($connection, $queue, $delay, $memory, $daemon = false)\n{\n    $this->worker->setDaemonExceptionHandler(\n        $this->laravel['Illuminate\\Contracts\\Debug\\ExceptionHandler']\n    );\n\n    if ($daemon) {\n        $this->worker->setCache($this->laravel['cache']->driver());\n\n        return $this->worker->daemon(\n            $connection, $queue, $delay, $memory,\n            $this->option('sleep'), $this->option('tries')\n        );\n    }\n\n    return $this->worker->pop(\n        $connection, $queue, $delay,\n        $this->option('sleep'), $this->option('tries')\n    );\n}\n```\n\n```php\nworkr pop方法的代码，取出下一个元素之后运行，完成之后调用sleep方法\nWork.php\npublic function pop($connectionName, $queue = null, $delay = 0, $sleep = 3, $maxTries = 0)\n{\n    try {\n        $connection = $this->manager->connection($connectionName);\n\n        $job = $this->getNextJob($connection, $queue);\n\n        // If we're able to pull a job off of the stack, we will process it and\n        // then immediately return back out. If there is no job on the queue\n        // we will \"sleep\" the worker for the specified number of seconds.\n        if (! is_null($job)) {\n            return $this->process(\n                $this->manager->getName($connectionName), $job, $maxTries, $delay\n            );\n        }\n    } catch (Exception $e) {\n        if ($this->exceptions) {\n            $this->exceptions->report($e);\n        }\n    } catch (Throwable $e) {\n        if ($this->exceptions) {\n            $this->exceptions->report(new FatalThrowableError($e));\n        }\n    }\n\n    $this->sleep($sleep);\n\n    return ['job' => null, 'failed' => false];\n}\n```\n\n```php\n队列容器采用redis时，$connection使用redis连接\n没有指定queue名称时，取默认的连接default\n如果指定队列名称，则用逗号分隔，按顺序取出所有数据\nWorker.php\nprotected function getNextJob($connection, $queue)\n{\n    if (is_null($queue)) {\n        return $connection->pop();\n    }\n\n    foreach (explode(',', $queue) as $queue) {\n        if (! is_null($job = $connection->pop($queue))) {\n            return $job;\n        }\n    }\n}\n```\n\n```php\n从redis中取出队列数据\n1.首先将队列每次执行时检查所有的过期或执行中的任务，将其从有序集合中删除，同时重新推入到队列的末尾\n2.再取出队列头部的数据，并从redis中删除，之后添加到名称为$queue:reserved的有序集合中，表示该条数据正在处理中，过期时间为当前时间+redis的过期时间\n(每次检查时比较当前时间和这条数据的分值来判断是否过期，如果大于该分值，则表示已经过期，会进行过期处理，重新调回1步骤)\nRedisQueue.php\npublic function pop($queue = null)\n{\n    $original = $queue ?: $this->default;\n\n    $queue = $this->getQueue($queue);\n\n    if (! is_null($this->expire)) {\n        $this->migrateAllExpiredJobs($queue);\n    }\n\n    $job = $this->getConnection()->lpop($queue);\n\n    if (! is_null($job)) {\n        $this->getConnection()->zadd($queue.':reserved', $this->getTime() + $this->expire, $job);\n\n        return new RedisJob($this->container, $this, $job, $original);\n    }\n}\n```\n\n处理异常数据\n```php\n移除redis键为$queue:delayed和$queue:reserved名称的数据\nRedisQueue.php\nprotected function migrateAllExpiredJobs($queue)\n{\n    $this->migrateExpiredJobs($queue.':delayed', $queue);\n\n    $this->migrateExpiredJobs($queue.':reserved', $queue);\n}\n\n取出所有过期的任务，如果数量大于0，则去掉，然后将任务推入到新的队列\n$this->getConnection()为Predis\\Client类，通过他启动事务，同时对redis的键为$queue:reserved进行监听，取出所有超时任务进行删除，并将这些任务推入到队列尾部\n\npublic function migrateExpiredJobs($from, $to)\n{\n    $options = ['cas' => true, 'watch' => $from, 'retry' => 10];\n\n    $this->getConnection()->transaction($options, function ($transaction) use ($from, $to) {\n        // First we need to get all of jobs that have expired based on the current time\n        // so that we can push them onto the main queue. After we get them we simply\n        // remove them from this \"delay\" queues. All of this within a transaction.\n        $jobs = $this->getExpiredJobs(\n            $transaction, $from, $time = $this->getTime()\n        );\n\n        // If we actually found any jobs, we will remove them from the old queue and we\n        // will insert them onto the new (ready) \"queue\". This means they will stand\n        // ready to be processed by the queue worker whenever their turn comes up.\n        if (count($jobs) > 0) {\n            $this->removeExpiredJobs($transaction, $from, $time);\n\n            $this->pushExpiredJobsOntoNewQueue($transaction, $to, $jobs);\n        }\n    });\n}\n\n$from为队列的键，$time是当前时间，取出有序集合中分数最小值到分数为当前时间的所有数据\n\nprotected function getExpiredJobs($transaction, $from, $time)\n{\n    return $transaction->zrangebyscore($from, '-inf', $time);\n}\nprotected function removeExpiredJobs($transaction, $from, $time)\n{\n    $transaction->multi();\n\n    $transaction->zremrangebyscore($from, '-inf', $time);\n}\n\nprotected function pushExpiredJobsOntoNewQueue($transaction, $to, $jobs)\n{\n    call_user_func_array([$transaction, 'rpush'], array_merge([$to], $jobs));\n```\n\n#### 第二步：处理任务\n```php\n回到取出队列数据后运行的代码\n先验证是否设置了最大尝试次数，如果任务记录的尝试次数大于最大尝试次数，则\nWork.php\npublic function process($connection, Job $job, $maxTries = 0, $delay = 0)\n{\n    if ($maxTries > 0 && $job->attempts() > $maxTries) {\n        return $this->logFailedJob($connection, $job);\n    }\n\n    try {\n        // First we will fire off the job. Once it is done we will see if it will\n        // be auto-deleted after processing and if so we will go ahead and run\n        // the delete method on the job. Otherwise we will just keep moving.\n        $job->fire();\n\n        $this->raiseAfterJobEvent($connection, $job);\n\n        return ['job' => $job, 'failed' => false];\n    } catch (Exception $e) {\n        // If we catch an exception, we will attempt to release the job back onto\n        // the queue so it is not lost. This will let is be retried at a later\n        // time by another listener (or the same one). We will do that here.\n        if (! $job->isDeleted()) {\n            $job->release($delay);\n        }\n\n        throw $e;\n    } catch (Throwable $e) {\n        if (! $job->isDeleted()) {\n            $job->release($delay);\n        }\n\n        throw $e;\n    }\n}\n```\n\n尝试次数过多处理\n\n```php\n记录失败日志，如果设置了failer处理器，则失败日志\nWork.php\nprotected function logFailedJob($connection, Job $job)\n{\n    if ($this->failer) {\n        $this->failer->log($connection, $job->getQueue(), $job->getRawBody());\n\n        $job->delete();\n\n        $job->failed();\n\n        $this->raiseFailedJobEvent($connection, $job);\n    }\n\n    return ['job' => $job, 'failed' => true];\n}\n\n插入当前时间的一条失败记录，payload为任务体，记录名称、连接等信息\nDatabaseFailedJobProvider.php\n\npublic function log($connection, $queue, $payload)\n{\n    $failed_at = Carbon::now();\n\n    $this->getTable()->insert(compact('connection', 'queue', 'payload', 'failed_at'));\n}\n\nRedisJob.php\npublic function delete()\n{\n    parent::delete();\n\n    $this->redis->deleteReserved($this->queue, $this->job);\n}\n\n\n由于上一步把每次处理的数据都从$queue中取出，放入$queue:reserved中，所以此处将该值从$queue:reserved中删除\nRedisQueue\n\npublic function deleteReserved($queue, $job)\n{\n    $this->getConnection()->zrem($this->getQueue($queue).':reserved', $job);\n}\n取出job，转换成对象CallQueuedHandler，调用failed方法，传入的值为任务的实体(也就是自己写的队列类)\nJob.php\npublic function failed()\n{\n    $payload = json_decode($this->getRawBody(), true);\n\n    list($class, $method) = $this->parseJob($payload['job']);\n\n    $this->instance = $this->resolve($class);\n\n    if (method_exists($this->instance, 'failed')) {\n        $this->instance->failed($this->resolveQueueableEntities($payload['data']));\n    }\n}\n\n调用任务类的failed方法\nCallQueuedHandler.php\npublic function failed(array $data)\n{\n    $handler = $this->dispatcher->resolveHandler($command = unserialize($data['command']));\n\n    if (method_exists($handler, 'failed')) {\n        call_user_func([$handler, 'failed'], $command);\n    }\n}\n```\n\n任务处理\n\n```php\n队列数据例如：\n{\n    \"job\": \"Illuminate\\\\Queue\\\\CallQueuedHandler@call\",\n    \"data\": {\n        \"command\": \"O:24:\\\"App\\\\Commands\\\\TestCommand\\\":1:{s:12:\\\"\\u0000*\\u0000requestNo\\\";i:18;}\"\n    },\n    \"id\": \"P5nKwZs2LNSjOFBlVCPyvdK7jAAHCi3U\",\n    \"attempts\": 1\n}\njob为队列处理的程序，data为要处理的数据(自己写的队列文件)，attempts为处理次数，推入队列时即为1\n```\n\n```php\n回到队列处理的process方法中，该方法调用fire()方法\nRedisJob.php\npublic function fire()\n{\n    $this->resolveAndFire(json_decode($this->getRawBody(), true));\n}\n\nprotected function resolveAndFire(array $payload)\n{\n    list($class, $method) = $this->parseJob($payload['job']);\n\n    $this->instance = $this->resolve($class);\n\n    $this->instance->{$method}($this, $this->resolveQueueableEntities($payload['data']));\n}\n\n通过@分割类和方法，调用CallQueuedHandler的call方法处理队列\nprotected function parseJob($job)\n{\n    $segments = explode('@', $job);\n\n    return count($segments) > 1 ? $segments : [$segments[0], 'fire'];\n}\n\n调用call方法，取出队列任务$command，调用Dispatch类的dispatchNow方法处理任务\nCallQueuedHandler.php\npublic function call(Job $job, array $data)\n{\n    $command = $this->setJobInstanceIfNecessary(\n        $job, unserialize($data['command'])\n    );\n\n    $this->dispatcher->dispatchNow($command, function ($handler) use ($job) {\n        $this->setJobInstanceIfNecessary($job, $handler);\n    });\n\n    if (! $job->isDeletedOrReleased()) {\n        $job->delete();\n    }\n}\n\n队列类继承了SelfHandling接口，可以直接执行handle方法，afterResolving匿名函数貌似没有执行\nDispatch.php\n\npublic function dispatchNow($command, Closure $afterResolving = null)\n{\n    return $this->pipeline->send($command)->through($this->pipes)->then(function ($command) use ($afterResolving) {\n        if ($command instanceof SelfHandling) {\n            return $this->container->call([$command, 'handle']);\n        }\n\n        $handler = $this->resolveHandler($command);\n\n        if ($afterResolving) {\n            call_user_func($afterResolving, $handler);\n        }\n\n        return call_user_func(\n            [$handler, $this->getHandlerMethod($command)], $command\n        );\n    });\n}\n进入Container类的call方法，执行getMethodDependencies方法获取类的所有依赖，然后通过call_user_func_array函数调用[$command, 'handle']方法，参数为获取到的依赖对象\nContainer.php\n\npublic function call($callback, array $parameters = [], $defaultMethod = null)\n{\n    if ($this->isCallableWithAtSign($callback) || $defaultMethod) {\n        return $this->callClass($callback, $parameters, $defaultMethod);\n    }\n\n    $dependencies = $this->getMethodDependencies($callback, $parameters);\n\n    return call_user_func_array($callback, $dependencies);\n}\n\n通过反射获取匿名函数的所有依赖\nContainer.php\nprotected function getMethodDependencies($callback, array $parameters = [])\n{\n    $dependencies = [];\n\n    foreach ($this->getCallReflector($callback)->getParameters() as $key => $parameter) {\n        $this->addDependencyForCallParameter($parameter, $parameters, $dependencies);\n    }\n\n    return array_merge($dependencies, $parameters);\n}\n```\n\n执行完成后删除\n\n```php\n回到$job->isDeletedOrReleased(),此处将队列任务删除\n\nRedisJob.php\npublic function isDeletedOrReleased()\n{\n    return $this->isDeleted() || $this->isReleased();\n}\n\nRedisJob.php\n\npublic function delete()\n{\n    parent::delete();\n\n    $this->redis->deleteReserved($this->queue, $this->job);\n}\n将任务从redis为$queue:reserved的列表中删除，此处队列正常处理即为完成\nRedisQueue.php\n\npublic function deleteReserved($queue, $job)\n{\n    $this->getConnection()->zrem($this->getQueue($queue).':reserved', $job);\n}\n```\n\n触发处理后的事件illuminate.queue.after\n```php\n激活illuminate.queue.after事件，参数为redis连接，任务，还有任务类\nprotected function raiseAfterJobEvent($connection, Job $job)\n{\n    if ($this->events) {\n        $data = json_decode($job->getRawBody(), true);\n\n        $this->events->fire('illuminate.queue.after', [$connection, $job, $data]);\n    }\n}\n\n在AppServiceProvider.php中注册illuminate.queue.after事件\nQueue::after(function ($connection, $job, $data) {\n    // 写日志\n});\n```\n\n#### 异常处理\n```php\n首先看process方法的异常，抛出异常后执行$job->release($delay)方法，RedisJob::delete()方法为上面分析的删除方法，此处会把$queue:reserved的值删除。也就是说队列会把正在处理的任务放到delayed队列中。\n设置延迟时间为参数中的--delay参数，\nRedisJob.php\npublic function release($delay = 0)\n{\n    parent::release($delay);\n\n    $this->delete();\n\n    $this->redis->release($this->queue, $this->job, $delay, $this->attempts() + 1);\n}\n\n设置当前任务的的attempts次数+1，同时添加到$queue:delayed的队列中，超时时间为当前时间+延迟秒数\nRedisQueue.php\npublic function release($queue, $payload, $delay, $attempts)\n{\n    $payload = $this->setMeta($payload, 'attempts', $attempts);\n\n    $this->getConnection()->zadd($this->getQueue($queue).':delayed', $this->getTime() + $delay, $payload);\n}\n\npop方法的异常处理，发送消息通知\n$this->exceptions->report($e);\n```\n\n疑问点：\n如果redis处理过程中down掉，存在reserved中数据不会清掉","slug":"laravel_queue","published":1,"updated":"2018-08-30T10:00:53.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlhq4r0h0028qkka6gv51mip","content":"<p>php artisan queue:listen该命令通过php artisan queue:work来实现队列监听，源码中采用proc_open等相关函数实现多进程启动队列，每次启动均重启框架，所以性能上不是很高，占用的内存过大。但是在代码调试过程中可使用，每次更新队列文件的代码之后不需重新启动队列监听，即可实现队列文件的修改。</p>\n<h3 id=\"php-artisan-queue-listen\"><a href=\"#php-artisan-queue-listen\" class=\"headerlink\" title=\"php artisan queue:listen\"></a>php artisan queue:listen</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//获取相关参数，之后调用queue Listener类，实现队列监听</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fire</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">$this</span>-&gt;setListenerOptions();</span><br><span class=\"line\"></span><br><span class=\"line\">    $delay = <span class=\"keyword\">$this</span>-&gt;input-&gt;getOption(<span class=\"string\">'delay'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// The memory limit is the amount of memory we will allow the script to occupy</span></span><br><span class=\"line\">    <span class=\"comment\">// before killing it and letting a process manager restart it for us, which</span></span><br><span class=\"line\">    <span class=\"comment\">// is to protect us against any memory leaks that will be in the scripts.</span></span><br><span class=\"line\">    $memory = <span class=\"keyword\">$this</span>-&gt;input-&gt;getOption(<span class=\"string\">'memory'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    $connection = <span class=\"keyword\">$this</span>-&gt;input-&gt;getArgument(<span class=\"string\">'connection'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    $timeout = <span class=\"keyword\">$this</span>-&gt;input-&gt;getOption(<span class=\"string\">'timeout'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// We need to get the right queue for the connection which is set in the queue</span></span><br><span class=\"line\">    <span class=\"comment\">// configuration file for the application. We will pull it based on the set</span></span><br><span class=\"line\">    <span class=\"comment\">// connection being run for the queue operation currently being executed.</span></span><br><span class=\"line\">    $queue = <span class=\"keyword\">$this</span>-&gt;getQueue($connection);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">$this</span>-&gt;listener-&gt;listen(</span><br><span class=\"line\">        $connection, $queue, $delay, $memory, $timeout</span><br><span class=\"line\">    );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//创建进程，并通过无限循环调用进程</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">listen</span><span class=\"params\">($connection, $queue, $delay, $memory, $timeout = <span class=\"number\">60</span>)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    $process = <span class=\"keyword\">$this</span>-&gt;makeProcess($connection, $queue, $delay, $memory, $timeout);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;runProcess($process, $memory);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//运行进程，回调函数表示可执行运行时输出，并且每次执行时验证是否超过内存限制</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">runProcess</span><span class=\"params\">(Process $process, $memory)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    $process-&gt;run(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">($type, $line)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;handleWorkerOutput($type, $line);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Once we have run the job we'll go check if the memory limit has been</span></span><br><span class=\"line\">    <span class=\"comment\">// exceeded for the script. If it has, we will kill this script so a</span></span><br><span class=\"line\">    <span class=\"comment\">// process manager will restart this with a clean slate of memory.</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">$this</span>-&gt;memoryExceeded($memory)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;stop();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//队列实际运行的过程</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">run</span><span class=\"params\">($callback = null)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">$this</span>-&gt;start($callback);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;wait();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"php-artisan-queue-work\"><a href=\"#php-artisan-queue-work\" class=\"headerlink\" title=\"php artisan queue:work\"></a>php artisan queue:work</h3><p>省略获取参数相关的代码</p>\n<h4 id=\"第一步：获取任务前的处理\"><a href=\"#第一步：获取任务前的处理\" class=\"headerlink\" title=\"第一步：获取任务前的处理\"></a>第一步：获取任务前的处理</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如果有$daemon参数，则运行监听事件，否则只取出位于队首的元素执行</span><br><span class=\"line\">WorkCommand.php</span><br><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">runWorker</span><span class=\"params\">($connection, $queue, $delay, $memory, $daemon = false)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">$this</span>-&gt;worker-&gt;setDaemonExceptionHandler(</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;laravel[<span class=\"string\">'Illuminate\\Contracts\\Debug\\ExceptionHandler'</span>]</span><br><span class=\"line\">    );</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($daemon) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;worker-&gt;setCache(<span class=\"keyword\">$this</span>-&gt;laravel[<span class=\"string\">'cache'</span>]-&gt;driver());</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;worker-&gt;daemon(</span><br><span class=\"line\">            $connection, $queue, $delay, $memory,</span><br><span class=\"line\">            <span class=\"keyword\">$this</span>-&gt;option(<span class=\"string\">'sleep'</span>), <span class=\"keyword\">$this</span>-&gt;option(<span class=\"string\">'tries'</span>)</span><br><span class=\"line\">        );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;worker-&gt;pop(</span><br><span class=\"line\">        $connection, $queue, $delay,</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;option(<span class=\"string\">'sleep'</span>), <span class=\"keyword\">$this</span>-&gt;option(<span class=\"string\">'tries'</span>)</span><br><span class=\"line\">    );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">workr pop方法的代码，取出下一个元素之后运行，完成之后调用sleep方法</span><br><span class=\"line\">Work.php</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">pop</span><span class=\"params\">($connectionName, $queue = null, $delay = <span class=\"number\">0</span>, $sleep = <span class=\"number\">3</span>, $maxTries = <span class=\"number\">0</span>)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        $connection = <span class=\"keyword\">$this</span>-&gt;manager-&gt;connection($connectionName);</span><br><span class=\"line\"></span><br><span class=\"line\">        $job = <span class=\"keyword\">$this</span>-&gt;getNextJob($connection, $queue);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// If we're able to pull a job off of the stack, we will process it and</span></span><br><span class=\"line\">        <span class=\"comment\">// then immediately return back out. If there is no job on the queue</span></span><br><span class=\"line\">        <span class=\"comment\">// we will \"sleep\" the worker for the specified number of seconds.</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (! is_null($job)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;process(</span><br><span class=\"line\">                <span class=\"keyword\">$this</span>-&gt;manager-&gt;getName($connectionName), $job, $maxTries, $delay</span><br><span class=\"line\">            );</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (<span class=\"keyword\">Exception</span> $e) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">$this</span>-&gt;exceptions) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">$this</span>-&gt;exceptions-&gt;report($e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (Throwable $e) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">$this</span>-&gt;exceptions) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">$this</span>-&gt;exceptions-&gt;report(<span class=\"keyword\">new</span> FatalThrowableError($e));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">$this</span>-&gt;sleep($sleep);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> [<span class=\"string\">'job'</span> =&gt; <span class=\"keyword\">null</span>, <span class=\"string\">'failed'</span> =&gt; <span class=\"keyword\">false</span>];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">队列容器采用redis时，$connection使用redis连接</span><br><span class=\"line\">没有指定queue名称时，取默认的连接<span class=\"keyword\">default</span></span><br><span class=\"line\">如果指定队列名称，则用逗号分隔，按顺序取出所有数据</span><br><span class=\"line\">Worker.php</span><br><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getNextJob</span><span class=\"params\">($connection, $queue)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (is_null($queue)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> $connection-&gt;pop();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">foreach</span> (explode(<span class=\"string\">','</span>, $queue) <span class=\"keyword\">as</span> $queue) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (! is_null($job = $connection-&gt;pop($queue))) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> $job;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">从redis中取出队列数据</span><br><span class=\"line\"><span class=\"number\">1.</span>首先将队列每次执行时检查所有的过期或执行中的任务，将其从有序集合中删除，同时重新推入到队列的末尾</span><br><span class=\"line\"><span class=\"number\">2.</span>再取出队列头部的数据，并从redis中删除，之后添加到名称为$queue:reserved的有序集合中，表示该条数据正在处理中，过期时间为当前时间+redis的过期时间</span><br><span class=\"line\">(每次检查时比较当前时间和这条数据的分值来判断是否过期，如果大于该分值，则表示已经过期，会进行过期处理，重新调回<span class=\"number\">1</span>步骤)</span><br><span class=\"line\">RedisQueue.php</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">pop</span><span class=\"params\">($queue = null)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    $original = $queue ?: <span class=\"keyword\">$this</span>-&gt;default;</span><br><span class=\"line\"></span><br><span class=\"line\">    $queue = <span class=\"keyword\">$this</span>-&gt;getQueue($queue);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (! is_null(<span class=\"keyword\">$this</span>-&gt;expire)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;migrateAllExpiredJobs($queue);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    $job = <span class=\"keyword\">$this</span>-&gt;getConnection()-&gt;lpop($queue);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (! is_null($job)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;getConnection()-&gt;zadd($queue.<span class=\"string\">':reserved'</span>, <span class=\"keyword\">$this</span>-&gt;getTime() + <span class=\"keyword\">$this</span>-&gt;expire, $job);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> RedisJob(<span class=\"keyword\">$this</span>-&gt;container, <span class=\"keyword\">$this</span>, $job, $original);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>处理异常数据<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">移除redis键为$queue:delayed和$queue:reserved名称的数据</span><br><span class=\"line\">RedisQueue.php</span><br><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">migrateAllExpiredJobs</span><span class=\"params\">($queue)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">$this</span>-&gt;migrateExpiredJobs($queue.<span class=\"string\">':delayed'</span>, $queue);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">$this</span>-&gt;migrateExpiredJobs($queue.<span class=\"string\">':reserved'</span>, $queue);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">取出所有过期的任务，如果数量大于<span class=\"number\">0</span>，则去掉，然后将任务推入到新的队列</span><br><span class=\"line\"><span class=\"keyword\">$this</span>-&gt;getConnection()为Predis\\Client类，通过他启动事务，同时对redis的键为$queue:reserved进行监听，取出所有超时任务进行删除，并将这些任务推入到队列尾部</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">migrateExpiredJobs</span><span class=\"params\">($from, $to)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    $options = [<span class=\"string\">'cas'</span> =&gt; <span class=\"keyword\">true</span>, <span class=\"string\">'watch'</span> =&gt; $from, <span class=\"string\">'retry'</span> =&gt; <span class=\"number\">10</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">$this</span>-&gt;getConnection()-&gt;transaction($options, <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">($transaction)</span> <span class=\"title\">use</span> <span class=\"params\">($from, $to)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// First we need to get all of jobs that have expired based on the current time</span></span><br><span class=\"line\">        <span class=\"comment\">// so that we can push them onto the main queue. After we get them we simply</span></span><br><span class=\"line\">        <span class=\"comment\">// remove them from this \"delay\" queues. All of this within a transaction.</span></span><br><span class=\"line\">        $jobs = <span class=\"keyword\">$this</span>-&gt;getExpiredJobs(</span><br><span class=\"line\">            $transaction, $from, $time = <span class=\"keyword\">$this</span>-&gt;getTime()</span><br><span class=\"line\">        );</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// If we actually found any jobs, we will remove them from the old queue and we</span></span><br><span class=\"line\">        <span class=\"comment\">// will insert them onto the new (ready) \"queue\". This means they will stand</span></span><br><span class=\"line\">        <span class=\"comment\">// ready to be processed by the queue worker whenever their turn comes up.</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (count($jobs) &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">$this</span>-&gt;removeExpiredJobs($transaction, $from, $time);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">$this</span>-&gt;pushExpiredJobsOntoNewQueue($transaction, $to, $jobs);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$from为队列的键，$time是当前时间，取出有序集合中分数最小值到分数为当前时间的所有数据</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getExpiredJobs</span><span class=\"params\">($transaction, $from, $time)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> $transaction-&gt;zrangebyscore($from, <span class=\"string\">'-inf'</span>, $time);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">removeExpiredJobs</span><span class=\"params\">($transaction, $from, $time)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    $transaction-&gt;multi();</span><br><span class=\"line\"></span><br><span class=\"line\">    $transaction-&gt;zremrangebyscore($from, <span class=\"string\">'-inf'</span>, $time);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">pushExpiredJobsOntoNewQueue</span><span class=\"params\">($transaction, $to, $jobs)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    call_user_func_array([$transaction, <span class=\"string\">'rpush'</span>], array_merge([$to], $jobs));</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"第二步：处理任务\"><a href=\"#第二步：处理任务\" class=\"headerlink\" title=\"第二步：处理任务\"></a>第二步：处理任务</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">回到取出队列数据后运行的代码</span><br><span class=\"line\">先验证是否设置了最大尝试次数，如果任务记录的尝试次数大于最大尝试次数，则</span><br><span class=\"line\">Work.php</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">process</span><span class=\"params\">($connection, Job $job, $maxTries = <span class=\"number\">0</span>, $delay = <span class=\"number\">0</span>)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($maxTries &gt; <span class=\"number\">0</span> &amp;&amp; $job-&gt;attempts() &gt; $maxTries) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;logFailedJob($connection, $job);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// First we will fire off the job. Once it is done we will see if it will</span></span><br><span class=\"line\">        <span class=\"comment\">// be auto-deleted after processing and if so we will go ahead and run</span></span><br><span class=\"line\">        <span class=\"comment\">// the delete method on the job. Otherwise we will just keep moving.</span></span><br><span class=\"line\">        $job-&gt;fire();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;raiseAfterJobEvent($connection, $job);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> [<span class=\"string\">'job'</span> =&gt; $job, <span class=\"string\">'failed'</span> =&gt; <span class=\"keyword\">false</span>];</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (<span class=\"keyword\">Exception</span> $e) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// If we catch an exception, we will attempt to release the job back onto</span></span><br><span class=\"line\">        <span class=\"comment\">// the queue so it is not lost. This will let is be retried at a later</span></span><br><span class=\"line\">        <span class=\"comment\">// time by another listener (or the same one). We will do that here.</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (! $job-&gt;isDeleted()) &#123;</span><br><span class=\"line\">            $job-&gt;release($delay);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">throw</span> $e;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (Throwable $e) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (! $job-&gt;isDeleted()) &#123;</span><br><span class=\"line\">            $job-&gt;release($delay);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">throw</span> $e;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>尝试次数过多处理</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">记录失败日志，如果设置了failer处理器，则失败日志</span><br><span class=\"line\">Work.php</span><br><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">logFailedJob</span><span class=\"params\">($connection, Job $job)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">$this</span>-&gt;failer) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;failer-&gt;log($connection, $job-&gt;getQueue(), $job-&gt;getRawBody());</span><br><span class=\"line\"></span><br><span class=\"line\">        $job-&gt;delete();</span><br><span class=\"line\"></span><br><span class=\"line\">        $job-&gt;failed();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;raiseFailedJobEvent($connection, $job);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> [<span class=\"string\">'job'</span> =&gt; $job, <span class=\"string\">'failed'</span> =&gt; <span class=\"keyword\">true</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">插入当前时间的一条失败记录，payload为任务体，记录名称、连接等信息</span><br><span class=\"line\">DatabaseFailedJobProvider.php</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">log</span><span class=\"params\">($connection, $queue, $payload)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    $failed_at = Carbon::now();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">$this</span>-&gt;getTable()-&gt;insert(compact(<span class=\"string\">'connection'</span>, <span class=\"string\">'queue'</span>, <span class=\"string\">'payload'</span>, <span class=\"string\">'failed_at'</span>));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">RedisJob.php</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">delete</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">parent</span>::delete();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">$this</span>-&gt;redis-&gt;deleteReserved(<span class=\"keyword\">$this</span>-&gt;queue, <span class=\"keyword\">$this</span>-&gt;job);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">由于上一步把每次处理的数据都从$queue中取出，放入$queue:reserved中，所以此处将该值从$queue:reserved中删除</span><br><span class=\"line\">RedisQueue</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">deleteReserved</span><span class=\"params\">($queue, $job)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">$this</span>-&gt;getConnection()-&gt;zrem(<span class=\"keyword\">$this</span>-&gt;getQueue($queue).<span class=\"string\">':reserved'</span>, $job);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">取出job，转换成对象CallQueuedHandler，调用failed方法，传入的值为任务的实体(也就是自己写的队列类)</span><br><span class=\"line\">Job.php</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">failed</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    $payload = json_decode(<span class=\"keyword\">$this</span>-&gt;getRawBody(), <span class=\"keyword\">true</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">list</span>($class, $method) = <span class=\"keyword\">$this</span>-&gt;parseJob($payload[<span class=\"string\">'job'</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">$this</span>-&gt;instance = <span class=\"keyword\">$this</span>-&gt;resolve($class);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (method_exists(<span class=\"keyword\">$this</span>-&gt;instance, <span class=\"string\">'failed'</span>)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;instance-&gt;failed(<span class=\"keyword\">$this</span>-&gt;resolveQueueableEntities($payload[<span class=\"string\">'data'</span>]));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">调用任务类的failed方法</span><br><span class=\"line\">CallQueuedHandler.php</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">failed</span><span class=\"params\">(array $data)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    $handler = <span class=\"keyword\">$this</span>-&gt;dispatcher-&gt;resolveHandler($command = unserialize($data[<span class=\"string\">'command'</span>]));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (method_exists($handler, <span class=\"string\">'failed'</span>)) &#123;</span><br><span class=\"line\">        call_user_func([$handler, <span class=\"string\">'failed'</span>], $command);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>任务处理</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">队列数据例如：</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">\"job\"</span>: <span class=\"string\">\"Illuminate\\\\Queue\\\\CallQueuedHandler@call\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"data\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">\"command\"</span>: <span class=\"string\">\"O:24:\\\"App\\\\Commands\\\\TestCommand\\\":1:&#123;s:12:\\\"\\u0000*\\u0000requestNo\\\";i:18;&#125;\"</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"string\">\"id\"</span>: <span class=\"string\">\"P5nKwZs2LNSjOFBlVCPyvdK7jAAHCi3U\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"attempts\"</span>: <span class=\"number\">1</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">job为队列处理的程序，data为要处理的数据(自己写的队列文件)，attempts为处理次数，推入队列时即为<span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">回到队列处理的process方法中，该方法调用fire()方法</span><br><span class=\"line\">RedisJob.php</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fire</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">$this</span>-&gt;resolveAndFire(json_decode(<span class=\"keyword\">$this</span>-&gt;getRawBody(), <span class=\"keyword\">true</span>));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">resolveAndFire</span><span class=\"params\">(array $payload)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">list</span>($class, $method) = <span class=\"keyword\">$this</span>-&gt;parseJob($payload[<span class=\"string\">'job'</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">$this</span>-&gt;instance = <span class=\"keyword\">$this</span>-&gt;resolve($class);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">$this</span>-&gt;instance-&gt;&#123;$method&#125;(<span class=\"keyword\">$this</span>, <span class=\"keyword\">$this</span>-&gt;resolveQueueableEntities($payload[<span class=\"string\">'data'</span>]));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">通过@分割类和方法，调用CallQueuedHandler的call方法处理队列</span><br><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">parseJob</span><span class=\"params\">($job)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    $segments = explode(<span class=\"string\">'@'</span>, $job);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> count($segments) &gt; <span class=\"number\">1</span> ? $segments : [$segments[<span class=\"number\">0</span>], <span class=\"string\">'fire'</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">调用call方法，取出队列任务$command，调用Dispatch类的dispatchNow方法处理任务</span><br><span class=\"line\">CallQueuedHandler.php</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">call</span><span class=\"params\">(Job $job, array $data)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    $command = <span class=\"keyword\">$this</span>-&gt;setJobInstanceIfNecessary(</span><br><span class=\"line\">        $job, unserialize($data[<span class=\"string\">'command'</span>])</span><br><span class=\"line\">    );</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">$this</span>-&gt;dispatcher-&gt;dispatchNow($command, <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">($handler)</span> <span class=\"title\">use</span> <span class=\"params\">($job)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;setJobInstanceIfNecessary($job, $handler);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (! $job-&gt;isDeletedOrReleased()) &#123;</span><br><span class=\"line\">        $job-&gt;delete();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">队列类继承了SelfHandling接口，可以直接执行handle方法，afterResolving匿名函数貌似没有执行</span><br><span class=\"line\">Dispatch.php</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">dispatchNow</span><span class=\"params\">($command, Closure $afterResolving = null)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;pipeline-&gt;send($command)-&gt;through(<span class=\"keyword\">$this</span>-&gt;pipes)-&gt;then(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">($command)</span> <span class=\"title\">use</span> <span class=\"params\">($afterResolving)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ($command <span class=\"keyword\">instanceof</span> SelfHandling) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;container-&gt;call([$command, <span class=\"string\">'handle'</span>]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        $handler = <span class=\"keyword\">$this</span>-&gt;resolveHandler($command);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> ($afterResolving) &#123;</span><br><span class=\"line\">            call_user_func($afterResolving, $handler);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> call_user_func(</span><br><span class=\"line\">            [$handler, <span class=\"keyword\">$this</span>-&gt;getHandlerMethod($command)], $command</span><br><span class=\"line\">        );</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">进入Container类的call方法，执行getMethodDependencies方法获取类的所有依赖，然后通过call_user_func_array函数调用[$command, <span class=\"string\">'handle'</span>]方法，参数为获取到的依赖对象</span><br><span class=\"line\">Container.php</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">call</span><span class=\"params\">($callback, array $parameters = [], $defaultMethod = null)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">$this</span>-&gt;isCallableWithAtSign($callback) || $defaultMethod) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;callClass($callback, $parameters, $defaultMethod);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    $dependencies = <span class=\"keyword\">$this</span>-&gt;getMethodDependencies($callback, $parameters);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> call_user_func_array($callback, $dependencies);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">通过反射获取匿名函数的所有依赖</span><br><span class=\"line\">Container.php</span><br><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getMethodDependencies</span><span class=\"params\">($callback, array $parameters = [])</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    $dependencies = [];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">foreach</span> (<span class=\"keyword\">$this</span>-&gt;getCallReflector($callback)-&gt;getParameters() <span class=\"keyword\">as</span> $key =&gt; $parameter) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;addDependencyForCallParameter($parameter, $parameters, $dependencies);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> array_merge($dependencies, $parameters);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>执行完成后删除</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">回到$job-&gt;isDeletedOrReleased(),此处将队列任务删除</span><br><span class=\"line\"></span><br><span class=\"line\">RedisJob.php</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isDeletedOrReleased</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;isDeleted() || <span class=\"keyword\">$this</span>-&gt;isReleased();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">RedisJob.php</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">delete</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">parent</span>::delete();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">$this</span>-&gt;redis-&gt;deleteReserved(<span class=\"keyword\">$this</span>-&gt;queue, <span class=\"keyword\">$this</span>-&gt;job);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">将任务从redis为$queue:reserved的列表中删除，此处队列正常处理即为完成</span><br><span class=\"line\">RedisQueue.php</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">deleteReserved</span><span class=\"params\">($queue, $job)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">$this</span>-&gt;getConnection()-&gt;zrem(<span class=\"keyword\">$this</span>-&gt;getQueue($queue).<span class=\"string\">':reserved'</span>, $job);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>触发处理后的事件illuminate.queue.after<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">激活illuminate.queue.after事件，参数为redis连接，任务，还有任务类</span><br><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">raiseAfterJobEvent</span><span class=\"params\">($connection, Job $job)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">$this</span>-&gt;events) &#123;</span><br><span class=\"line\">        $data = json_decode($job-&gt;getRawBody(), <span class=\"keyword\">true</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;events-&gt;fire(<span class=\"string\">'illuminate.queue.after'</span>, [$connection, $job, $data]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">在AppServiceProvider.php中注册illuminate.queue.after事件</span><br><span class=\"line\">Queue::after(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">($connection, $job, $data)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 写日志</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"异常处理\"><a href=\"#异常处理\" class=\"headerlink\" title=\"异常处理\"></a>异常处理</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">首先看process方法的异常，抛出异常后执行$job-&gt;release($delay)方法，RedisJob::delete()方法为上面分析的删除方法，此处会把$queue:reserved的值删除。也就是说队列会把正在处理的任务放到delayed队列中。</span><br><span class=\"line\">设置延迟时间为参数中的--delay参数，</span><br><span class=\"line\">RedisJob.php</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">release</span><span class=\"params\">($delay = <span class=\"number\">0</span>)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">parent</span>::release($delay);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">$this</span>-&gt;delete();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">$this</span>-&gt;redis-&gt;release(<span class=\"keyword\">$this</span>-&gt;queue, <span class=\"keyword\">$this</span>-&gt;job, $delay, <span class=\"keyword\">$this</span>-&gt;attempts() + <span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">设置当前任务的的attempts次数+<span class=\"number\">1</span>，同时添加到$queue:delayed的队列中，超时时间为当前时间+延迟秒数</span><br><span class=\"line\">RedisQueue.php</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">release</span><span class=\"params\">($queue, $payload, $delay, $attempts)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    $payload = <span class=\"keyword\">$this</span>-&gt;setMeta($payload, <span class=\"string\">'attempts'</span>, $attempts);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">$this</span>-&gt;getConnection()-&gt;zadd(<span class=\"keyword\">$this</span>-&gt;getQueue($queue).<span class=\"string\">':delayed'</span>, <span class=\"keyword\">$this</span>-&gt;getTime() + $delay, $payload);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">pop方法的异常处理，发送消息通知</span><br><span class=\"line\"><span class=\"keyword\">$this</span>-&gt;exceptions-&gt;report($e);</span><br></pre></td></tr></table></figure>\n<p>疑问点：<br>如果redis处理过程中down掉，存在reserved中数据不会清掉</p>\n","site":{"data":{}},"excerpt":"","more":"<p>php artisan queue:listen该命令通过php artisan queue:work来实现队列监听，源码中采用proc_open等相关函数实现多进程启动队列，每次启动均重启框架，所以性能上不是很高，占用的内存过大。但是在代码调试过程中可使用，每次更新队列文件的代码之后不需重新启动队列监听，即可实现队列文件的修改。</p>\n<h3 id=\"php-artisan-queue-listen\"><a href=\"#php-artisan-queue-listen\" class=\"headerlink\" title=\"php artisan queue:listen\"></a>php artisan queue:listen</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//获取相关参数，之后调用queue Listener类，实现队列监听</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fire</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">$this</span>-&gt;setListenerOptions();</span><br><span class=\"line\"></span><br><span class=\"line\">    $delay = <span class=\"keyword\">$this</span>-&gt;input-&gt;getOption(<span class=\"string\">'delay'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// The memory limit is the amount of memory we will allow the script to occupy</span></span><br><span class=\"line\">    <span class=\"comment\">// before killing it and letting a process manager restart it for us, which</span></span><br><span class=\"line\">    <span class=\"comment\">// is to protect us against any memory leaks that will be in the scripts.</span></span><br><span class=\"line\">    $memory = <span class=\"keyword\">$this</span>-&gt;input-&gt;getOption(<span class=\"string\">'memory'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    $connection = <span class=\"keyword\">$this</span>-&gt;input-&gt;getArgument(<span class=\"string\">'connection'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    $timeout = <span class=\"keyword\">$this</span>-&gt;input-&gt;getOption(<span class=\"string\">'timeout'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// We need to get the right queue for the connection which is set in the queue</span></span><br><span class=\"line\">    <span class=\"comment\">// configuration file for the application. We will pull it based on the set</span></span><br><span class=\"line\">    <span class=\"comment\">// connection being run for the queue operation currently being executed.</span></span><br><span class=\"line\">    $queue = <span class=\"keyword\">$this</span>-&gt;getQueue($connection);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">$this</span>-&gt;listener-&gt;listen(</span><br><span class=\"line\">        $connection, $queue, $delay, $memory, $timeout</span><br><span class=\"line\">    );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//创建进程，并通过无限循环调用进程</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">listen</span><span class=\"params\">($connection, $queue, $delay, $memory, $timeout = <span class=\"number\">60</span>)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    $process = <span class=\"keyword\">$this</span>-&gt;makeProcess($connection, $queue, $delay, $memory, $timeout);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;runProcess($process, $memory);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//运行进程，回调函数表示可执行运行时输出，并且每次执行时验证是否超过内存限制</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">runProcess</span><span class=\"params\">(Process $process, $memory)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    $process-&gt;run(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">($type, $line)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;handleWorkerOutput($type, $line);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Once we have run the job we'll go check if the memory limit has been</span></span><br><span class=\"line\">    <span class=\"comment\">// exceeded for the script. If it has, we will kill this script so a</span></span><br><span class=\"line\">    <span class=\"comment\">// process manager will restart this with a clean slate of memory.</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">$this</span>-&gt;memoryExceeded($memory)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;stop();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//队列实际运行的过程</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">run</span><span class=\"params\">($callback = null)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">$this</span>-&gt;start($callback);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;wait();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"php-artisan-queue-work\"><a href=\"#php-artisan-queue-work\" class=\"headerlink\" title=\"php artisan queue:work\"></a>php artisan queue:work</h3><p>省略获取参数相关的代码</p>\n<h4 id=\"第一步：获取任务前的处理\"><a href=\"#第一步：获取任务前的处理\" class=\"headerlink\" title=\"第一步：获取任务前的处理\"></a>第一步：获取任务前的处理</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如果有$daemon参数，则运行监听事件，否则只取出位于队首的元素执行</span><br><span class=\"line\">WorkCommand.php</span><br><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">runWorker</span><span class=\"params\">($connection, $queue, $delay, $memory, $daemon = false)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">$this</span>-&gt;worker-&gt;setDaemonExceptionHandler(</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;laravel[<span class=\"string\">'Illuminate\\Contracts\\Debug\\ExceptionHandler'</span>]</span><br><span class=\"line\">    );</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($daemon) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;worker-&gt;setCache(<span class=\"keyword\">$this</span>-&gt;laravel[<span class=\"string\">'cache'</span>]-&gt;driver());</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;worker-&gt;daemon(</span><br><span class=\"line\">            $connection, $queue, $delay, $memory,</span><br><span class=\"line\">            <span class=\"keyword\">$this</span>-&gt;option(<span class=\"string\">'sleep'</span>), <span class=\"keyword\">$this</span>-&gt;option(<span class=\"string\">'tries'</span>)</span><br><span class=\"line\">        );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;worker-&gt;pop(</span><br><span class=\"line\">        $connection, $queue, $delay,</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;option(<span class=\"string\">'sleep'</span>), <span class=\"keyword\">$this</span>-&gt;option(<span class=\"string\">'tries'</span>)</span><br><span class=\"line\">    );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">workr pop方法的代码，取出下一个元素之后运行，完成之后调用sleep方法</span><br><span class=\"line\">Work.php</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">pop</span><span class=\"params\">($connectionName, $queue = null, $delay = <span class=\"number\">0</span>, $sleep = <span class=\"number\">3</span>, $maxTries = <span class=\"number\">0</span>)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        $connection = <span class=\"keyword\">$this</span>-&gt;manager-&gt;connection($connectionName);</span><br><span class=\"line\"></span><br><span class=\"line\">        $job = <span class=\"keyword\">$this</span>-&gt;getNextJob($connection, $queue);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// If we're able to pull a job off of the stack, we will process it and</span></span><br><span class=\"line\">        <span class=\"comment\">// then immediately return back out. If there is no job on the queue</span></span><br><span class=\"line\">        <span class=\"comment\">// we will \"sleep\" the worker for the specified number of seconds.</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (! is_null($job)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;process(</span><br><span class=\"line\">                <span class=\"keyword\">$this</span>-&gt;manager-&gt;getName($connectionName), $job, $maxTries, $delay</span><br><span class=\"line\">            );</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (<span class=\"keyword\">Exception</span> $e) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">$this</span>-&gt;exceptions) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">$this</span>-&gt;exceptions-&gt;report($e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (Throwable $e) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">$this</span>-&gt;exceptions) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">$this</span>-&gt;exceptions-&gt;report(<span class=\"keyword\">new</span> FatalThrowableError($e));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">$this</span>-&gt;sleep($sleep);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> [<span class=\"string\">'job'</span> =&gt; <span class=\"keyword\">null</span>, <span class=\"string\">'failed'</span> =&gt; <span class=\"keyword\">false</span>];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">队列容器采用redis时，$connection使用redis连接</span><br><span class=\"line\">没有指定queue名称时，取默认的连接<span class=\"keyword\">default</span></span><br><span class=\"line\">如果指定队列名称，则用逗号分隔，按顺序取出所有数据</span><br><span class=\"line\">Worker.php</span><br><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getNextJob</span><span class=\"params\">($connection, $queue)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (is_null($queue)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> $connection-&gt;pop();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">foreach</span> (explode(<span class=\"string\">','</span>, $queue) <span class=\"keyword\">as</span> $queue) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (! is_null($job = $connection-&gt;pop($queue))) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> $job;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">从redis中取出队列数据</span><br><span class=\"line\"><span class=\"number\">1.</span>首先将队列每次执行时检查所有的过期或执行中的任务，将其从有序集合中删除，同时重新推入到队列的末尾</span><br><span class=\"line\"><span class=\"number\">2.</span>再取出队列头部的数据，并从redis中删除，之后添加到名称为$queue:reserved的有序集合中，表示该条数据正在处理中，过期时间为当前时间+redis的过期时间</span><br><span class=\"line\">(每次检查时比较当前时间和这条数据的分值来判断是否过期，如果大于该分值，则表示已经过期，会进行过期处理，重新调回<span class=\"number\">1</span>步骤)</span><br><span class=\"line\">RedisQueue.php</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">pop</span><span class=\"params\">($queue = null)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    $original = $queue ?: <span class=\"keyword\">$this</span>-&gt;default;</span><br><span class=\"line\"></span><br><span class=\"line\">    $queue = <span class=\"keyword\">$this</span>-&gt;getQueue($queue);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (! is_null(<span class=\"keyword\">$this</span>-&gt;expire)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;migrateAllExpiredJobs($queue);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    $job = <span class=\"keyword\">$this</span>-&gt;getConnection()-&gt;lpop($queue);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (! is_null($job)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;getConnection()-&gt;zadd($queue.<span class=\"string\">':reserved'</span>, <span class=\"keyword\">$this</span>-&gt;getTime() + <span class=\"keyword\">$this</span>-&gt;expire, $job);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> RedisJob(<span class=\"keyword\">$this</span>-&gt;container, <span class=\"keyword\">$this</span>, $job, $original);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>处理异常数据<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">移除redis键为$queue:delayed和$queue:reserved名称的数据</span><br><span class=\"line\">RedisQueue.php</span><br><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">migrateAllExpiredJobs</span><span class=\"params\">($queue)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">$this</span>-&gt;migrateExpiredJobs($queue.<span class=\"string\">':delayed'</span>, $queue);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">$this</span>-&gt;migrateExpiredJobs($queue.<span class=\"string\">':reserved'</span>, $queue);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">取出所有过期的任务，如果数量大于<span class=\"number\">0</span>，则去掉，然后将任务推入到新的队列</span><br><span class=\"line\"><span class=\"keyword\">$this</span>-&gt;getConnection()为Predis\\Client类，通过他启动事务，同时对redis的键为$queue:reserved进行监听，取出所有超时任务进行删除，并将这些任务推入到队列尾部</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">migrateExpiredJobs</span><span class=\"params\">($from, $to)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    $options = [<span class=\"string\">'cas'</span> =&gt; <span class=\"keyword\">true</span>, <span class=\"string\">'watch'</span> =&gt; $from, <span class=\"string\">'retry'</span> =&gt; <span class=\"number\">10</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">$this</span>-&gt;getConnection()-&gt;transaction($options, <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">($transaction)</span> <span class=\"title\">use</span> <span class=\"params\">($from, $to)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// First we need to get all of jobs that have expired based on the current time</span></span><br><span class=\"line\">        <span class=\"comment\">// so that we can push them onto the main queue. After we get them we simply</span></span><br><span class=\"line\">        <span class=\"comment\">// remove them from this \"delay\" queues. All of this within a transaction.</span></span><br><span class=\"line\">        $jobs = <span class=\"keyword\">$this</span>-&gt;getExpiredJobs(</span><br><span class=\"line\">            $transaction, $from, $time = <span class=\"keyword\">$this</span>-&gt;getTime()</span><br><span class=\"line\">        );</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// If we actually found any jobs, we will remove them from the old queue and we</span></span><br><span class=\"line\">        <span class=\"comment\">// will insert them onto the new (ready) \"queue\". This means they will stand</span></span><br><span class=\"line\">        <span class=\"comment\">// ready to be processed by the queue worker whenever their turn comes up.</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (count($jobs) &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">$this</span>-&gt;removeExpiredJobs($transaction, $from, $time);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">$this</span>-&gt;pushExpiredJobsOntoNewQueue($transaction, $to, $jobs);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$from为队列的键，$time是当前时间，取出有序集合中分数最小值到分数为当前时间的所有数据</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getExpiredJobs</span><span class=\"params\">($transaction, $from, $time)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> $transaction-&gt;zrangebyscore($from, <span class=\"string\">'-inf'</span>, $time);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">removeExpiredJobs</span><span class=\"params\">($transaction, $from, $time)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    $transaction-&gt;multi();</span><br><span class=\"line\"></span><br><span class=\"line\">    $transaction-&gt;zremrangebyscore($from, <span class=\"string\">'-inf'</span>, $time);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">pushExpiredJobsOntoNewQueue</span><span class=\"params\">($transaction, $to, $jobs)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    call_user_func_array([$transaction, <span class=\"string\">'rpush'</span>], array_merge([$to], $jobs));</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"第二步：处理任务\"><a href=\"#第二步：处理任务\" class=\"headerlink\" title=\"第二步：处理任务\"></a>第二步：处理任务</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">回到取出队列数据后运行的代码</span><br><span class=\"line\">先验证是否设置了最大尝试次数，如果任务记录的尝试次数大于最大尝试次数，则</span><br><span class=\"line\">Work.php</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">process</span><span class=\"params\">($connection, Job $job, $maxTries = <span class=\"number\">0</span>, $delay = <span class=\"number\">0</span>)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($maxTries &gt; <span class=\"number\">0</span> &amp;&amp; $job-&gt;attempts() &gt; $maxTries) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;logFailedJob($connection, $job);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// First we will fire off the job. Once it is done we will see if it will</span></span><br><span class=\"line\">        <span class=\"comment\">// be auto-deleted after processing and if so we will go ahead and run</span></span><br><span class=\"line\">        <span class=\"comment\">// the delete method on the job. Otherwise we will just keep moving.</span></span><br><span class=\"line\">        $job-&gt;fire();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;raiseAfterJobEvent($connection, $job);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> [<span class=\"string\">'job'</span> =&gt; $job, <span class=\"string\">'failed'</span> =&gt; <span class=\"keyword\">false</span>];</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (<span class=\"keyword\">Exception</span> $e) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// If we catch an exception, we will attempt to release the job back onto</span></span><br><span class=\"line\">        <span class=\"comment\">// the queue so it is not lost. This will let is be retried at a later</span></span><br><span class=\"line\">        <span class=\"comment\">// time by another listener (or the same one). We will do that here.</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (! $job-&gt;isDeleted()) &#123;</span><br><span class=\"line\">            $job-&gt;release($delay);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">throw</span> $e;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (Throwable $e) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (! $job-&gt;isDeleted()) &#123;</span><br><span class=\"line\">            $job-&gt;release($delay);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">throw</span> $e;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>尝试次数过多处理</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">记录失败日志，如果设置了failer处理器，则失败日志</span><br><span class=\"line\">Work.php</span><br><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">logFailedJob</span><span class=\"params\">($connection, Job $job)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">$this</span>-&gt;failer) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;failer-&gt;log($connection, $job-&gt;getQueue(), $job-&gt;getRawBody());</span><br><span class=\"line\"></span><br><span class=\"line\">        $job-&gt;delete();</span><br><span class=\"line\"></span><br><span class=\"line\">        $job-&gt;failed();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;raiseFailedJobEvent($connection, $job);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> [<span class=\"string\">'job'</span> =&gt; $job, <span class=\"string\">'failed'</span> =&gt; <span class=\"keyword\">true</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">插入当前时间的一条失败记录，payload为任务体，记录名称、连接等信息</span><br><span class=\"line\">DatabaseFailedJobProvider.php</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">log</span><span class=\"params\">($connection, $queue, $payload)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    $failed_at = Carbon::now();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">$this</span>-&gt;getTable()-&gt;insert(compact(<span class=\"string\">'connection'</span>, <span class=\"string\">'queue'</span>, <span class=\"string\">'payload'</span>, <span class=\"string\">'failed_at'</span>));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">RedisJob.php</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">delete</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">parent</span>::delete();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">$this</span>-&gt;redis-&gt;deleteReserved(<span class=\"keyword\">$this</span>-&gt;queue, <span class=\"keyword\">$this</span>-&gt;job);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">由于上一步把每次处理的数据都从$queue中取出，放入$queue:reserved中，所以此处将该值从$queue:reserved中删除</span><br><span class=\"line\">RedisQueue</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">deleteReserved</span><span class=\"params\">($queue, $job)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">$this</span>-&gt;getConnection()-&gt;zrem(<span class=\"keyword\">$this</span>-&gt;getQueue($queue).<span class=\"string\">':reserved'</span>, $job);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">取出job，转换成对象CallQueuedHandler，调用failed方法，传入的值为任务的实体(也就是自己写的队列类)</span><br><span class=\"line\">Job.php</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">failed</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    $payload = json_decode(<span class=\"keyword\">$this</span>-&gt;getRawBody(), <span class=\"keyword\">true</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">list</span>($class, $method) = <span class=\"keyword\">$this</span>-&gt;parseJob($payload[<span class=\"string\">'job'</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">$this</span>-&gt;instance = <span class=\"keyword\">$this</span>-&gt;resolve($class);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (method_exists(<span class=\"keyword\">$this</span>-&gt;instance, <span class=\"string\">'failed'</span>)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;instance-&gt;failed(<span class=\"keyword\">$this</span>-&gt;resolveQueueableEntities($payload[<span class=\"string\">'data'</span>]));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">调用任务类的failed方法</span><br><span class=\"line\">CallQueuedHandler.php</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">failed</span><span class=\"params\">(array $data)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    $handler = <span class=\"keyword\">$this</span>-&gt;dispatcher-&gt;resolveHandler($command = unserialize($data[<span class=\"string\">'command'</span>]));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (method_exists($handler, <span class=\"string\">'failed'</span>)) &#123;</span><br><span class=\"line\">        call_user_func([$handler, <span class=\"string\">'failed'</span>], $command);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>任务处理</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">队列数据例如：</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">\"job\"</span>: <span class=\"string\">\"Illuminate\\\\Queue\\\\CallQueuedHandler@call\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"data\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">\"command\"</span>: <span class=\"string\">\"O:24:\\\"App\\\\Commands\\\\TestCommand\\\":1:&#123;s:12:\\\"\\u0000*\\u0000requestNo\\\";i:18;&#125;\"</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"string\">\"id\"</span>: <span class=\"string\">\"P5nKwZs2LNSjOFBlVCPyvdK7jAAHCi3U\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"attempts\"</span>: <span class=\"number\">1</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">job为队列处理的程序，data为要处理的数据(自己写的队列文件)，attempts为处理次数，推入队列时即为<span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">回到队列处理的process方法中，该方法调用fire()方法</span><br><span class=\"line\">RedisJob.php</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fire</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">$this</span>-&gt;resolveAndFire(json_decode(<span class=\"keyword\">$this</span>-&gt;getRawBody(), <span class=\"keyword\">true</span>));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">resolveAndFire</span><span class=\"params\">(array $payload)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">list</span>($class, $method) = <span class=\"keyword\">$this</span>-&gt;parseJob($payload[<span class=\"string\">'job'</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">$this</span>-&gt;instance = <span class=\"keyword\">$this</span>-&gt;resolve($class);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">$this</span>-&gt;instance-&gt;&#123;$method&#125;(<span class=\"keyword\">$this</span>, <span class=\"keyword\">$this</span>-&gt;resolveQueueableEntities($payload[<span class=\"string\">'data'</span>]));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">通过@分割类和方法，调用CallQueuedHandler的call方法处理队列</span><br><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">parseJob</span><span class=\"params\">($job)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    $segments = explode(<span class=\"string\">'@'</span>, $job);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> count($segments) &gt; <span class=\"number\">1</span> ? $segments : [$segments[<span class=\"number\">0</span>], <span class=\"string\">'fire'</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">调用call方法，取出队列任务$command，调用Dispatch类的dispatchNow方法处理任务</span><br><span class=\"line\">CallQueuedHandler.php</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">call</span><span class=\"params\">(Job $job, array $data)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    $command = <span class=\"keyword\">$this</span>-&gt;setJobInstanceIfNecessary(</span><br><span class=\"line\">        $job, unserialize($data[<span class=\"string\">'command'</span>])</span><br><span class=\"line\">    );</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">$this</span>-&gt;dispatcher-&gt;dispatchNow($command, <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">($handler)</span> <span class=\"title\">use</span> <span class=\"params\">($job)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;setJobInstanceIfNecessary($job, $handler);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (! $job-&gt;isDeletedOrReleased()) &#123;</span><br><span class=\"line\">        $job-&gt;delete();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">队列类继承了SelfHandling接口，可以直接执行handle方法，afterResolving匿名函数貌似没有执行</span><br><span class=\"line\">Dispatch.php</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">dispatchNow</span><span class=\"params\">($command, Closure $afterResolving = null)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;pipeline-&gt;send($command)-&gt;through(<span class=\"keyword\">$this</span>-&gt;pipes)-&gt;then(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">($command)</span> <span class=\"title\">use</span> <span class=\"params\">($afterResolving)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ($command <span class=\"keyword\">instanceof</span> SelfHandling) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;container-&gt;call([$command, <span class=\"string\">'handle'</span>]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        $handler = <span class=\"keyword\">$this</span>-&gt;resolveHandler($command);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> ($afterResolving) &#123;</span><br><span class=\"line\">            call_user_func($afterResolving, $handler);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> call_user_func(</span><br><span class=\"line\">            [$handler, <span class=\"keyword\">$this</span>-&gt;getHandlerMethod($command)], $command</span><br><span class=\"line\">        );</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">进入Container类的call方法，执行getMethodDependencies方法获取类的所有依赖，然后通过call_user_func_array函数调用[$command, <span class=\"string\">'handle'</span>]方法，参数为获取到的依赖对象</span><br><span class=\"line\">Container.php</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">call</span><span class=\"params\">($callback, array $parameters = [], $defaultMethod = null)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">$this</span>-&gt;isCallableWithAtSign($callback) || $defaultMethod) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;callClass($callback, $parameters, $defaultMethod);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    $dependencies = <span class=\"keyword\">$this</span>-&gt;getMethodDependencies($callback, $parameters);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> call_user_func_array($callback, $dependencies);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">通过反射获取匿名函数的所有依赖</span><br><span class=\"line\">Container.php</span><br><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getMethodDependencies</span><span class=\"params\">($callback, array $parameters = [])</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    $dependencies = [];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">foreach</span> (<span class=\"keyword\">$this</span>-&gt;getCallReflector($callback)-&gt;getParameters() <span class=\"keyword\">as</span> $key =&gt; $parameter) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;addDependencyForCallParameter($parameter, $parameters, $dependencies);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> array_merge($dependencies, $parameters);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>执行完成后删除</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">回到$job-&gt;isDeletedOrReleased(),此处将队列任务删除</span><br><span class=\"line\"></span><br><span class=\"line\">RedisJob.php</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isDeletedOrReleased</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;isDeleted() || <span class=\"keyword\">$this</span>-&gt;isReleased();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">RedisJob.php</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">delete</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">parent</span>::delete();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">$this</span>-&gt;redis-&gt;deleteReserved(<span class=\"keyword\">$this</span>-&gt;queue, <span class=\"keyword\">$this</span>-&gt;job);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">将任务从redis为$queue:reserved的列表中删除，此处队列正常处理即为完成</span><br><span class=\"line\">RedisQueue.php</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">deleteReserved</span><span class=\"params\">($queue, $job)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">$this</span>-&gt;getConnection()-&gt;zrem(<span class=\"keyword\">$this</span>-&gt;getQueue($queue).<span class=\"string\">':reserved'</span>, $job);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>触发处理后的事件illuminate.queue.after<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">激活illuminate.queue.after事件，参数为redis连接，任务，还有任务类</span><br><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">raiseAfterJobEvent</span><span class=\"params\">($connection, Job $job)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">$this</span>-&gt;events) &#123;</span><br><span class=\"line\">        $data = json_decode($job-&gt;getRawBody(), <span class=\"keyword\">true</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;events-&gt;fire(<span class=\"string\">'illuminate.queue.after'</span>, [$connection, $job, $data]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">在AppServiceProvider.php中注册illuminate.queue.after事件</span><br><span class=\"line\">Queue::after(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">($connection, $job, $data)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 写日志</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"异常处理\"><a href=\"#异常处理\" class=\"headerlink\" title=\"异常处理\"></a>异常处理</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">首先看process方法的异常，抛出异常后执行$job-&gt;release($delay)方法，RedisJob::delete()方法为上面分析的删除方法，此处会把$queue:reserved的值删除。也就是说队列会把正在处理的任务放到delayed队列中。</span><br><span class=\"line\">设置延迟时间为参数中的--delay参数，</span><br><span class=\"line\">RedisJob.php</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">release</span><span class=\"params\">($delay = <span class=\"number\">0</span>)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">parent</span>::release($delay);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">$this</span>-&gt;delete();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">$this</span>-&gt;redis-&gt;release(<span class=\"keyword\">$this</span>-&gt;queue, <span class=\"keyword\">$this</span>-&gt;job, $delay, <span class=\"keyword\">$this</span>-&gt;attempts() + <span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">设置当前任务的的attempts次数+<span class=\"number\">1</span>，同时添加到$queue:delayed的队列中，超时时间为当前时间+延迟秒数</span><br><span class=\"line\">RedisQueue.php</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">release</span><span class=\"params\">($queue, $payload, $delay, $attempts)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    $payload = <span class=\"keyword\">$this</span>-&gt;setMeta($payload, <span class=\"string\">'attempts'</span>, $attempts);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">$this</span>-&gt;getConnection()-&gt;zadd(<span class=\"keyword\">$this</span>-&gt;getQueue($queue).<span class=\"string\">':delayed'</span>, <span class=\"keyword\">$this</span>-&gt;getTime() + $delay, $payload);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">pop方法的异常处理，发送消息通知</span><br><span class=\"line\"><span class=\"keyword\">$this</span>-&gt;exceptions-&gt;report($e);</span><br></pre></td></tr></table></figure>\n<p>疑问点：<br>如果redis处理过程中down掉，存在reserved中数据不会清掉</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjlhq4qw20000qkka3jxspt2q","category_id":"cjlhq4qwd0004qkka4uszypym","_id":"cjlhq4qwu000hqkkai1phyqio"},{"post_id":"cjlhq4qwj0009qkkapu25y9hd","category_id":"cjlhq4qwd0004qkka4uszypym","_id":"cjlhq4qwy000lqkkaxerhqytu"},{"post_id":"cjlhq4qw90002qkkacpfqi0xy","category_id":"cjlhq4qwd0004qkka4uszypym","_id":"cjlhq4qx1000oqkkaumf58z9u"},{"post_id":"cjlhq4qwf0006qkkao17q0nx4","category_id":"cjlhq4qwd0004qkka4uszypym","_id":"cjlhq4qx5000tqkka9dz2n1ep"},{"post_id":"cjlhq4qx2000rqkkawpj471ol","category_id":"cjlhq4qwd0004qkka4uszypym","_id":"cjlhq4qx90010qkkapodxkm3u"},{"post_id":"cjlhq4qwi0008qkkapo28s26k","category_id":"cjlhq4qwz000nqkkajccwzq0o","_id":"cjlhq4qxb0015qkkaoxh2yfnq"},{"post_id":"cjlhq4qx4000sqkkai1dxssoa","category_id":"cjlhq4qwd0004qkka4uszypym","_id":"cjlhq4qxd0018qkkanyod035a"},{"post_id":"cjlhq4qwo000dqkkahn7a7gsw","category_id":"cjlhq4qx5000uqkkal569cfte","_id":"cjlhq4qxe001dqkkavb6hjpub"},{"post_id":"cjlhq4qx8000zqkka31f9ui3x","category_id":"cjlhq4qwd0004qkka4uszypym","_id":"cjlhq4qxg001gqkkaj6r6qjeh"},{"post_id":"cjlhq4qxa0014qkkaa2qkn1xk","category_id":"cjlhq4qwd0004qkka4uszypym","_id":"cjlhq4qxj001kqkkas8ev9t66"},{"post_id":"cjlhq4qwr000fqkkaqkpm9kuv","category_id":"cjlhq4qx90011qkkastl90c93","_id":"cjlhq4qxk001oqkkafxr3g4ws"},{"post_id":"cjlhq4qxc0017qkkaycst8c46","category_id":"cjlhq4qwd0004qkka4uszypym","_id":"cjlhq4qxm001rqkkarup4lwei"},{"post_id":"cjlhq4qxe001cqkka59lsn02u","category_id":"cjlhq4qwd0004qkka4uszypym","_id":"cjlhq4qxn001uqkkavwi6887l"},{"post_id":"cjlhq4qwx000kqkka8lapjxmr","category_id":"cjlhq4qx5000uqkkal569cfte","_id":"cjlhq4qxo001xqkkahpzqpxdx"},{"post_id":"cjlhq4qxg001fqkka8ufquhth","category_id":"cjlhq4qwz000nqkkajccwzq0o","_id":"cjlhq4qxp0020qkka5z2eqwvi"},{"post_id":"cjlhq4qxi001jqkkadpalhknj","category_id":"cjlhq4qwd0004qkka4uszypym","_id":"cjlhq4qxq0022qkkacp3r154k"},{"post_id":"cjlhq4qxk001nqkkazda4be2e","category_id":"cjlhq4qwd0004qkka4uszypym","_id":"cjlhq4qxq0024qkkaqtnvtcrh"},{"post_id":"cjlhq4qwz000mqkkaheaqv60o","category_id":"cjlhq4qxh001iqkka7fap49f4","_id":"cjlhq4qxq0025qkkace5clr4z"},{"post_id":"cjlhq4qx6000xqkkak2ite51z","category_id":"cjlhq4qxh001iqkka7fap49f4","_id":"cjlhq4qxr0026qkkaps4z3gz4"},{"post_id":"cjlhq4qxl001qqkkak11est41","category_id":"cjlhq4qxp001yqkkas5jfnh96","_id":"cjlhq4qxr0027qkkaarg4ulww"},{"post_id":"cjlhq4r0h0028qkka6gv51mip","category_id":"cjlhq4r0i0029qkkaf0ziyl31","_id":"cjlhq4r0j002cqkka6b6rbzy2"}],"PostTag":[{"post_id":"cjlhq4qw20000qkka3jxspt2q","tag_id":"cjlhq4qwf0005qkkakhoxw1de","_id":"cjlhq4qwn000cqkka1g75ijdf"},{"post_id":"cjlhq4qwj0009qkkapu25y9hd","tag_id":"cjlhq4qwf0005qkkakhoxw1de","_id":"cjlhq4qwq000eqkkaaw4t9d5o"},{"post_id":"cjlhq4qw90002qkkacpfqi0xy","tag_id":"cjlhq4qwf0005qkkakhoxw1de","_id":"cjlhq4qwx000jqkkacthvibpq"},{"post_id":"cjlhq4qwf0006qkkao17q0nx4","tag_id":"cjlhq4qwf0005qkkakhoxw1de","_id":"cjlhq4qx2000qqkkav1odkqn4"},{"post_id":"cjlhq4qx2000rqkkawpj471ol","tag_id":"cjlhq4qwf0005qkkakhoxw1de","_id":"cjlhq4qx6000wqkkan8t5yitk"},{"post_id":"cjlhq4qwi0008qkkapo28s26k","tag_id":"cjlhq4qx1000pqkkaiffrzsp8","_id":"cjlhq4qx7000yqkka6t3ctnq0"},{"post_id":"cjlhq4qx4000sqkkai1dxssoa","tag_id":"cjlhq4qwf0005qkkakhoxw1de","_id":"cjlhq4qxa0013qkka76fa30zy"},{"post_id":"cjlhq4qwo000dqkkahn7a7gsw","tag_id":"cjlhq4qx5000vqkka1dmtrcht","_id":"cjlhq4qxb0016qkka059ju0x0"},{"post_id":"cjlhq4qx8000zqkka31f9ui3x","tag_id":"cjlhq4qwf0005qkkakhoxw1de","_id":"cjlhq4qxd0019qkkaxh4mchqp"},{"post_id":"cjlhq4qxa0014qkkaa2qkn1xk","tag_id":"cjlhq4qwf0005qkkakhoxw1de","_id":"cjlhq4qxf001eqkkakyj8lxch"},{"post_id":"cjlhq4qwr000fqkkaqkpm9kuv","tag_id":"cjlhq4qx90012qkkawwdn0nf3","_id":"cjlhq4qxh001hqkkamy1t6yzi"},{"post_id":"cjlhq4qxc0017qkkaycst8c46","tag_id":"cjlhq4qwf0005qkkakhoxw1de","_id":"cjlhq4qxk001mqkka8j3f385q"},{"post_id":"cjlhq4qxe001cqkka59lsn02u","tag_id":"cjlhq4qwf0005qkkakhoxw1de","_id":"cjlhq4qxl001pqkka2et08d16"},{"post_id":"cjlhq4qwx000kqkka8lapjxmr","tag_id":"cjlhq4qx5000vqkka1dmtrcht","_id":"cjlhq4qxn001tqkkaa57zugpw"},{"post_id":"cjlhq4qxi001jqkkadpalhknj","tag_id":"cjlhq4qwf0005qkkakhoxw1de","_id":"cjlhq4qxo001wqkkaaw9toq08"},{"post_id":"cjlhq4qxk001nqkkazda4be2e","tag_id":"cjlhq4qwf0005qkkakhoxw1de","_id":"cjlhq4qxp001zqkkas45m1bmp"},{"post_id":"cjlhq4qxg001fqkka8ufquhth","tag_id":"cjlhq4qxj001lqkkauhgt579r","_id":"cjlhq4qxq0021qkkagv1efepu"},{"post_id":"cjlhq4qxl001qqkkak11est41","tag_id":"cjlhq4qxo001vqkkaz4j8xwar","_id":"cjlhq4qxq0023qkka93mexzwf"},{"post_id":"cjlhq4r0h0028qkka6gv51mip","tag_id":"cjlhq4r0i002aqkka92i1ikx8","_id":"cjlhq4r0j002bqkkannvo9zo4"}],"Tag":[{"name":"算法","_id":"cjlhq4qwf0005qkkakhoxw1de"},{"name":"composer","_id":"cjlhq4qx1000pqkkaiffrzsp8"},{"name":"docker","_id":"cjlhq4qx5000vqkka1dmtrcht"},{"name":"网络","_id":"cjlhq4qx90012qkkawwdn0nf3"},{"name":"php","_id":"cjlhq4qxj001lqkkauhgt579r"},{"name":"vi","_id":"cjlhq4qxo001vqkkaz4j8xwar"},{"name":"laravel","_id":"cjlhq4r0i002aqkka92i1ikx8"}]}}